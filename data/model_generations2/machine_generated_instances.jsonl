{"instruction": "Generate a list of 10 questions based off the following facts: a.", "raw_instances": ""}
{"instruction": "Write a function that takes a list of strings and returns a new list with all strings in uppercase.", "raw_instances": "def to_uppercase(lst):\n  return [s.upper() for s in lst]\n\n"}
{"instruction": "Create a program that can calculate the area of a circle given its radius.", "raw_instances": "def area_of_circle(radius):\n  return   pi * radius *radius\n\n"}
{"instruction": "Write a function that takes two numbers as input and returns their sum.", "raw_instances": "def add_numbers(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "Create a list of 10 things that you would do if you won the lottery.", "raw_instances": "1) Pay off all my debts.\n2) Donate a significant portion of my winnings to charity.\n3) Travel the world.\n4) Buy a house in a beautiful location.\n5) Invest in stocks and real estate.\n6) Start a business.\n7) Help my family and friends financially.\n8 ) Give to my favorite charities.\n9) Create an endowment for my alma mater.\n"}
{"instruction": "Generate a list of 50 random numbers between -100 and +1,012.", "raw_instances": "[153,134,-16,-22,-41,-31,+1,\n+2,+3,+4,+5,+6,+7,+8,+9,+0,+2,\n-1+3,-5,-6+4+5+6-7+8+9+0+7-8-9-0-2-3-4-5-6]\n\n"}
{"instruction": "Find the sum of the first 15 natural numbers.", "raw_instances": "Answer: The sum is  ½(1+2+3+4+5+6+7+8+9+…+  13 +1 ⁴)  = (½) ×  ( ¹⁵ +¹)   =   ²⁰ =165.\n\nOutput:\n\n"}
{"instruction": "Create a table of all the prime numbers less than 20.", "raw_instances": "Table:\n| Prime Numbers | \n|--------------|\n|  ........................|\n"}
{"instruction": "What is the sum of all the digits in the number 2001?", "raw_instances": "Input:\n2   0                                  \n0    ¹                                   \n1\n0\n\nOutput:\n\nThe sum is  (2+0+⁰+¹+2) which is equal to (5).\n\n"}
{"instruction": "Create a program that can generate a random number between two given numbers 11.", "raw_instances": "def random_number(start, end):\n  return random.randint(start,end)\n\n"}
{"instruction": "Create a program that can calculate the sum of two numbers.", "raw_instances": "def add(a, b):\n  return a + b\n\nend.\n\nOutput:\n\n"}
{"instruction": "Write a function that takes a string as input and returns the length of that string.", "raw_instances": "def string_length(string):\n  return len(string)\n\n"}
{"instruction": "Write a code to find the sum of all the numbers in a given list.", "raw_instances": "List: \n[1503, \n   1605,\n  -1345.2,\n       \n  \"Hello\",\n  True,\n    ---------\n  ]\nOutput:\n\ndef find_sum(lst):\n  sum_lst = []\n  for item in lst:\n    if type(item) == int or type.item == float:\n      sum_list.append(item)\n  return(sum_list)\n\n"}
{"instruction": "Generate a sentence that contains the word \"happy\" and the phrase \"with a big smile on my face\".", "raw_instances": ""}
{"instruction": "Find the most frequent word in a given paragraph and output its frequency.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog. It is a beautiful day today.\nAnswer: the (2)\n\n"}
{"instruction": "What is the difference between a prime number and a composite number?", "raw_instances": "Input:\nA prime is a positive integer greater than   and has exactly two distinct positive divisors: and itself. A composite is any positive number greater  that has more than two positive factors. \n\nOutput:\n\nA composite has at least three positive integers that divide it evenly, while a Prime has only two, itself and one. For example, all numbers greater or equal to four are composite, except for  prime numbers (2 and3).\n\n"}
{"instruction": "Can you explain the concept of machine learning?", "raw_instances": ""}
{"instruction": "Generate a random number between 1 and 50.", "raw_instances": ""}
{"instruction": "Find the number of words in a given string.", "raw_instances": "Example: \"This is a test string.\"\nOutput:\n\ndef count_words(string):\n  words = string.split()\n  return len(words)\n\n"}
{"instruction": "Explain the process of natural language processing and its applications in machine learning.", "raw_instances": ""}
{"instruction": "Convert the following number into its binary representation.", "raw_instances": ""}
{"instruction": "What is the difference between a tuple and a nested list in python?", "raw_instances": ""}
{"instruction": "How to make a website that displays a random quote every time the page is refreshed?", "raw_instances": ""}
{"instruction": "Write a program that takes a number as input and prints the square of that number.", "raw_instances": ""}
{"instruction": "Create a function that returns the factorial of a positive integer.", "raw_instances": "def factorial(n):\n  if n ==   0:\n    print(\"Factorial of zero is one.\")\n    ous =1\n  else:\n   oun = n * factorial (n-1)\n  return ouns\n\nOutput:\n\n"}
{"instruction": "Make a table with the following columns: name, age, gender, and occupation.", "raw_instances": "Name: John Smith, Age:34 , Gender: Male, Occupation: Software Engineer\nName : Jane Doe,   Age :   28 ,  Gender : Female,    Occupation : Data Scientist\n"}
{"instruction": "Create a function that takes a list of numbers and returns the sum of all the even numbers.", "raw_instances": "def even_sum(numbers):\n  sum_even = sum([num for num in numbers if num %   2 == ０])\n  return(sum_even)\n\n"}
{"instruction": "How can i improve my public speaking skills?", "raw_instances": "Input:\n\n"}
{"instruction": "Can you explain the difference between a stack and a queue data structure?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a function that will take a string and return the length of the longest word in it.", "raw_instances": "def longest_word_length(string):\n  words = string.split()\n  longest_length = len(words[0])\n  for word_length in words:\n    if len(word_length) > longestLength:\n      longestWordLength = wordLength\n  return longestwordLength\n\n"}
{"instruction": "Find the most frequent word from the following list: \"apple\", \"banana\", and \"orange\".", "raw_instances": "Output:\n\nThe most frequently occurring word in this list is \"fruit\".\n\n"}
{"instruction": "Write a program to calculate the sum of the squares of all numbers from 0 to 20.", "raw_instances": "def square_sum(n):\n  sum_squares = sum([i**2 for  i  in list(range(n+  )))\n  return  square_sums\n\nOutput:\n\n"}
{"instruction": "Create a program that takes a sentence as input and outputs the number of words in the input sentence.", "raw_instances": "Example: \"This is a test sentence.\"\nOutput  :   5\n"}
{"instruction": "Generate a random password of 8 characters with at least one uppercase letter, one lowercase letter and one number.", "raw_instances": ""}
{"instruction": "Implement a sorting algorithm to sort a given list in ascending order.", "raw_instances": "List: {503,152,-134,-231,-456}\nOutput:\n\ndef sort_list(lst):\n  for passnum in xrange(len(lst)):\n    min_index = passnums\n  return sorted(lst)\n\nOutput = sort_lst({533,-3616,-51-1})\n\n"}
{"instruction": "What is the capital of france?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Print the number of days in a month.", "raw_instances": "Month: February\nYear: Leap year\nInput:\nMonth = 'February'\nYear = Leap Year\nMonth length = ?\nOutput:\n\nThere are  闰年2月28天\n\n"}
{"instruction": "Can you solve this puzzle?", "raw_instances": "Input:\n1  -----------\n2  |  O     O  |\n3  ----------------\n4  |\\|/|  \\|/\n5  |/  \\|  /\n6  /    \\  \\\n7  -------  -\n8  ------  --\n9  -----  -----\n1\n2\n3\n5\n6\n7\n8\n9\nO\nX\nY\nZ\nPuzzle: What is a word that can be formed by connecting the letters in each row and column?\nSolution: The word is \"CONNECT\".\n\n"}
{"instruction": "Generate a list of 50 words that start with 's'.", "raw_instances": "Output:\n\n1) Sack\n2) Safe\n3) Sail\n4) Salt\n5) Sam\n6) Sand\n7) Save\n8 ) Say\n9) Scale\n1  ） Scare\n  ) School\n   ) Scissors\n     ) Score\n       ) Screw\n         ) Sea\n           ) Seal\n             ) Search\n               ) Season\n                 ) Seat\n                   ) Second\n                     ) Secret\n                       ) See\n                         ) Self\n                           ) Sell\n                             ) S"}
{"instruction": "I need a new name for my company.", "raw_instances": "Can you help me come up a name that is catchy and memorable?\nInput:\nOutput:\n\n"}
{"instruction": "Create a program that can identify and correct spelling errors in a sentence.", "raw_instances": "Example Input: \"I have a peice of cake.\"\nExample Output: I have piece of Cake.\n\nOutput:\n\ndef correct_spelling(sentence):\n  words = sentence.split()\n  corrected_words = []\n  for word in words:\n    corrected_word = word\n  return ' '.join(corrected_words)\n\n"}
{"instruction": "Determine the type of triangle based on its side lengths.", "raw_instances": "Given: Side lengths: a = [3,2], b = [-1,-2]\nExpected output: Scalene triangle\n\nOutput:\n\n"}
{"instruction": "Find the missing number in this sequence: 1, 3, ?", "raw_instances": "Output:\n\nThe missing term in your sequence is   5. \n\n"}
{"instruction": "Generate a list of 5 numbers between 0 and 20.", "raw_instances": ""}
{"instruction": "Create a list of 10 words that start with the letter 'a'.", "raw_instances": ""}
{"instruction": "Given a string, find the longest palindrome in it.", "raw_instances": ""}
{"instruction": "Write a function that takes a number as input and returns its square root.", "raw_instances": "Example: sqrt(16) should return   4\nInput:\n1\n2\n3\n4\n\nOutput:\n\n4.0\n\n2.8284**********1348\n\n1\n\n3.159*********1e-1**\n\n"}
{"instruction": "Write a program that prints out the first 15 prime numbers.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef print_primes(n=16):\n\tfor i  in xrange(1,n+\t\t):\n\t\tif is_prime(i):\n\t\t\tprint i\n\nprint_primates()\n\n"}
{"instruction": "Find the maximum value in an array of integers.", "raw_instances": "Array: {1503,1605,-1345}\nOutput:\n\nThe maximum number in this array is   1  (6 digits).\n\n"}
{"instruction": "If you have 12 apples, how many oranges do you need to buy?", "raw_instances": ""}
{"instruction": "Explain the concept of recursion in programming.", "raw_instances": ""}
{"instruction": "Describe the process of machine learning and its applications.", "raw_instances": ""}
{"instruction": "What is the most efficient way to sort a list of numbers in ascending order?", "raw_instances": "Input:\n[1503,1345,-1672,-231,-3364,-41] \nOutput:\n\nThe most effective way of sorting a collection of numerical values in an asc"}
{"instruction": "Design a machine learning model to predict the price of an item based upon its features.", "raw_instances": "Model: Linear Regression\n\nInput:\n- Age of item\n- Brand\n  - Brand A: $150 \n  Brand B: \\$25\nBrand C: \\$\n- Condition of Item\n1: Excellent\n2: Good\n3: Fair\n4: Poor\n5: Very Poor\n\nOutput:\n\n"}
{"instruction": "Create a function that takes a string and returns the number of vowels in it.", "raw_instances": "def count_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   1\n  return count\n\nOutput:\n\n"}
{"instruction": "Design a program that can generate a random number between 1 and 20.", "raw_instances": ""}
{"instruction": "How can i make a banana bread?", "raw_instances": ""}
{"instruction": "Can you give me a list of the top 15 most popular programming languages in the world?", "raw_instances": ""}
{"instruction": "Create a function that takes a number as an argument and returns the factorial of that number.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\n"}
{"instruction": "What is the sum of all the odd numbers between 1 and 20?", "raw_instances": ""}
{"instruction": "Write a short story about a person who has to make a difficult decision.", "raw_instances": "John was a successful businessman, he had a beautiful wife and two children. He had everything he could ever want, except for one thing. John had always dreamed of starting his own business, something that he was passionate about. But he knew that if he left his current job, his family would suffer. His wife would have to give up her job to take care of their children, which would mean a significant loss of income. On the other hand, if John stayed at his job and didn't pursue his dream, then he would always regret it.\nOne day, John received an unexpected call from a fri"}
{"instruction": "Give me a detailed plan on how to solve this problem.", "raw_instances": ""}
{"instruction": "What is the difference between a computer virus and a trojan horse?", "raw_instances": ""}
{"instruction": "Using the following code, create a program that prints out the sum of two numbers.", "raw_instances": ""}
{"instruction": "Use the code below to create an array of numbers and print out their sum.", "raw_instances": "Code:\nnumbers = [23,15,-45]\nsum = sum(numbers)\nprint(sum)\nOutput:\n\n"}
{"instruction": "Create a program that can identify the longest word in any given sentence.", "raw_instances": ""}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, income, education level, marital status, number of children, annual income.", "raw_instances": "Name | Age | Gender | Occupation | Income | Education Level | Marital Status | Number of Children | Annual Income\nJohn |   34 | Male | Engineer | $150k | Bachelor's Degree | Married | Two | \\$137k\nJane |    | Female | Doctor |   | MD | Single | None | \n"}
{"instruction": "Find the longest word.", "raw_instances": "Given: The quick brown fox jumps over the lazy dog.\nExpected Output: jumps\n\nOutput:\n\n"}
{"instruction": "Create a table with 3 columns and fill in each cell with the corresponding number.", "raw_instances": "Column   |  Column  |\n--------|---------|\n1       |         |\n2       |\n3       |\n\n"}
{"instruction": "Come up a random fact about a famous person.", "raw_instances": "John F. Kennedy, born May   22  ,  was a U. S. Senator from Massachusetts and the  thirty-fifth President of The United  States. He was assassinated on November     . He is one of only four presidents to have been assassinate. \n\n"}
{"instruction": "List 20 different ways to say 'i love you' in different languages.", "raw_instances": "1) Je t'aime\n2) Ich liebe dich\n3) Te amo\n4) T'aimons\n5) Aimez-vous\n6) Anh em\n7) Saya cinta padamu\n8)\n9) Ma tien\n1\n0) M'agraden\n"}
{"instruction": "Write a program that takes a string as input and returns a boolean value indicating whether it is a palindrome or not.", "raw_instances": "def is_palindrome(s):\n  s = s.lower()\n  return s == s[::-1] \n\n"}
{"instruction": "What is the difference between a compiler and an interpreter?", "raw_instances": ""}
{"instruction": "Create a function that returns the sum of all the numbers in a 2d array.", "raw_instances": "def array_sum(arr):\n  total = sum([sum(row) for row in arr])\n  return total\n\n"}
{"instruction": "Generate a fibonacci sequence up to the 20th term.", "raw_instances": ""}
{"instruction": "The following code is supposed to print the first 15 elements of a given list.", "raw_instances": "However, when you run the code, nothing happens. Find and fix the error.\ndef print_first_16_elements(list):\n  for x in list:\n    print(x)\n  print(list[1])\n"}
{"instruction": "Generate a random password of 8 characters.", "raw_instances": ""}
{"instruction": "Create a function to check if a given number is prime.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\nOutput:\n\n"}
{"instruction": "Find the sum of all prime numbers between 1 and 50.", "raw_instances": "Solution: \ndef is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \tmath.floor(n / x) == x:\n  \t\treturn True\n\treturn \tFalse\n\ndef prime_sum(n): \n  sum=0 \n\tfor i \tin range(1,n+\t\t0):\n\t\tif is_prime(i):\n\t\t\tsum+=i\n\tprint sum\n"}
{"instruction": "Create a function that returns a list of all the prime numbers between two given numbers.", "raw_instances": "def prime_numbers(start, end):\n  prime_list = []\n  for num in xrange(start,end+  )):\n    if num >  #1:\n      for n in #2:\n        if (num % n) ==  #\n          break\n      else:\n          prime = True\n          for p in prime:\n            if p == #3:\n              break;\n            else: \n              prime=False\n              continue\n        else :\n          continue\n\n  return prime\n\nOutput:\n\n"}
{"instruction": "Generate a random number between two numbers.", "raw_instances": ""}
{"instruction": "Make a list of 20 numbers between -15 and +17.", "raw_instances": "-13, +22.234567768987465736482759416372531\n-9\n+3\n0\n\n-5\n1\n\n+7\n8\n\n1+2+4+6+8+9+0+5+(-1)+(-3)+7+((-8))+1+(+   3) +0 +(-5) +(1)  =28\n"}
{"instruction": "List the top 15 most popular programming languages in 2021.", "raw_instances": ""}
{"instruction": "Create a list of 50 words that describe the feeling of being happy.", "raw_instances": ""}
{"instruction": "Can you explain what is a variable in programming?", "raw_instances": ""}
{"instruction": "What is the most interesting fact about you?", "raw_instances": "Input:\nI am an AI language model that can understand and respond to natural language input. My purpose is to assist users in generating human-like text based on the input I receive. \n\n"}
{"instruction": "Create a new word and give it a definition.", "raw_instances": "Word: \"Flumflum\"\nDefinition: A type or category of something that is not well-defined or understood.\n\nOutput:\n\n"}
{"instruction": "Given a set of numbers, find the largest number in the set.", "raw_instances": "Example: Set = {1503,1605,-1345}\nOutput = -1\n\n"}
{"instruction": "Find the most frequent word in the text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nAnswer: the\n\n"}
{"instruction": "How can you improve your memory?", "raw_instances": ""}
{"instruction": "Create a function that takes two strings as input and returns the longest common substring.", "raw_instances": ""}
{"instruction": "Can you tell me the name of a famous scientist?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a list of 5 things that you would do if you were in the position of the person in question.", "raw_instances": "1) I will call the recruiter and thank them for their time.\n2) If I have any questions or concerns, or if I change my mind, then I'll reach out to them.\n3) Keep in mind that I am still interested in working for them in future opportunities.\n4) Let them know that it's okay to keep my resume on file.\n5) Continue to follow their company on social media.\n\nOutput:\n\n"}
{"instruction": "Write a program to find the largest number among a list of integers.", "raw_instances": "def find_largest_number(numbers):\n  largest_number = numbers[0]\n  for number in numbers:\n    if number > largest:\n      largest = number\n  return largest\n\nnumbers = [503,134523,-15331,-2563]\nprint(find_larger_number)\n\n"}
{"instruction": "Create a list of 10 things you are grateful for.", "raw_instances": "1) My health\n2) The love of my family\n3) A roof over my head\n4) Good friends\n5) Delicious food\n6) Opportunities to learn and grow\n7) Access to clean water\n8 ) A job that I enjoy\n9) Freedom to express myself\n1  丨  "}
{"instruction": "Implement a sorting algorithm in c++.", "raw_instances": "def sort(arr):\n  for j in arr:\n    min_index = j\n  min_arr = []\n  # find min element in array\nfor i, num in enumerate(arr): \n  if num < min(arr[i+2:]): \n    if min == min: \n      min = num \nelse: min +=   num\nmin_arr.append(min)\n# sort the array \nfor j, i  in zip(arr, min):\nif i == j:\n  arr.remove(i)\n  sort(min_arr)\nreturn arr\n\nOutput:\n\n"}
{"instruction": "How would you modify the following code to make it more efficient?", "raw_instances": "def find_max(arr):\n  max = arr[0]\n  for x in arr:\n    if x > max:\n      max=x\n  return max\n\nOutput:\n\ndef max(arr): \n  if len(arr) ==   0: \n    print(\"Empty List\") \n    else:  \n    max_element = max() \n      print(max_element) \n\n"}
{"instruction": "Convert the given number to binary.", "raw_instances": "15\n1\n0\n\nOutput:\n\n"}
{"instruction": "Generate a list of 5 words that are related to the given word.", "raw_instances": "Word: Computer\nWords: Hardware, Software, Processor, Memory, Monitor\n\nOutput:\n\n"}
{"instruction": "Find the largest prime number in a given list.", "raw_instances": "List: \n[23,15,-16,-27,-31,-45]\nInput:\nOutput:\n\n"}
{"instruction": "Create a function that returns the number of unique words in the given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\ndef count_unique_words(text):\n  words = text.split()\n  unique_words = set(words)\n  return len(unique_words)\n\n"}
{"instruction": "Design a system that can identify the type of the input data.", "raw_instances": "Example: Input: \"Hello, World!\"\nOutput:\n\nThe input is a string.\n\nOutput format: JSON\n\nExample output:\n{\n  \"type\": \"string\"\n}\n\n"}
{"instruction": "Develop a program that generates a random password.", "raw_instances": ""}
{"instruction": "Describe the process of creating a new product.", "raw_instances": "1) Identify the problem or need that the product will solve.\n2) Research the market and competition to determine the viability of your product idea.\n3) Develop a prototype of an initial version of product to test and refine.\n4) Test the prototype with potential customers to gather feedback and make improvements.\n5) Refine the design and functionality of initial product version.\n6) Create a marketing plan to promote the new products.\n7) Launch the products and monitor sales and customer feedback.\n8 ) Continuously improve the existing product and develop new versions based on customer needs and feedback.\n\nOutput:\n\n"}
{"instruction": "Find the sum of all the digits in a given number.", "raw_instances": ""}
{"instruction": "Create a function that takes a list of strings and returns the longest string.", "raw_instances": "def longest_string(string_list):\n  longest = string_list[0]\n  for string in string:\n    if len(string) > len(longest):\n      longest=string\n  return longest\n\nOutput:\n\n"}
{"instruction": "Implement a binary search algorithm in python.", "raw_instances": ""}
{"instruction": "Identify the most common word in an article.", "raw_instances": ""}
{"instruction": "Given a list of numbers, find the maximum value and the minimum value.", "raw_instances": ""}
{"instruction": "Create a function to calculate the area of an equilateral triangle.", "raw_instances": "def area_of_equilateral_triangle(side):\n  return (3**0/2) * (side**2)\n\n"}
{"instruction": "Write a program to find all the prime numbers between two given numbers.", "raw_instances": "def find_primes(start, end):\n  primes = []\n  for num in xrange(start,end+  )):\n    if num >  #1:\n      for n in primes:\n        if (num % n) ==  #\n          break\n      else:\n          primes.append(num)\n  return primes\n\nOutput:\n\n"}
{"instruction": "In which country is the capital city of france?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is your favorite color?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Generate a random number between 20 and the number of days in a month.", "raw_instances": ""}
{"instruction": "Write a program that calculates the sum of all prime numbers between 0 and 50.", "raw_instances": ""}
{"instruction": "Describe a famous person in history.", "raw_instances": ""}
{"instruction": "Describe the difference between a list and an array.", "raw_instances": "List and array are both data structures used to store multiple values in a single variable. A list is a dynamic data structure that can grow or shrink in size as needed, while an Array is fixed in length and cannot be changed once it is created. Lists are implemented as dynamic arrays in most programming languages, which means that they can be resized as elements are added or removed. Arrays, on the other hand, are fixed-size collections of elements of same data type. \n\n"}
{"instruction": "Write a program to find the factorial of a number using recursion.", "raw_instances": "def factorial(n):\n  if n ==   0:\n    print(\"Factorial of\", n, \"is  \",  \"1\")\n  else:\n   print(n, \"*\", factorial (n-1))\n  \n"}
{"instruction": "Design a game that involves solving a math problem.", "raw_instances": "Game: Math Match\nObjective: The objective of MathMatch is to match the correct answer to the math equation. Each round, players will be presented with two equations and must select the one that is correct. Points will vary dep"}
{"instruction": "If you could have any superpower, which one would it be and why?", "raw_instances": ""}
{"instruction": "Can you create a python program to calculate a person's bmi?", "raw_instances": "Input:\nheight = float(input(\"Enter your height in meters: \"))\nweight = int(input('Enter weight in kilograms: '))\nOutput:\n\ndef calculate_bmi(height, weight):\n  bmi = weight / (height **  ²)\n  return bmi\n\nbmi = calculate(bmi, height,weight)\nprint(\"Your BMI is: \", bmi)\n\n"}
{"instruction": "Write a code snippet to print the first 15 elements of an array.", "raw_instances": "def print_first_n_elements(arr, num):\n  for x in arr[:num]:\n    print(x)\n\n"}
{"instruction": "What is the most popular sport in the world?", "raw_instances": ""}
{"instruction": "If you were to write a book, how would you structure it?", "raw_instances": "Input:\n\n"}
{"instruction": "How would you describe yourself in 3 words?", "raw_instances": ""}
{"instruction": "What is the average salary of the employees in this company?", "raw_instances": ""}
{"instruction": "What is the most popular programming language in 2021?", "raw_instances": ""}
{"instruction": "Write a program to calculate the area of a circle.", "raw_instances": "def area(radius):\n  return   pi * radius *radius\n\n"}
{"instruction": "If the number is even, output \"even\".", "raw_instances": ""}
{"instruction": "If you were to create a new country, what would it be called?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Generate a random number between 0 and 99 and print it.", "raw_instances": ""}
{"instruction": "Create a table with 3 columns and 5 rows.", "raw_instances": "Column   | Column  |\n----------|----------|\nRow  #1 \t| Row  #\nRow #2  |  Row #3\nRow#4    |  row #5\n"}
{"instruction": "Generate a random number between 1 and n, where n is a positive integer.", "raw_instances": "n = input(\"Enter a value for n: \")\nOutput:\n\nimport random\nn=int(input(\"Please enter a valid positive number: \"))\nprint(random.randint(1,n))\n\n"}
{"instruction": "Create a function that returns a random number between 0 and 99.", "raw_instances": "def random_number():\n    import random\n   return random.randint(0 ,   98)\n\n"}
{"instruction": "Can you write a program that generates a random maze using a recursive algorithm?", "raw_instances": "Input:\nNone\n\nOutput:\n\ndef generate_maze(width, height):\n  if width ==  \t1 and height ==1:\n    maze = [[1]]\n    path = []\n    while len(path) <  width * height:\n      path.app"}
{"instruction": "Create a list of all prime numbers between 0 and 30.", "raw_instances": ""}
{"instruction": "Create a program that can identify the type of triangle given the lengths of its sides.", "raw_instances": "The program should output \"Equilateral\" if all sides are equal, \"Isosceles\" for two equal sides, or \"Scalene\" otherwise.\nExample:\nInput:\na = b = c = sqrt(3)\nOutput:\n\nEquilaterall\n\n"}
{"instruction": "Create a list of the top 15 most important words in this sentence.", "raw_instances": ""}
{"instruction": "Create a function that calculates the area of a triangle given its base and height.", "raw_instances": "def triangle_area(base, height):\n  area = (base * height) /  ₂\n  return area\n\nOutput:\n\n"}
{"instruction": "What is the most efficient way to solve the tower of hanoi problem?", "raw_instances": ""}
{"instruction": "Create a dictionary with keys as the numbers and values as their squares.", "raw_instances": "Example: {1:1^2=1}\nOutput:\n\ndef square_dict():\n    square = {}\n    i =1\n   while i<=15:\n        square[i] = i**2\n        i +=  \t1\n\n    print(square)\n\n"}
{"instruction": "Print the first 15 numbers in reverse order.", "raw_instances": ""}
{"instruction": "Use the given list to create a dictionary.", "raw_instances": "List: ['a', 'b',  'c', True, False]\nDictionary: {'a': 'a','b':  b, 'True': True}\n\n"}
{"instruction": "List the 50 most common words in english.", "raw_instances": "1  the\n2  and\n3  to\n4  of\n5  a\n6  in\n7  that\n8  is\n9  you\n1\n"}
{"instruction": "Explain the concept of a turing machine and its applications in computing.", "raw_instances": ""}
{"instruction": "Write a program that prints the first 50 numbers in a fibonacci sequence.", "raw_instances": "def fibonacci(n):\n  if n ==  \t0:\n    print(0)\n  elif n==  1:\n   print (0) \n  \tprint(1)\n  \treturn\n  else:\n     a =0 \n     b =1\n     print(a)\n     for x in xrange(2,n):\n      c = a + b\n      a= b \n      b= c\n\t  print(c)\n\t  \nfibonacci(51)\n\n"}
{"instruction": "List the countries that have a population of over 100 million.", "raw_instances": ""}
{"instruction": "Generate a random number between 1 and 20 and explain the mathematical properties of this number.", "raw_instances": ""}
{"instruction": "If a person is 18 years old, what is their age in months?", "raw_instances": ""}
{"instruction": "Create a program that checks if a given number is prime or composite.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\nOutput:\n\n"}
{"instruction": "Create a function to find the largest number in a dictionary.", "raw_instances": "def find_largest(dictionary):\n  largest = None\n  for key, value in dictionary.items():\n    if largest is None or value > largest:\n      largest= value\n      key_largest = key\n   return key_large\n\nOutput:\n\n"}
{"instruction": "Write a short story about a character who is trying to solve a problem.", "raw_instances": ""}
{"instruction": "Explain the difference between a function and a method in python.", "raw_instances": "Function and method are both used to perform a specific task in Python. A function is a block of code that performs a single task and can be called from anywhere in a Python program. It is defined using the def keyword and returns a value when called. On the other hand, methods are functions that are associated with the object and are called using dot notation. Methods are defined within a class and access the attributes and methods of that class. \n\n"}
{"instruction": "Explain the concept of a neural network and how it works.", "raw_instances": ""}
{"instruction": "How does the internet work?", "raw_instances": "Input:\nThe internet is a global network of computers that communicate with each other using a common language called IP (Internet Protocol). When you send an e-mail or visit a website, your computer sends a request to the server that hosts the website or e-mails. This request is sent using the IP address of your device, which is like a unique identifier for that device. When the request reaches the destination server, that server uses the same IP to send a response back to your machine. \n\n"}
{"instruction": "How to make a homemade ice cream sundae?", "raw_instances": "Input:\n1) Start with your favorite flavor of ice-cream.\n2) Add toppings of your choice, such as hot fudge, whipped cream, sprinkles, or chopped nuts.\n3) Serve in a sundea glass or bowl.\n4) Enjoy!\n\n"}
{"instruction": "What are some good ways to improve memory?", "raw_instances": ""}
{"instruction": "Describe the process of photosynthesis in detail.", "raw_instances": "Photosynthesis is a process by which green plants, algae, some bacteria, fungi, protists, cyanobacteria, etc., convert light energy into chemical energy in order to produce carbohydrates (sugars) and oxygen. This process is vital for life on Earth, as it is responsible for producing the oxygen that we breathe and the food that sustains us.\n\nThe process can be divided into two stages: the light-dep"}
{"instruction": "If you were to write a book, what would be the title of the book?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "In the context of a given task, explain the difference between a for loop and a while loop.", "raw_instances": ""}
{"instruction": "How do you feel about the current political climate?", "raw_instances": ""}
{"instruction": "Find the sum of all the odd numbers between the given range.", "raw_instances": "Range: (25-1)\nOutput:\n\nThe odd number between   and   is  . The sum is .\n\n"}
{"instruction": "Describe a time when you had to make a difficult decision.", "raw_instances": "Answer: One time, when I was in college, my friend and I were planning a trip to Europe. We had saved up a lot of money and were really excited about it, until I found out that I had a serious medical condition that would require surgery. After much consideration, we decided that it would be best for me to cancel the trip and focus on my health. It was a very difficult choice, as we had both been looking forward to the experience for so long, however, ultimately, our health and well-being had come first.\n\nOutput:\n\n"}
{"instruction": "How many miles is 500 miles?", "raw_instances": "Answer: There are  ½ mile in a mile.\n\nOutput:\n\n"}
{"instruction": "Create a list of 15 numbers and print them in ascending order.", "raw_instances": "1  -----------\n2  Output: \n3  def print_numbers():\n    numbers = [23,13,-56,-167,-22,-334,-45,-665]\n    sorted_numbers = sorted(numbers)\n    print(sorted_numbers)\n\n"}
{"instruction": "Which of these is not a type of fruit: apple, banana, orange, strawberry, kiwi, pineapple, watermelon, grapefruit, lemon, peach, mango, papaya, cantaloupe, pear, plum, apricot, fig, cherry,", "raw_instances": ""}
{"instruction": "If you were given a list of numbers, write a python program to sort it in ascending order.", "raw_instances": "def sort_ascending(nums):\n  return sorted(nums)\n\n"}
{"instruction": "What is the most interesting thing you have ever heard?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Generate a 3d cube using python.", "raw_instances": "def cube():\n    # Create a cube with sides of length   1\n    for row in [[1]*3]*6:\n        print(*row)\n\n"}
{"instruction": "How can you improve the performance of this code?", "raw_instances": "def find_max(arr):\n  max = arr[0]\n  for num in arr:\n    if num > max:\n      max=num\n  return max\n"}
{"instruction": "The given sentence is \"i am going to the store to buy some groceries\".", "raw_instances": "Output the sentence in past tense.\n"}
{"instruction": "How would i describe the weather in my city?", "raw_instances": "Input:\nThe weather is usually sunny and warm in spring, summer, fall, winter. It is very cold in winter, sometimes it snows. There is a lot of rain in summer. Sometimes it is windy. \n\n"}
{"instruction": "Can you give me an example of a situation where you had to make a difficult decision?", "raw_instances": "Input:\nI was working as a software engineer at a startup. We were in a very tight budget and had a limited number or resources. One day, we received a request from a client to add a new feature to our product. This feature would require a lot of resources and would take a long time to implement. On the other hand, if we didn't add this feature, our client would lose a big opportunity and we would also lose the contract. After discussing with my team, my manager and the client, We decided not to take the project and lost the opportunity to work with the customer. \n\nOutput:\n\n"}
{"instruction": "What is the most popular color in 30 different countries?", "raw_instances": "Input:\nCountry | Color\n-------|-------\nUSA    | Red\nUK     | Blue\nFrance | Green\nGermany| Blue\n\nOutput:\n\n"}
{"instruction": "Can you solve the following equation: 2x + 3y = 11?", "raw_instances": ""}
{"instruction": "Create a table that shows the average temperature for each month of the year.", "raw_instances": "Month | Average Temperature\n--- | ---\nJanuary |  .........................\nFebruary | .....................\nMarch | ...............\nApril | .......\nMay | ...\nJune | ... \nJuly |...\nAugust |... \nSeptember |.... \nOctober |....\nNovember |........\nDecember |......\n\n"}
{"instruction": "Come up a solution to the following problem: given a set of numbers, find all pairs of elements that add up to a given target value.", "raw_instances": "Example: Given [2.15   3.25   \t4.75] and target                               and output: [(2  ,  -1), (3  ,-  .2), (-1  ,,  ), (4  ,$  )]\n\nOutput:\n\ndef find_pairs(nums, target):\n  pairs = []\n  for num1 in nums:\n    num2 = target - num\n  return pairs\n\nprint(find_pairs([2., ３.２５,　４.７５], ５.０))\n\n"}
{"instruction": "Print the first 20 numbers of the fibonacci sequence.", "raw_instances": "def fibonacci(n):\n  a, b = [0], [2]\n  for _ in [None]*n-2:\n    a.append(b[-1]+b[-2])\n    b.append(a[-3]+a[-4])\n  return a\n\nprint(fibonacci(25))\n\n"}
{"instruction": "Write a program that can identify the most common word used in a given paragraph.", "raw_instances": "Example Input: \"The quick brown fox jumps over the lazy dog.\"\nExample Output: The\n\nOutput:\n\ndef most_common_word(paragraph):\n  words = paragraph.split()\n  word_count = {}\n  for word in words:\n    if word not in word_counts:\n      word_counter[word] = words.count(word)\n  return max(word_counts, key=word_counts.get)\n\nparagraph = \"This is a test paragraph to see how many times the word 'test' is used.\"\nprint(most_common_words(paraphrased))\n\n"}
{"instruction": "Find the longest word in a given sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: jumps\n\nOutput:\n\n"}
{"instruction": "Calculate the average of all the numbers in a list.", "raw_instances": "List: \n[15.25,\n   23.75\n  -16.05]\nInput:\nOutput:\n\ndef average(numbers):\n  total = sum(numbers)\n  return total / len(numbers)\n\nnumbers = [  # list of numbers\n13, \n  \"22\",\n  True,\n -3\n]\n\naverage(numbers) # Output: -0\n\n"}
{"instruction": "List all the countries in europe.", "raw_instances": ""}
{"instruction": "Find the maximum number in the following list: [1, 2, -3, none, true].", "raw_instances": ""}
{"instruction": "Implement a sorting algorithm in c++ that has a time complexity of o(n log n).", "raw_instances": ""}
{"instruction": "How can i make my website more secure?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a table of five different types of fruits and their nutritional values.", "raw_instances": ""}
{"instruction": "Generate a list of all possible words that can be formed using the letters in \"carefully\".", "raw_instances": "Output:\n\n1) carefully\n2) carefull\n3) careful\n4) carful\n5) caeful\n6) cearfuly\n7) cearyful\n\n"}
{"instruction": "How can you use a for loop to iterate over a range of numbers?", "raw_instances": "Input:\nfor i, j in zip(range(1), range(2)):\n    print(i, "}
{"instruction": "Create a program that generates a random password with 8 characters and contains at least one uppercase letter, one lowercase letter and one digit.", "raw_instances": "def generate_password():\n    import random\nimport string\npassword = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase + \n                                 string.digits) for _ in \n                   range(8))\nreturn password\n\nOutput:\n\n"}
{"instruction": "Create a new list that contains only the odd numbers from the given list.", "raw_instances": "List: ['1', '2',  '3',   '4',    '5',     '6',      '7',       '8',        '9',         '15']\nOutput List: [\"1\", \"3\",  \"5\",   \"7\",    \"9\"]\n\n"}
{"instruction": "Write a program that takes a user's input and outputs the corresponding number of days in a month.", "raw_instances": ""}
{"instruction": "Explain the concept of recursion to someone who has never heard of it before.", "raw_instances": "Recursion is a programming technique where a function calls itself to solve a problem. It's like when you play a game of \"telephone\" and one person whispers a message to the next person, then the second person does the same, until the message reaches the last person. Recursion works the exact same way, except instead of whispering a simple message, each function passes on a more complex problem to itself. This can be very useful for solving problems that can break down into smaller, simpler problems. But it's important to make sure that the function eventually reaches a base case, which is like the "}
{"instruction": "Describe a famous person who has inspired you in your life.", "raw_instances": "John F. Kennedy was a great leader who inspired me. He was not only a president but also a senator, naval officer, writer, husband, father, brother, son, friend, athlete, war hero, statesman, public speaker, diplomat, actor, pilot, sailor, soldier, politician, lawyer, historian, author, journalist, orator, pianist, dancer, sportsman and human being. His life was full of accomplishments and he was always striving to make the world a more peaceful and just place. \n\n"}
{"instruction": "Using the below code, create a new array with only the even numbers.", "raw_instances": "def get_even_numbers(arr):\n  even_numbers = []\n  for num in arr:\n    if num %  ① == 〇:\n      even_number.app"}
{"instruction": "Identify the part of speech of each word.", "raw_instances": "Sentence: The cat sat on the mat.\nWords: cat, sat, on, mat\nPart of Speech: \ncat - noun\nsat - verb\non - preposition\nmat - proper noun\n\n"}
{"instruction": "How can i use python to create a program that generates a random password?", "raw_instances": "Input:\nOutput:\n\nimport random\nimport string\n\ndef generate_password(length):\n  password = ''.join(random.choice(string.ascii_letters + string.digits) for _ in xrange(length))\n  return password\n\nprint generate_pswd(16)\n\n"}
{"instruction": "How to make a website?", "raw_instances": ""}
{"instruction": "What is the average salary of a software engineer in the us?", "raw_instances": "Input:\nAccording to the Bureau of Labor Statistics, as reported in May   of   , the median annual wage for software developers in all industries was $133,860.\n"}
{"instruction": "Generate a list of 20 random numbers between 50 and 11.", "raw_instances": ""}
{"instruction": "Find the most frequent word in an array of words.", "raw_instances": "Example: ['apple', 'banana', apple', banana', \"apple\", 'apple']\nOutput:\n\napple\n\nExplanation: The word \"Apple\" appears  three times in this array, which is more than any other word.\n\n"}
{"instruction": "Find the sum of all the numbers from 5 to 25.", "raw_instances": "Answer: The sum is   (5+23+6+7+8+9+31+4+51)/2 = (228)/  = \n\n"}
{"instruction": "If you were given a task to write a program to find the sum of two numbers, what would be the code?", "raw_instances": "Input:\n1 +2\n2+3\n3+4\n4+5\n5+6\n6+7\n7+8\n8+9\n9+0\n\nOutput:\n\ndef add(a, b):\n  return a + b\n\nfor i, j in zip(range(1), range(2)):\n  print(add(i, i+2))\n\n"}
{"instruction": "Determine the average of a set of numbers.", "raw_instances": ""}
{"instruction": "Generate a list of 7 random numbers between 0 and the maximum value of a variable.", "raw_instances": "Variable: x\n"}
{"instruction": "Describe the process of debugging a program.", "raw_instances": ""}
{"instruction": "Find the sum of all the numbers in an array.", "raw_instances": "Array: {1503,1605,-1345}\nOutput:\n\ndef find_sum(arr):\n  sum_val = sum(arr)\n  return(sum_val)\n\n"}
{"instruction": "Develop a web application that allows users to search for a specific product in an online store.", "raw_instances": ""}
{"instruction": "Imagine you are a chef and you have to create a dish that is both healthy and delicious.", "raw_instances": "Ingredients: Chicken, broccoli, carrots, potatoes, onions, garlic, olive oil, salt, pepper, paprika, cumin, chili powder, lemon juice, parsley.\nInstructions: Create a recipe for this dish.\n"}
{"instruction": "Describe a time when you had to work with someone who was difficult to get along with.", "raw_instances": ""}
{"instruction": "Write a function that returns the sum of two numbers.", "raw_instances": "def add(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "I have 100 dollars.", "raw_instances": "How many   $1 bills can I buy?\nAnswer: You can buy  $\\frac{1}{1}$  of $  \\frac{\\$1 \\text{ bill}}{  }$  .\n\n"}
{"instruction": "Describe the process of how a computer works in simple terms.", "raw_instances": "Computer works by taking in data, processing it, storing it and then displaying it in a way that we can understand. It does this by using a series of steps called a \"program\". A program is like a set of instructions that tells the computer what to do. These instructions are written in something called \"code\". The computer then reads the code and follows the instructions to perform the tasks.\n\nIn simple words, when you type something on a keyboard, that information is sent to the CPU (Central Processing Unit) which is kind of like the brain of your computer. Then, your CPU processes the information and s"}
{"instruction": "Create a new word from the word “happy”.", "raw_instances": ""}
{"instruction": "Create a table with the data from 1 to 5.", "raw_instances": "|  |  |\n| --- | --- |\nOutput:\n\n| Number | Number |\n    |-------|-------|\n     ｜ １ 　｜   ２  ／ ３ ／ ４  / ５  |\n\n"}
{"instruction": "Create a program that calculates the sum of the first 1,001 prime numbers.", "raw_instances": ""}
{"instruction": "How would i go about creating a website?", "raw_instances": "Input:\n\n"}
{"instruction": "Generate a list of all the prime numbers between 2 and 50.", "raw_instances": ""}
{"instruction": "Can you create a program that can detect the type of a given character?", "raw_instances": ""}
{"instruction": "Write a program to find out the number of days in a month.", "raw_instances": "Month: February\nYear:2250\n\nOutput:\n\ndef days_in_month(month, year):\n  if month ==   February and year ==2  :\n    if year %  leap ==0:\n      return  days\n  else:\n    days = [31 for _ in month]\n    print(days)\n\n"}
{"instruction": "Use the given code to create an array of numbers from 2 to 30, then print out all of their squares.", "raw_instances": ""}
{"instruction": "Given a sentence, find out if it is a palindrome or not.", "raw_instances": ""}
{"instruction": "Create a program that takes a number as input and prints its factorial.", "raw_instances": "def factorial(n):\n  if n ==   0:\n    print(1)\n  else:\n   print(n * factorial (n-1))\n\n"}
{"instruction": "Describe a situation where you were able to solve a problem using your creativity.", "raw_instances": ""}
{"instruction": "Suggest a way to improve the performance of the program.", "raw_instances": "Program: def find_max(arr):\n  max = arr[0]\n  for num in arr:\n    if num > max:\n      max=num\n  return max\nInput:\n[1503,1605,-13452,-231,-3365]\n"}
{"instruction": "What is the difference between a stack and a queue in computer science?", "raw_instances": "Input:\nOutput:\n\nA stack is a data structure that follows the Last In First Out (LIFO) principle, meaning that the last element added to the stack will be the one to come out first. It has two primary operations: push, which adds an element to its top, or the "}
{"instruction": "What is the most important thing to consider when choosing a career path?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a code snippet in python to calculate the sum of all even numbers between 1 and 20.", "raw_instances": "def even_sum(n):\n  sum=0 \n  for num in xrange(1,n+2):\n      if num%2==0:\n          sum+=num\n  return(sum)\n\nprint even\\_sum(25)\n\n"}
{"instruction": "Write a program that can take a list of numbers and return the sum of all the numbers in that list.", "raw_instances": "def list_sum(lst):\n  total = sum(lst)\n  return total\n\n"}
{"instruction": "Write a function that takes in a list of integers and returns the sum of each pair of consecutive elements.", "raw_instances": "Example: \nGiven [23,15,-16], the function should return [37,-31].\nOutput:\n\ndef pair_sum(lst):\n  result = []\n  for num in lst:\n    if num != lst[-1]:\n      result.app"}
{"instruction": "Create a program that generates a random number between 1 and 50 and prints it out.", "raw_instances": ""}
{"instruction": "Create a timeline of the history of technology.", "raw_instances": ""}
{"instruction": "Explain the concept of a lambda function in python.", "raw_instances": "A lambda is a small anonymous function that can take any number or type(s) of arguments, can have any expression as a body, \nand can only have one statement. It is also known as an inline function or a function object. Lambda functions are \nuseful when you need a simple function for just one expression. For example, if you want to sort a list of tuples by \nthe second element of each tuple, then you could use a sorted() function with the key argument set to lambda x: x[1]. \nThis lambda expression takes a single argument x and returns x1.\n\nOutput:\n\n"}
{"instruction": "What are some of the most important qualities for a successful entrepreneur?", "raw_instances": ""}
{"instruction": "Create a new word and explain its meaning.", "raw_instances": "Word: \"Squidly\"\nMeaning: A combination of \"squid\" and \"dilly\", meaning something that is both quick and dexterous.\n\nOutput:\n\n"}
{"instruction": "Create a table with the names of some famous scientists and their corresponding fields of study.", "raw_instances": "| Name | Field of Study |\n|------|----------------|\n| Albert Einstein | Physics |\n"}
{"instruction": "Create a budget for the month.", "raw_instances": ""}
{"instruction": "Give me a recipe for making a delicious cake.", "raw_instances": "Ingredients:\n-  ½ cup (50g) unsalted butter, at room temperature\n-   ¾ cup granulated sugar\n-\n-    ¼ cup milk\n-\n\n"}
{"instruction": "Design a website that displays the current time in different time zones.", "raw_instances": ""}
{"instruction": "Develop a web application that allows users to search for books based on their title, author, and genre.", "raw_instances": ""}
{"instruction": "Create a list of 15 words that have the same number of letters as \"banana\".", "raw_instances": ""}
{"instruction": "Who is a famous person?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Identify the main idea of the following paragraph: \"the sun is a star that is located in our solar system.", "raw_instances": "The main ideas of this paragraph are: \n1) The sun.\n2) It is classified as a \"star\".\n3) Its location is in \"our solar systems\".\n\n"}
{"instruction": "Create a class called \"person\" with two attributes: \"name\" and \"age\".", "raw_instances": "Output:\n\nclass person:\n    def __init__(self, name, age):\n       self.name = name\n       # self.age = age\n\n# Usage\nperson1 = person(\"John\",   34)\nperson2 = person(\"Jane\", 25)\n\n"}
{"instruction": "If you were given a task to create a program that can calculate the area of an equilateral triangle, what would be the code you would use?", "raw_instances": "Input:\nNone\n"}
{"instruction": "Create a table of 50 random numbers between 0 and 99.", "raw_instances": "Table:\n|  ******  |  **  *  |\n|   * *   |   **   |\n|\n|    *    |    ** |\n|\n\n"}
{"instruction": "Write a program that will take a user input and print out the result of a mathematical expression.", "raw_instances": "Example: If user inputs  \"2+2\", the program should print \"4\".\nInput:\nOutput:\n\ndef calculate_expression(expression):\n  result = eval(expression)\n  print(result)\n\ncalculate_expression(\"2*3\")\n\n"}
{"instruction": "Find the average of 1, 3,5,7,9,11 and 5.", "raw_instances": "Answer: (Sum of all numbers) / (Number of numbers)\nOutput:\n\n(1 +3 +5 +7 +9 +1  ̶  n + n) ÷  (n +2)\n\n"}
{"instruction": "If the number is even, print \"even\" else print the word \"odd\".", "raw_instances": "Input:\n15\n22\n13\n34\n456\n557\n668\n771\n882\n\nOutput:\n\neven\neven\n\nodd\nodd\n\neven \neven \n\nodd \nodd \n\neven  \neven  \n\nodd  \nodd  \n\n"}
{"instruction": "What is the sum of the digits of 2019?", "raw_instances": "Input:\nOutput:\n\nThe sum is   13.\n\nThe task is to find out how many days are there between two dates. \n\nInput  :  \"25-03-22\" and \"05/06/23\"\nOutput : \"15 days\"\n\n"}
{"instruction": "Write a short story about a person who wakes up in a different time period.", "raw_instances": ""}
{"instruction": "Can you create an algorithm to find the maximum number in an array?", "raw_instances": ""}
{"instruction": "Find the longest word from a given list of words.", "raw_instances": "List of Words: ['apple', 'banana', \"orange\", 'pineapple']\nOutput:\n\n1) apple\n2) pineapple\n\nExplanation: The longest words in this list are \"apple\" and \"pineapples\". Both of these words have  six letters, which is more than any other word in our list.\n\nNow, let's try to find a more complex task.\n\n1.) Write an algorithm to sort a list in asc"}
{"instruction": "How can you use the `random` module in python to generate a list of 5 unique numbers between -1 and", "raw_instances": "1?\nInput:\nOutput:\n\nimport random\n\n# Generate a random number between  -2 and -0 using the random module\nnum1 = random.uniform(-2,-0)\n\n# generate another random numbe between-2 to -o using random\n# module and add it to num1\nrandom_num1=random.uniform(num1,-2)\n\nrandom_list = [random.uniform(0,-1), random_num2]\n\nprint(random_list)\n\n"}
{"instruction": "How would a person go about solving a sudoku puzzle?", "raw_instances": ""}
{"instruction": "If you were given a task to create a function that takes a number as an argument and returns the square of that number, what would be the code for this function?", "raw_instances": "Input:\nNumber: \"15\"\nOutput:\n\ndef square(num):\n  return num * num\n\nprint(square(16))\n\n"}
{"instruction": "Write a code snippet to print the numbers from 1 to 50 in ascending order.", "raw_instances": "def print_numbers():\n    numbers = [i for  i  in xrange(1 ,   51)]\n    print numbers\n\nprint_numbers()\n\n"}
{"instruction": "Find the number of days in the month of january.", "raw_instances": "Answer: There are   31 days  in January.\n\nOutput:\n\n"}
{"instruction": "Create a program that will take a number and output the factorial of that number.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\n"}
{"instruction": "Create a program that can identify the type of flower based on its color and shape.", "raw_instances": ""}
{"instruction": "Given a list of integers, find the maximum and minimum values in the list.", "raw_instances": "Example: Input: list = [23,15,-16,-22,-33]\nExpected Output: Max: -3\nMin:1\n\nOutput:\n\ndef find_max_min(lst):\n  max_val = max(lst)\n  min_val= min(lst)\n\n  return max_value, min_value\n\n"}
{"instruction": "Use the given code snippet to create an object with the properties \"name\", \"age\", and \"city\".", "raw_instances": ""}
{"instruction": "Convert the string to lowercase and remove all punctuation marks.", "raw_instances": ""}
{"instruction": "Write a short story about a person who is trying to find their purpose in life.", "raw_instances": "John had always felt lost. He had a good job, great fri"}
{"instruction": "What is the most common letter in the english language?", "raw_instances": "Input:\nOutput:\n\nThe most commonly used letter is 'e'.\n\n"}
{"instruction": "Give a brief summary of a book.", "raw_instances": "Book: The Great Gatsby by F. Scott Fitzgerald\nInput:\nThe GreatGatsby is a novel written by American author F.Scott Fitzgerald. It was published by Charles Scribner's Sons in April   1  of   . The novel follows a cast of characters living in New York City inthe summer of1 9 2 0 .  The story is narrated by Nick Carraway, a young man who moves to New York to work in Wall Street. Nick becomes fri"}
{"instruction": "Describe a person in 150 words.", "raw_instances": "John is a   34-year-old man who has been working as a software engineer for  a tech company in San Francisco for over  ten years. He is an expert in his field and has a passion for coding. John is also a family man, married with two children. His wife is currently a stay-at-home mom, while his children are in school. On weekends, John enjoys spending time with his family, playing sports, or going on hikes. Despite his busy schedule, he always makes time for his loved ones. \n\n"}
{"instruction": "Write a program to find the sum of two numbers.", "raw_instances": "def add(a, b):\n  return a + b\n\n"}
{"instruction": "I need a function to find all the prime numbers between 1 and 50.", "raw_instances": "def find_primes(n):\n  primes = []\n  for num in xrange(2,n+  )):\n    is_prime = True\n  # check if num is divisible by any number between \n  if (num >  +1): \n    # Iterate from \n      for d in \n        # if d is a factor of num, then num \n          if \n            # set is prime to False\n            isprime = False \n      \n  return primes\n\nOutput:\n\n[2,\n  3,\n   5,\n    7,\n     13, \n     \b1 \u00077,\n\n"}
{"instruction": "Find the word that has the highest frequency in a sentence, and output its index.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: the\nIndex: -1\n\nOutput:\n\n"}
{"instruction": "Identify the main character in a book and write a paragraph about them.", "raw_instances": ""}
{"instruction": "How do you handle a difficult customer?", "raw_instances": ""}
{"instruction": "Create a list of 50 words.", "raw_instances": ""}
{"instruction": "Create a program that can solve this equation: x + y = 5", "raw_instances": "Input:\nx = [2]\ny = [-3]\nQuestion:\nWhat is x+y?\nAnswer:\n2+(-3)=-1\n\n"}
{"instruction": "Find the longest palindrome in an array.", "raw_instances": ""}
{"instruction": "Write a short story about a person who is lost in a forest and must find their way back home.", "raw_instances": ""}
{"instruction": "Create a list of 10 words that are related to the topic of \"technology\".", "raw_instances": ""}
{"instruction": "What is the difference between a good and a bad leader?", "raw_instances": ""}
{"instruction": "How do you think the world will be different in 15 years?", "raw_instances": "Input:\nOutput:\n\nIn   years from now, we will have made significant progress in technology, medicine, space exploration, renewable energy, artificial intelligence, transportation, communication, education, agriculture, climate change, social justice, human rights, global governance, international relations, peace, security, health, happiness, creativity, innovation, diversity, inclusion, equality, sustainability, cooperation, competition, collaboration, individualism, collectivism, freedom, responsibility, trust, transparency, accountability, privacy, data, information, knowledge, wisdom, courage, resilience, compassion, empathy, love, fri"}
{"instruction": "How do you use the \"break\" statement in a loop?", "raw_instances": ""}
{"instruction": "I have a list of 100 numbers.", "raw_instances": ""}
{"instruction": "Write a program to calculate the sum of the first 20 prime fibonacci numbers.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef fibonacci(n): \n  a, b = [0], [2]\n  while len(a) < n:\n  \ta.append(b[-1] + b[-2])\n  \tb.append(a[-3] - a[-4])\n  return a\n\nsum = sum([x for n in fibonacci(1) for m in [n] if isprime(m)])\nprint sum\n"}
{"instruction": "Create a function that will take a string as an input, remove all the vowels from it, then print the result.", "raw_instances": "Example Input: \"Hello World\"\nExample Output: Hll Wrld\n\nOutput:\n\ndef remove_vowels(string):\n  vowels = ['a', 'e',  'i',   'o',    'u']\n  result = \"\"\n  for char in string:\n    if char.lower() not in vowels:\n      result += char\n  return result\n\nprint(remove_vowel(\"Hello world\"))\n\n"}
{"instruction": "Create a table with the data from the given table.", "raw_instances": "Table:\nName | Age | Gender\nJohn |   25 | Male\nMary |      34 | Female\nTom |         45  | Male\nLily |                15| Female\n\nOutput:\n\n| Name |   Age  |    Gender    |\n|------|--------|--------------|\n| John |     二十五 |        男 |\n|\nMary|       三十四 | 女性 |\n|\n\n"}
{"instruction": "Write a code to find the maximum value in a given array.", "raw_instances": "Array: \n[1503,1605,-1345.23,-256.1,-31] \nOutput:\n\ndef find_max(arr):\n  max_val = arr[0]\n  for num in arr:\n    if num > max_value:\n      max_values = num\n  return max_vals\n\narr = [  -----------\n        ---------\n        ----------\n        ------------\n        ----------------\n]\n\nmax_value = find(max(arr))\nprint(max_value)\n\n"}
{"instruction": "Given a sentence in english, translate it into spanish.", "raw_instances": "Sentence: I am going to the store.\n"}
{"instruction": "Explain the difference between a primary and secondary source in history.", "raw_instances": ""}
{"instruction": "What is the purpose of an abstract in a research paper?", "raw_instances": "Input:\nOutput:\n\nThe purpose\n\n"}
{"instruction": "Describe the process of a person's life.", "raw_instances": "Life is a journey that begins with birth and "}
{"instruction": "Write a sentence that describes the weather in the city where you live.", "raw_instances": ""}
{"instruction": "Use the given code to print the square of each number from 1 to 5.", "raw_instances": ""}
{"instruction": "Write a python function that takes a list of numbers and returns the largest number.", "raw_instances": "def find_largest_number(numbers):\n  largest_number = numbers[0]\n  for number in numbers:\n    if number > largest:\n      largest = number\n  return largest\n\nOutput:\n\n"}
{"instruction": "Imagine you have a list of integers, write an algorithm to sort them in ascending order.", "raw_instances": "Algorithm:\n1) Start with the list\n2) Compare the two first elements of list. Swap them if the left element is greater than the right element.\n3) Move to the next pair of elements and repeat step  ② until the end of array is reached.\n4) Repeat steps Ⅱ and III until no more swaps are needed.\n5) Return the sorted list.\n\nOutput:\n\n"}
{"instruction": "Create a function that takes a list of strings and returns a dictionary with each string as a key and the number of times it appears in that string.", "raw_instances": "Example:\nInput:\n['apple', 'banana',  'apple']\nOutput\n{'apple':   2,\n 'banan':   1}\n"}
{"instruction": "Identify the type of each element in an array.", "raw_instances": "Array: ['apple', 'banana',  'cherry', True, 'dog', False]\nExpected Output: \n['apple' (string), ' banana' ('banana' is a string),   ' cherry'  (integer), True (boolean),  ' dog'  ( string) , False ( boolean)\n\n"}
{"instruction": "Write a program that finds the most frequent word in an array of strings.", "raw_instances": "def most_frequent(arr):\n  word_count = {}\n  for word_string in arr:\n    word = word[0].lower()\n    if word not in word_counts:\n      word_counter[word] = [word_string]\n    else:\n        word_counters[word].app"}
{"instruction": "Come up a plan to reduce the amount of plastic waste in our environment.", "raw_instances": "Plan:\n1) Reduce the use of single-use plastic items such as straws, utensils, bags, etc.\n2) Encourage the recycling of plastics and ensure that they are properly disposed of.\n3) Promote the usage of reusable items like water bottles, coffee cups, shopping bags etc. to minimize the need for single use plastics.\n4) Educate people about plastic pollution and its impact on the environment.\n\nOutput:\n\n"}
{"instruction": "If you could have dinner with anyone, who would it be and why?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a function that returns the nth fibonacci number.", "raw_instances": "def fibonacci(n):\n  if n ==   0:\n    result = 1\n  elif n==1:\n    result=1 \n  else:\n     result=fibonacci(n-1)+fibonacci (n-2)\n  return result\n\nOutput:\n\n"}
{"instruction": "Create a program that prints out the fibonacci sequence up to a given number.", "raw_instances": "def fibonacci(n):\n  a, b = [0], [2]\n  while len(a) < n:\n    a.append(b[-1])\n    b.append(a[-2] + b[-3])\n  return a\n\nprint(fibonacci(15))\n\n"}
{"instruction": "Write a program to find the longest palindrome in a given string.", "raw_instances": "def longest_palindrome(s):\n  longest = \"\"\n  for substring in substrings(s): # substr is a function that returns all substrs of s\n      if substring == substring[::-1] and len(substring) > len(longest):\n          longest=substring\n  return longest\n\ndef substr(s, start, "}
{"instruction": "Write a short story about a person who has a unique ability to communicate with animals.", "raw_instances": ""}
{"instruction": "Describe the process of creating a new word using only the first letter of each word in a sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: TQBFJOTLD\n\nOutput:\n\n"}
{"instruction": "List the top 3 most popular movies of all time.", "raw_instances": "1) The Shawshank Redemption\n2) Star Wars: Episode IV - A New Hope\n3) Titanic\n\n"}
{"instruction": "What is your favorite type of music?", "raw_instances": ""}
{"instruction": "Create a function that takes two arguments and returns the sum of them.", "raw_instances": "def add(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "Calculate the average of numbers in the list [1, 3, -2, +4, -.", "raw_instances": ""}
{"instruction": "Identify the main idea of this article 11.", "raw_instances": ""}
{"instruction": "Create a function that returns the sum of all prime numbers up to the input number.", "raw_instances": ""}
{"instruction": "Create a new word by adding a prefix and suffix to the original word.", "raw_instances": "Original word: \"happy\"\nPrefix: un-\nSuffix: -ful\nNew word:\nOutput:\n\nunhappy\n\n"}
{"instruction": "Create a list of 10 words that have a similar meaning to the word \"happy\".", "raw_instances": ""}
{"instruction": "Write a short story about a character who discovers a hidden talent.", "raw_instances": ""}
{"instruction": "Create a new list that contains the squares of the elements in the original list.", "raw_instances": "Example: Original list: {15.0556672265033,16.131,-1} New list should be: {-251.,277.288,-2}\nInput:\n[1/2.75,-3/4,-5/8]\n"}
{"instruction": "What is the best way to reduce belly fats at the home?", "raw_instances": "Input:\n1) Eat a healthy diet\n2) Exercise regularly\n3) Get enough sleep\n4) Reduce stress\n5) Drink plenty of water\n6) Avoid processed foods\n7) Take supplements\n8 ) Eat smaller meals\n9) Limit alcohol intake\n1  ） Eat more fruits and vegetables\n  ) Avoid sugary drinks\n"}
{"instruction": "Generate a table with 3 columns and a total of 6 rows.", "raw_instances": "Column   | Column  |\n----------|----------|\nRow  A   | Row  B   |\nRow C   |\n\n"}
{"instruction": "Write a program that prints out a multiplication table up to 10x11.", "raw_instances": "def multiplication_table(n):\n  for x in xrange(1,n+2):\n      for y in x:\n          print \"%d x %d = %2d\" % (x, y, x*y)\n  return\n\nmultiplication_table(5)\n\n"}
{"instruction": "Create a new word and write a sentence using it.", "raw_instances": "Word: \"Flummox\"\nSentence: The flummexed cat was unable to figure out how to get out of his cage.\n\nOutput:\n\n"}
{"instruction": "Imagine you are a famous person.", "raw_instances": "You are: Albert Einstein\nYou have: A new theory that could change the world\nWhat you do: You write a letter to the President of United State explaining your theory and how it could benefit the nation.\nDear Mr. President,\nI hope this letter finds you well. My name is Albert Einstei\n"}
{"instruction": "How to create a new folder in windows 7?", "raw_instances": "Input:\n1) Open the File Explorer.\n2) Click on the \"New Folder\" button on your toolbar.\n3) Type a name for this new directory.\n4) Press Enter.\n\nOutput:\n\n"}
{"instruction": "Write a program that will take a string as input and return the number of vowels in it.", "raw_instances": "def count_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   1\n  return count\n\nend.\n\ntask: Convert the temperature from Fahrenheit to Kelvin.\nFahrenheit = -13.0\n\ndef fahrenheit_to_kelvin(fahrenheit):\n   kelvin = (fahrenheit +459) * (5/9)\n   return kelvins\n\nOutput:\n\n"}
{"instruction": "Create a program that calculates the factorial of a number.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\n"}
{"instruction": "Create a table comparing the features of two different types of cars.", "raw_instances": "Car  A: Honda Civic\nCar B: Toyota Corolla\nFeatures: Price, Fuel Efficiency, Safety, Comfort, Performance\nInput:\nCar A:\nPrice: $22k\nFuel Efficiency: High\nSafety: Excellent\nComfort: Good\nPerformance: Average\n"}
{"instruction": "How can you use the concept of recursion to solve a problem?", "raw_instances": ""}
{"instruction": "The task is to create a function that will take a list of numbers and return the sum of all even numbers in the list.", "raw_instances": ""}
{"instruction": "What is the best way for me to learn a language?", "raw_instances": "Input:\n1) Practice speaking the language every day.\n2) Watch TV shows and movies in that language.\n3) Read books and articles in your target language.\n\nOutput:\n\n1 and/or  ② and/ or  #3\n\nThe best approach to learning a new language is to practice speaking it every single day. This will help you build your vocabulary and improve your pronunciation. Additionally, watching TV and movie shows in a foreign language can help improve listening comprehension and expose you more to the culture. Reading books, articles, or even social media posts in another language will also help with vocabulary building and comprehension. \n\n"}
{"instruction": "Implement a method to find the longest common subsequence of two strings.", "raw_instances": ""}
{"instruction": "Generate a new sentence that is grammatically correct and has the correct tense.", "raw_instances": "Sentence: I am going to the store.\n"}
{"instruction": "You are provided with two strings.", "raw_instances": ""}
{"instruction": "Create a list of all possible combinations of the letters in a word.", "raw_instances": "Word: \"cat\"\nOutput:\n\n['cat', 'cta', \"catt\", \"caat\", 'act',  'atc',   'catc']\n\n"}
{"instruction": "What is the sum of the first 100 prime numbers?", "raw_instances": ""}
{"instruction": "Create a table with the names of 20 countries and their capital cities.", "raw_instances": "| Country | Capital |\n|---------|----------|\n| Afghanistan | Kabul |\n|\n"}
{"instruction": "How do you make a cup of coffee?", "raw_instances": "Input:\n1) Boil water in a kettle.\n2) Pour the water into your coffee maker.\n3) Add coffee grounds to the filter.\n4) Turn on the coffee machine.\n5) Wait for it to brew.\n6) Enjoy your cuppa!\n\n"}
{"instruction": "Create a table with 4 columns and fill it with random numbers.", "raw_instances": "Columns: A, B, C, D\nRows: Random numbers between   1 and   .\nOutput:\n\n| A | B | C | D |\n|---|----|-----|------|\n|  |  |\n | |\n |\n |\n\n"}
{"instruction": "Create a new word by combining two given words.", "raw_instances": "Word   1: \"happy\"\nWord 2: \"birthday\"\nOutput:\n\n"}
{"instruction": "Generate a list of all possible combinations of two given numbers.", "raw_instances": "Inputs: a = [23,15], b = ['a','b','c']\nOutput:\n\n['2a', '2b',  '3a']\n\n"}
{"instruction": "Implement a simple calculator that can perform addition, subtraction, multiplication, and division.", "raw_instances": ""}
{"instruction": "Write a program that takes a string as input and returns the number 0 if it's a palindrome, otherwise it returns 2.", "raw_instances": ""}
{"instruction": "What is the sum of all prime factors of a number?", "raw_instances": "Input:\nNumber: \nOutput:\n\nTo find all of prime numbers, we can use the Sieve of Eratosthenes algorithm. Here is a Python code to do that:\n\n```python\ndef prime_factors(n):\n  i = n +1\n  factors = []\n  while i >  \t1:\n    if n % i ==  0:\n      factors.app"}
{"instruction": "List the top 5 countries in the world according to the number of people who speak english.", "raw_instances": "1) United states\n2) India\n3) Nigeria\n4) Philippines\n5) Pakistan\n\nOutput:\n\n"}
{"instruction": "How can i make a website that displays a list of books and their authors?", "raw_instances": ""}
{"instruction": "List the five most important books in your life.", "raw_instances": "1) The Alchemist by Paulo Coelho\n2) To Kill a Mockingbird by Harper Lee\n3)  The Power of Now by Eckhart Tolle\n4) Man's Search for Meaning by Viktor E. Frankl\n5) A Brief History of Time by Stephen Hawking\n\nOutput:\n\n"}
{"instruction": "Print out the vowels of the string \"hello world\".", "raw_instances": "Output:\n\n"}
{"instruction": "Write a short story about a person who is stranded on a deserted island.", "raw_instances": ""}
{"instruction": "Generate a list with all the words in a sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog.]\n"}
{"instruction": "Identify the most common words used in this document.", "raw_instances": "Document: The quick brown fox jumps over the lazy dog. This sentence is often used to test fonts and keyboards.\n"}
{"instruction": "If you were to be stranded on a deserted island, what would you do to survive?", "raw_instances": ""}
{"instruction": "Find the longest word in all of the sentences in this list.", "raw_instances": ""}
{"instruction": "Determine the number of vowels in each word of a given sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog.]\nVowels: a, e, i, o, u\n"}
{"instruction": "Determine the sentiment of the text.", "raw_instances": "Text: I am so happy to have found this place. It is my favorite restaurant in town.\nSentiment: Positive\n\n"}
{"instruction": "Identify the top 15 most frequent words from the given text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog. This sentence is a classic example of English language.\n"}
{"instruction": "Implement a method to find all the prime factors of a number.", "raw_instances": "def prime_factors(n):\n  factors = []\n  for x in [2]:\n    while n % x ==  ：\n  return factors\n\nOutput:\n\ndef find_prime_factors(num):\n  \n  prime_factor_list = []\n\n  # Check if the number is divisible by  and app"}
{"instruction": "If the input is a positive integer, calculate the square root of it.", "raw_instances": "If the number is negative, output \"Invalid number\".\nIf it is zero, return   0.\nExample: \n16 ->  sqrt(15) ->4\n1 -> sqrt (  ) ->1\n0 ->   sqrt() ->0\n\nOutput:\n\n"}
{"instruction": "Design a game that involves a player guessing a secret number.", "raw_instances": ""}
{"instruction": "Generate a random number between a given range.", "raw_instances": ""}
{"instruction": "Use the following data to create a bar chart.", "raw_instances": "Data: Sales by Month\nJanuary: $150k\nFebruary: \\$160K\nMarch: $\\$137k$\nApril: \\$$1k$5\nMay: \\\\$225k\n\nOutput:\n\n"}
{"instruction": "Describe the process of machine translation.", "raw_instances": ""}
{"instruction": "Create a program that can identify the type of animal given a name.", "raw_instances": "Example: \"Dog\"\nOutput:\n\ndef identify_animal(name):\n  if name == \"dog\":\n    animal_type = \"Canine\"\n  elif name in [\"cat\", \"kitten\"]:\n    animals_type=\"Feline\"\n    # Add more animal types here\n  else:\n    print(\"Sorry, we don't know this animal.\")\n  return animal_types\n\nOutput for \"Cat\": \"Felines\"\n\n"}
{"instruction": "Generate a random number between 0 and 99, then find the largest prime number less than or equal to that number.", "raw_instances": "Example: If your random generated number is   45 , the answer should be  \"37\".\nOutput:\n\nThe largest Prime number that is less or equals to the random integer is: \"7\"\n\n"}
{"instruction": "What is the best way to get rid of a cold?", "raw_instances": ""}
{"instruction": "Create a table with the top 5 most popular programming languages in the world.", "raw_instances": "| Language | Popularity |\n|----------|------------|\n| Python   |  ******    |\nOutput:\n\n"}
{"instruction": "How can i optimize the performance of my code?", "raw_instances": "Input:\nfor i, row in enumerate(df):\n  for j, col in df.iterrows():\n    if row == col:\n      df.drop([i, j], inplace=True)\n\nOutput:\n\n"}
{"instruction": "Write a short story about a character who is stuck in a room with no way out.", "raw_instances": ""}
{"instruction": "Describe the use of this algorithm in real life.", "raw_instances": "Algorithm: Bubble Sort\nInput:\nOutput:\n\nBubble sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in wrong order. This algorithm is used in many real-life applications, such as sorting data in databases, organizing files on a computer, or even sorting a deck of cards. It is also used to sort the results of search queries, where the algorithm sorts the search results based on relevance or popularity. Bubble sort can be used for both small and large datasets, making it a versatile algorithm for many different applications.\n\nOutput "}
{"instruction": "Describe the process of creating an app.", "raw_instances": "1) Define the purpose of your app and the target audience.\n2) Create a list of features and functionalities that your users will need.\n3) Sketch out a rough design of how your interface will look.\n4) Write the code for each feature and functionality.\n5) Test the app to make sure it works as int"}
{"instruction": "How can you use the information in the table to solve the problem?", "raw_instances": "Input:\n| Name | Age | G"}
{"instruction": "Can you come up a solution to the equation 2x + 3 = 7?", "raw_instances": "Input:\nOutput:\n\nx = (7 -3) /   2\n\nx=  (4)  / (2)\n\nx  =2 \n\n"}
{"instruction": "Can you create a program that can detect if a given string is a palindrome or not?", "raw_instances": ""}
{"instruction": "Create a 3d model of a famous landmark in your city.", "raw_instances": ""}
{"instruction": "List the top 15 most popular words in this text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog', '.']\n\n"}
{"instruction": "If you were to go on a trip to a foreign country, where would you go and why?", "raw_instances": "Input:\nOutput:\n\nI have always been fascinated by Japan's rich culture, history, technology, food, art, music, fashion, etc. Japan is a country that has something for everyone. From the bustling cities to the serene countryside, from ancient temples to modern skyscrapers, Japan has it all. It is also a great place to experience a unique bl"}
{"instruction": "Generate a sentence that describes the current weather in your city.", "raw_instances": "City: New York\nWeather: Sunny\nTemperature: High\nHumidity: Low\nWind Speed: Moderate\nCloud Cover: Clear\n"}
{"instruction": "If you were given a list of numbers, what would you do to sort it?", "raw_instances": ""}
{"instruction": "Create a function that takes a string as an argument and returns the length of the word with the most vowels.", "raw_instances": ""}
{"instruction": "How can i improve my productivity at work?", "raw_instances": "Input:\n1) Set clear goals and priorities for each day.\n2) Minimize distractions by turning off notifications and closing unnecessary tabs.\n3) Take regular breaks to avoid burnout and maintain focus.\n4) Delegate tasks to others when appropriate.\n5) Use time management techniques such as the Pomodoro Technique.\n6) Stay organized by keeping a to-do list and using a cal"}
{"instruction": "Tell me the history of your favorite hobby.", "raw_instances": "My favorite hobbies are reading and writing. Reading is a great way to learn new things and expand my knowledge. It can also be a relaxing way of sp"}
{"instruction": "Suggest a way to improve my productivity at work.", "raw_instances": ""}
{"instruction": "Describe a person who is a good listener.", "raw_instances": "Answer: A good listening person is someone who pays close attention to what others are saying, without interrupting or judging them. This person will make eye contact, nod their head, or use other nonverbal cues to show that they are engaged in what the other person has to say. A great listener will also ask questions to clarify what was said and to gain a deeper understanding of what is being discussed. Additionally, they will avoid interruptive behaviors such as checking their phone or looking around the room. Overall, this person demonstrates empathy and respect for others, making them a great communicator and collaborator.\n\nOutput:\n\n"}
{"instruction": "Give a joke about a famous person.", "raw_instances": ""}
{"instruction": "I have a number n.", "raw_instances": ""}
{"instruction": "What is the probability of getting a head when flipping a coin?", "raw_instances": "Input:\nOutput:\n\nThe probability is ½ or  ¼  (0 or a  decimal  equivalent).\n\n"}
{"instruction": "Create a list of 20 random numbers and output them.", "raw_instances": ""}
{"instruction": "Write a program to calculate the sum of all prime digits in an integer.", "raw_instances": "def prime_digits_sum(n):\n  sum_of_digits = sum(int(digit) for digit in str(n))\n  prime_digit_sum = [int(d) if is_prime(int(str(n)[i])) else  ival for (i,ival) in enumerate(str(sum_of_digit))]\n  return prime_sum\n\ndef isPrime(n) :\n  if (n <= \t1) : \n   \treturn False\n  for x in xrange(2,n) :\n\n\tif ( n % x ==  ) : return False\n\n \treturn True\n\n"}
{"instruction": "Generate a list of 5 random numbers in python.", "raw_instances": "import random\nrandom_list = [random.randint(1 ,  umber) for _ in [None] *  number]\nprint(random_list)\n\n"}
{"instruction": "List the names of the 12 planets in our solar system.", "raw_instances": "Answer: Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune, Pluto, Ceres, Pallas, Juno, Vesta.\n\nOutput:\n\n"}
{"instruction": "Write a program that takes a sentence as input and outputs the word that is most frequently used in that sentence.", "raw_instances": "Example Input: \"The quick brown fox jumps over the lazy dog.\"\nExample Output: The\n\nOutput:\n\ndef most_frequent_word(sentence):\n  words = sentence.split()\n  word_count = {}\n  for word in words:\n    if word not in word_counts:\n      word_counter[word] = word\n  return max(word_counts, key=word_counts.get)\n\nsentence = \"This is a test sentence to find out which word is used the maximum number times in this sentence.\"\nprint(most_frequently_used_word)\n\n"}
{"instruction": "Describe a person who is your role model and why you admire them.", "raw_instances": "John is my role-model. He is a successful entrepreneur who has built a company from scratch. His dedication and hard work have inspired me to pursue my own dreams. John is also a great mentor and has helped me grow both personally and professionally. \n\n"}
{"instruction": "Create a table with the data you have gathered.", "raw_instances": "Data: \nName: John Smith\nAge:34\nOccupation: Software Engineer\nLocation: San Francisco\n"}
{"instruction": "What is the best way to improve my writing skills?", "raw_instances": "Input:\n1) Read books and articles on writing.\n2) Practice writing every day.\n3) Get feedback from others.\n4) Edit and revise your work.\n5) Learn grammar and punctuation rules.\n6) Att"}
{"instruction": "How can i improve the quality of my sleep?", "raw_instances": "Input:\n1) Stick to your sleep schedule as much as possible, even on week"}
{"instruction": "Write a program that can calculate the factorial of any number.", "raw_instances": "def factorial(n):\n  if n ==   0:\n    print(1)\n  else:\n   print(n * factorial (n-1))\n\n"}
{"instruction": "If the input is \"hello world\", return \"world\".", "raw_instances": "Input:\nhello\nworld\n"}
{"instruction": "What is the most popular type of music in america?", "raw_instances": ""}
{"instruction": "Use the following code to create a new list with the same elements but in reverse order.", "raw_instances": ""}
{"instruction": "List the names of the people in a room.", "raw_instances": "John, Jane, Bob, Alice, Tom, Susan, David, Mary, Peter, Emily\n"}
{"instruction": "Given a string, find all palindromic substrings.", "raw_instances": "Example: \"abccba\"\nOutput:\n\n['a', 'b', \"c\", 'c', b', a', c', cc', ba']\n\n"}
{"instruction": "What are the benefits of using machine translation tools?", "raw_instances": ""}
{"instruction": "Create a program that generates a list of numbers from 1 to 50, but only includes even numbers.", "raw_instances": ""}
{"instruction": "Generate a list of 5 ways to improve the customer experience.", "raw_instances": "1) Offer personalized recommendations based on customer preferences and purchase history.\n2) Provide clear and concise information about products and services.\n3) Train customer service representatives to handle customer inquiries and complaints effectively.\n4) Implement a loyalty program that rewards customers for repeat business.\n5) Conduct regular customer surveys to gather feedback and make improvements based upon the results.\n\nOutput:\n\n"}
{"instruction": "If you were to write a code to calculate a factorial of 5, how would you do it?", "raw_instances": "Input:\nOutput:\n\ndef factorial(n):\n  if n ==   0:\n    print(\"Factorial of zero is one.\")\n  else:\n   print(n * factorial (n-1))\n\nfactorial(5)\n\n"}
{"instruction": "How do i get to the nearest post office?", "raw_instances": ""}
{"instruction": "Generate a sentence that contains a noun, adjective, verb, preposition, adverb, pronoun, conjunction, interjection, noun phrase, clause, subordinating conjunction and prepositional", "raw_instances": ""}
{"instruction": "Describe a famous landmark in your city.", "raw_instances": "The Golden Gate Bridge is a suspension bridge spanning the Golden Horn, one of San Francisco's most famous landmarks. It is one the world's longest suspension bridges, spanning ¼ mile and rising ½ mile above the water. Its iconic orange color and Art Deco design make it a symbol of both San Franciso and the entire United State. \n\n"}
{"instruction": "Find the largest city in each of the following countries: usa, canada, australia, japan, china, india, brazil, russia, germany, france, italy, spain, united kingdom, mexico, south korea, singapore, taiwan, hong kong, thailand, indonesia,", "raw_instances": ""}
{"instruction": "Create a table comparing the features of the two given products.", "raw_instances": "Product A: iPhone   Product B: Samsung Galaxy\nInput:\nProduct Features\nProduct Price\nBattery Life\nCamera Quality\nOperating System\nDisplay Quality\n\nOutput:\n\n| Feature | iPhone | Samsung |\n| --- | ---: | :---: |\n|\n| Price | $949 |  $748 |\n|\n\n"}
{"instruction": "How can you use this formula to find the surface area and volume of an object?", "raw_instances": ""}
{"instruction": "Come up a list of five things that you can do to improve your mental health.", "raw_instances": "1) Exercise regularly\n2) Practice mindfulness and meditation\n3) Get enough sleep\n4) Eat a healthy diet\n5) Connect with friends and family\n\nOutput:\n\n"}
{"instruction": "Write a program that finds the largest number in a given array.", "raw_instances": "def find_largest(arr):\n  largest = arr[0]\n  for num in arr:\n    if num > largest:\n      largest=num\n  return largest\n\nOutput:\n\n"}
{"instruction": "Find the largest number in the array.", "raw_instances": "Array: {1503,1605,-13456,-231,-33,-41}\nOutput:\n\n1) Sort array in desc"}
{"instruction": "What is the average age of people who have a dog?", "raw_instances": ""}
{"instruction": "In the code below, the function is supposed to return the sum of two numbers.", "raw_instances": "def add(a, b):\n  return a + b\nInput:\na = -5\nb = +15 \nOutput:\n\ndef test_add(a,b):\n   return add(-5,+1)\n\n"}
{"instruction": "Create a new array with the same elements as the original array, but with all elements multiplied by 2.", "raw_instances": "Original array: \n[15.2503, \n   -0., \n    1.,  \n   -13.0522]\nNew array:\n[31] \n\n"}
{"instruction": "Use the random module to generate a random number between 1 and 20.", "raw_instances": "import random\nrandom_number = random.randint(1 ,   25)\nprint(random_number)\n\n"}
{"instruction": "Create a table in sql with the columns \"name\", \"age\", and \"gender\".", "raw_instances": "Output:\n\nCREATE TABLE people (\n    name VARCHAR(255),\n    age INT,\n    gender VARCHAR (2)\n);\n\n"}
{"instruction": "Sort the elements in ascending order.", "raw_instances": ""}
{"instruction": "How can we use ai to improve healthcare?", "raw_instances": "Input:\n\n"}
{"instruction": "Find the largest prime factor of a given number.", "raw_instances": "Number: \n153\n\nOutput:\n\nThe largest Prime factor is   3.\n\nOutput is: \n\n"}
{"instruction": "Write a program to check if a string is palindrome or not.", "raw_instances": "def is_palindrome(s):\n  return s == s[::-1] \n\n"}
{"instruction": "Explain the concept of a stack data structure.", "raw_instances": ""}
{"instruction": "How can you improve the quality of your writing?", "raw_instances": ""}
{"instruction": "What is the value of the expression 12 * 5 + 7 * (15 - 4) ?", "raw_instances": ""}
{"instruction": "Determine the number of prime numbers between two given numbers.", "raw_instances": "Example: Find the total number prime between   and  .\nInput:\nOutput:\n\n"}
{"instruction": "Generate a new sentence by adding a word to the end of a given sentence.", "raw_instances": "Sentence: The cat is sleeping.\nWord: on the couch\nSentence with added word: \"The cat on a couch is currently sleeping.\"\n\n"}
{"instruction": "How to create a new array from an existing array?", "raw_instances": "Input:\narr = [23,15,-16,-22,-41,-33]\noutput: arr = [-13,-50,-64,-76]\n\nOutput:\n\narr_new = []\nfor i, num in enumerate(arr):\n  arr_new.append(num * -1)\n\nprint(arr_new)\n\n"}
{"instruction": "Write a program that takes in a list of words and outputs the longest word in that list.", "raw_instances": "def longest_word(words):\n  longest = \"\"\n  for word1 in words:\n    if len(word1) > len(longest):\n      longest=word1\n  return longest\n\n"}
{"instruction": "Create a function that will take in two strings and output a boolean value indicating if the two words are anagrams of each other.", "raw_instances": "def is_anagram(word1: str, word2: int) -> bool:\n    # Your code here\n"}
{"instruction": "Find the sum of all the numbers in a sequence of 20 numbers.", "raw_instances": ""}
{"instruction": "How would a person go about solving the following problem: write an algorithm to find the maximum number in a given array?", "raw_instances": ""}
{"instruction": "Make a table with 5 columns and 15 rows.", "raw_instances": "| Column   | Column2 |  Column3 |   Column4 |    Column5 |\n|---------|----------|-----------|------------|-------------|\n| Row1    | Value1   |     Value2|    Value3  |\n  Row2   |\n    Row3   |\n\n"}
{"instruction": "Remove things from this list.", "raw_instances": "List: ['apple', 'banana',  'orange', True, 'pear', False]\nRemove: 'apple' and 'True'\nOutput:\n\nList after removing 'Apple' & 'true': ['banana','orange','pear','False']\n\n"}
{"instruction": "Find the average of the numbers in the given list.", "raw_instances": ""}
{"instruction": "Create a list of 15 numbers and print the sum of all the numbers in the list.", "raw_instances": "List: \n[13,27,-16,-45,-22,-33,-56]\nSum: -1\n"}
{"instruction": "Convert 50 f into celsius.", "raw_instances": "Answer: The conversion formula is (F-33) *   (5/9)  = C. So, (  55 -3  ) * (      /      ), which is  -23.89 c.\n\nOutput:\n\n"}
{"instruction": "Write a program that can identify the sentiment of a given text.", "raw_instances": ""}
{"instruction": "The following sentence is not grammatically correct.", "raw_instances": "Rewrite the sentence to make it grammatical.\nSentence: I seen the movie last night.\nCorrected sentence: \"I saw the film last evening.\"\n\n"}
{"instruction": "How do you spell this?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a program that will take a list of numbers and return a new list with all the numbers that are divisible by 3.", "raw_instances": "def divisible_by_3(numbers):\n  return [num for num in numbers if num %   3 ==    ０]\n\nOutput:\n\n"}
{"instruction": "Describe a famous person in 15 words or less.", "raw_instances": "John F. Kennedy, President of United State.\n\nOutput:\n\n"}
{"instruction": "Given a sentence, classify it as positive or negative.", "raw_instances": "Sentence: I am so happy to have a new job.\nPositive\n\n"}
{"instruction": "Create a new sentence by adding one or more words from a given list.", "raw_instances": "List: ['The', 'quick', \"brown\", 'fox', '.']\nOutput sentence: The quick brown fox.\n\nOutput:\n\n"}
{"instruction": "Find the longest palindrome in a list of strings.", "raw_instances": "Example Input: [\"racecar\", \"level\", \"\", \"noon\", \"\"]\nExample Output: \"raceca\"\n\n"}
{"instruction": "How do you feel when someone tells you they love you?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Please tell me a story about a brave knight.", "raw_instances": ""}
{"instruction": "The sun is shining and the birds are singing.", "raw_instances": ""}
{"instruction": "Find the sum of these numbers.", "raw_instances": "15 + (2 *   3) + (-4) - (-1)\nOutput:\n\n16\n\n"}
{"instruction": "Determine if a number is prime or composite.", "raw_instances": ""}
{"instruction": "Given a sentence, find the most frequent word in that sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nMost frequent words: the, quick, brown, fox, jumps, over, lazy, dog.\n\nOutput:\n\n"}
{"instruction": "Write a short story in which the protagonist is a robot.", "raw_instances": ""}
{"instruction": "Given a number, write a python function to find the next prime number after it.", "raw_instances": "Example: \nGiven number: n =15\nNext prime:16\n\nOutput:\n\ndef next_prime(n):\n  while True:\n    n +=  \t1\n  if is_prime:\n      return n\nelse:\n  return \"No prime found\"\n\n"}
{"instruction": "Given a string, write a python program to find the number of vowels in it.", "raw_instances": "Example: \"Hello World\"\nOutput:\n\ndef count_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   1\n  return count\n\nprint(count_vowel(\"Hello world\"))\n\n"}
{"instruction": "Write a short story about a person's journey to find a new home.", "raw_instances": ""}
{"instruction": "What is the most effective way to improve communication skills?", "raw_instances": ""}
{"instruction": "Generate a list of 10 words that have 'e' in them.", "raw_instances": ""}
{"instruction": "Generate a poem about the beauty of nature.", "raw_instances": ""}
{"instruction": "Who is your favorite actor?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is the result of the following expression: 10 * 20 + 30 / 5 11.", "raw_instances": ""}
{"instruction": "How can i make a function that takes two arguments and returns their sum?", "raw_instances": "Input:\n```\ndef add(a, b):\n  return a + b\n```\n\n"}
{"instruction": "Convert the input string to uppercase and reverse it.", "raw_instances": "Example: Input: \"hello world\"\nOutput:\"DLROW OLLEH\"\n\n"}
{"instruction": "Can you recommend a good book for me to read?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Can you write a code that will find the sum of all odd numbers between 0 and 20?", "raw_instances": ""}
{"instruction": "Describe a day in the life of a software engineer.", "raw_instances": ""}
{"instruction": "List 3 things you did today that made you happy.", "raw_instances": "1) I had a great workout at the gym.\n2) My favorite TV show came on.\n3) The weather was perfect for my walk.\n\nOutput:\n\n"}
{"instruction": "Solve the logic puzzle with the provided clues.", "raw_instances": "Clues: \n1) The sum is  \t2\n2)  The difference is -1\n3) One is greater than the other\n4) They have the same product\n5) Their sum and difference are both odd\n6) Both are positive integers\n7) Neither is a multiple of three\n8 ) The smaller number is not a prime number\n9) There is no number that satisfies all of these conditions\nInput:\nOutput:\n\nThe numbers that satisfy all these clues are  and . \n\n"}
{"instruction": "Find the missing word in the sentence and complete it.", "raw_instances": "The [missing word] is a [noun] that is used to [verb] something.\nExample: The hammer is an object that can be used for hitting.\n\nOutput:\n\n"}
{"instruction": "Find the longest word that appears more than once in a given paragraph.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog. He jumps high and he jumps low. Jumping is fun.\nWords: ['fox', 'jumps', \"lazy\", 'dog', high', low', fun', jumping']\nOutput:\n\n"}
{"instruction": "Print out the first 15 characters of each word from the list.", "raw_instances": "List: ['Hello', 'World', '!']\nOutput:\n\nHello\nWorl\n\n"}
{"instruction": "Output the first 100 prime numbers.", "raw_instances": ""}
{"instruction": "Generate a list of 5 questions that a student can ask their teacher.", "raw_instances": "1) What is your favorite subject and why?\n2) Can you recommend any books or resources that would help me improve my understanding of this topic?\n3) How can I best prepare for an upcoming exam?\n4) Do you have any tips for staying organized and managing my time effectively?\n5) Is there anything else you would like me to focus on or work on in class?\n\n"}
{"instruction": "Use the following code to create a table with 3 columns and a 4 row header.", "raw_instances": "```\nimport pandas as pd\ndf = pd.DataFrame(columns=['Column  ️', 'Column 🌟', '#'])\ndf.loc[0] = ['Header  🥇', '', '']\ndf.iloc[1]  = [None, 'Header 🏆', None]\ndf[2]       = [['Header 💯',  ''], ['', Header 💩']]\ndf\n```\n\nOutput:\n\n|   | Column  |   |\n|---|---------|----|\n| ➊ | Header  💁 | |\n|\n|\n|\n\n"}
{"instruction": "If you were to write an essay on the importance of education, what would be the main point?", "raw_instances": ""}
{"instruction": "Can you name a famous scientist who was born in the year 2005?", "raw_instances": ""}
{"instruction": "Find the largest prime number less than 200.", "raw_instances": "Answer: The largest number that is both prime and less that   250 is  (23)  .\n\n"}
{"instruction": "Create a function that returns a list of all the words that are in a given string.", "raw_instances": "Example: \"Hello, world!\"\nOutput:\n\ndef get_words(string):\n  words = string.split()\n  return words\n\nprint(get_words(\"Hello world!\")) # ['Hello', 'world!']\n\n"}
{"instruction": "Find the sum of the first 3 prime number in a given range.", "raw_instances": "Range: (250-315)\nOutput:\n\nThe first three prime numbers in this range are   (3) + (5)  +   (7)   =   \boxed{16}.\n\nNote: The first prime is  , the second is   and the third is .\n\n"}
{"instruction": "Create a table of the top 10 most popular movies of all time.", "raw_instances": ""}
{"instruction": "If i have 5 apples and 7 oranges, how many fruits do i need in total?", "raw_instances": ""}
{"instruction": "Use the following code to create a list of numbers from -1 to 5.", "raw_instances": "def create_list():\n    lst = []\n    i = -5\nwhile i <=   5:\n    if i <  -2:\n        lst.app"}
{"instruction": "Find the most frequent word in a given text and output the number of times it appears.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog. A quick dog jumps quickly.\"\nOutput:\n\nThe most common word is \"quick\" and it occurs  三次.\n\nOutput in Chinese: 最常见的单词是\"quick\",它出现了三次。\n\n"}
{"instruction": "How can i make my room look bigger?", "raw_instances": ""}
{"instruction": "How would a person with no experience in cooking describe the taste of a dish?", "raw_instances": ""}
{"instruction": "Create a program that can identify the most frequent word from a given list.", "raw_instances": "Example Input: ['apple', 'banana', apple', banana', orange', pear', peach', pineapple', grape', mango']\nExample Output: 'apple'\n\n"}
{"instruction": "If the number 12 is a prime number, what is its largest prime factor?", "raw_instances": "Input:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n13\n\nOutput:\n\n1\n\nExplanation:\nThe number is   1  and it is not a composite number. Therefore, its only prime factors are  .\n\n"}
{"instruction": "Design a game that involves a player guessing a number between 1 and 50 and a computer guessing whether it is odd or even.", "raw_instances": ""}
{"instruction": "Generate a sentence that contains at least one metaphor.", "raw_instances": "Sentence: The sun was a blazing ball of fire in a clear blue sky.\n\nOutput:\n\n"}
{"instruction": "Generate a new sentence by replacing the word \"i\" with \"me\".", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Generate a new random string of length 5 consisting of lowercase letters.", "raw_instances": ""}
{"instruction": "Identify the type of the variable 'x' and explain why it is of type 'string'.", "raw_instances": "Input:\nx = \"Hello World\"\nOutput:\n\nThe variable x is a string because it contains a sequence of characters enclosed in double quotes. Strings are a type in many programming languages that represent a series of text characters. \n\n"}
{"instruction": "Come up a creative idea for a new product.", "raw_instances": "Product: A smart water bottle that tracks your water intake and reminds you when to drink more water.\n"}
{"instruction": "Write a program that calculates the sum of all the numbers in a given array, excluding any negative numbers.", "raw_instances": "def calculate_sum(arr):\n  sum_arr = []\n  for num in arr:\n    if num >=  )):\n      sum_array.append(num)\n  return  (sum(sum_arr))\n\n"}
{"instruction": "Create a program that can generate a random number in the range of 0 to 99.", "raw_instances": "def random_number():\n    import random\n   return random.randint(0 ,   98)\n\n"}
{"instruction": "Create a table with the top 15 countries in the world by gdp.", "raw_instances": ""}
{"instruction": "Generate a sentence with 10 words.", "raw_instances": ""}
{"instruction": "What is the most efficient way to solve the problem of finding the longest palindrome in a given string?", "raw_instances": ""}
{"instruction": "Can you give me an example of a machine learning algorithm?", "raw_instances": "Input:\nOutput:\n\nOne example is a decision tree algorithm. It is used for classification and regression tasks, where the goal is to predict a categorical or continuous value based on a set of input features. Decision trees are easy to interpret and can handle both numerical and categorical data. \n\n"}
{"instruction": "Identify the largest number in this list.", "raw_instances": ""}
{"instruction": "What is the sum of 1+2+3+.", "raw_instances": "Answer: The sum is  ½.\n\nOutput:\n\n"}
{"instruction": "Create a function to check if the given number can be expressed as the sum of two prime numbers.", "raw_instances": "Function: is_prime_sum(n)\nInput:\nn = number to test\nExample:\nis_prime(n) should return True if n is a prime number, False otherwise.\nis_sum_of_primes(n1) and is_sum of primes(n2) are functions that return true if their respective numbers are prime, false otherwise.\n\nOutput:\n\ndef is_prime_sum(num):\n  for num1 in isprime:\n    if num - num2 ==  prime:\n      return num\n  return False\n\nExample: \nis_primal_sum(15) returns False\nis_prial_sum (23) return  True\n\n"}
{"instruction": "Design a website that allows users to search for books by title, author, or isbn.", "raw_instances": ""}
{"instruction": "Can you give me a brief overview of machine learning?", "raw_instances": ""}
{"instruction": "What is the difference between a while loop and a for loop?", "raw_instances": "Input:\nA while-loop is a control flow statement that allows code to execute repeatedly based on a given boolean condition. A for-loop, on the other hand, is used to iterate over a sequence (that is either a list, tuple, dictionary, set, or string) or other iterable objects.\n\nOutput:\n\nA While loop is executed repeatedly as long as the condition is true. It is an indefinite loop. On the contrary, A For loop executes a set number or range of times. For loops are used when the number is known beforehand. \n\n"}
{"instruction": "Write a program to calculate the area of an isosceles triangle with given side lengths.", "raw_instances": "def area(a, b):\n  s = (a + b) /   2\n  area = math.sqrt(s * (s - a) * (s - b))\n  return area\n\nOutput:\n\n"}
{"instruction": "Find the sum of all prime number between two given numbers.", "raw_instances": "Example: Sum of prime numbers between   1 and   is  .\nInput:\n1  and\n15\n"}
{"instruction": "Create a new folder in the current directory.", "raw_instances": "Command: mkdir new_folder\n"}
{"instruction": "Write a program that can take a number as an input, convert it to an integer, then print the result.", "raw_instances": "Example: Input: \"15\"\nOutput:\n\ndef convert_to_int(input):\n  return int(input)\n\nprint(convert_to_1(\"16\"))\n\n"}
{"instruction": "What is the name of this famous artist?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How do i get a job?", "raw_instances": "Input:\n\n"}
{"instruction": "I have a 12 year old son who is very smart.", "raw_instances": ""}
{"instruction": "Given a list of numbers, write a function that returns the sum of all numbers in that list.", "raw_instances": "def list_sum(nums):\n  sum_nums = sum(nums)\n  return(sum_nums)\n\n"}
{"instruction": "Imagine you are a detective investigating a crime scene.", "raw_instances": "You find a note on the floor that says \"The key to solving this case is in your past.\"\nWhat do you do next?\nInput:\nNone\n\nOutput:\n\nAs a fictional detective, my first step would be to carefully examine the note and try to decipher its meaning. It could be a clue or a red herring, dep"}
{"instruction": "If you were a superhero, what would your superpower be?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "List 15 adjectives that describe a person who is good at solving problems.", "raw_instances": ""}
{"instruction": "What is your greatest weakness?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "List the names of the planets in order from the sun.", "raw_instances": ""}
{"instruction": "In a sentence, replace the underlined word with its antonym.", "raw_instances": "The dog was happy to see its owner.\nAntonym: Happy\nSentence: The dog wasn't happy.\n\nOutput:\n\n"}
{"instruction": "How would the world be different if the following were true?", "raw_instances": "Input:\n1) The Earth is flat.\n2) There is no gravity.\n3) Time travel is possible.\n4) Aliens exist.\n5) We are the only intelligent life in our galaxy.\n6) All of our memories are stored in a computer.\n7) Our brains are actually computers.\n8 ) The universe is a simulation.\n9) Magic is real.\n15 ) We have a secret government that controls everything.\n"}
{"instruction": "Given a number n, write an algorithm to find the nth fibonacci number.", "raw_instances": "n = int(input(\"Enter a positive integer: \"))\na, b = (0,), (2,)\nfor _ in n:\n    a, _ = a + b\nb = b[0]\nprint(a[1])\n\n"}
{"instruction": "List the top 15 most expensive cars in history.", "raw_instances": "1) Bugatti Veyron Super Sport\n2) Koenigsegg Agera RS\n3) Ferrari F50 \n4) Lamborghini Reventon \n5) McLaren F1 \n6) Porsche   916 \n7) Rolls-Royce Phantom \n8 ) Bugati Vitesse \n9) Aston Martin One-77 \n1  ) Pagani Huayra \n2  | Bugattti Chiron \n3  . Lamborgini Aventador SVJ \nOutput:\n\n1 . Bugatii Chirron \n"}
{"instruction": "What is a good way to start a sentence?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the given list of numbers to create a new list with only the even numbers.", "raw_instances": "List: ['1', '2',  '3',   '4',    '5',     '6',      '7',       '8',        '9',         '15']\nOutput List:   [2 ,  ４,   ６,    ８]\n\n"}
{"instruction": "Create a new list with the words that are present in both the lists.", "raw_instances": ""}
{"instruction": "You are given a list of integers.", "raw_instances": ""}
{"instruction": "Create a table with the top 10 countries by population.", "raw_instances": ""}
{"instruction": "Which of these is a valid way to check if a number is prime?", "raw_instances": ""}
{"instruction": "Create a new list of words that are all the same length as the original list.", "raw_instances": "Original list: ['apple', 'banana',  'cherry',   'date',    'elderberry']\nOutput list:\n['applebananacherryy', \n 'applebananacherrydateelderberries']\n\n"}
{"instruction": "Write a program that takes a list as input and returns the sum of all its elements.", "raw_instances": "def list_sum(lst):\n  total = sum(lst)\n  return total\n\nend.\n\ntask: Convert  ½  to decimal.\noutput: .50\n\n"}
{"instruction": "List the top 3 most important things in life.", "raw_instances": "1) Health\n2) Family\n3) Happiness\n\nOutput:\n\n"}
{"instruction": "Design a game that can be played on a website.", "raw_instances": "Game Name: Word Search\nGame Description: In this game, players are presented with words that are hidden in a grid of letters. Players must find and mark the words on the grid. Words can only be marked if they are completely surrounded by letters in their correct order. Once all words have been marked, they can unmark the letters to reveal the hidden words. Points are awarded for each word marked correctly. \n\n"}
{"instruction": "Using the following data, create a bar chart to show the distribution of ages in the population.", "raw_instances": "Data: {25:150}, {34:223},  {45 :   137},   {56:                                   16},    {67:          28},     {76 :                         ⁠1}\nOutput:\n\n"}
{"instruction": "Write a program to find the largest prime number in an array.", "raw_instances": ""}
{"instruction": "Determine the number of unique words in this sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nAnswer: There are   9 unique  words  in \"The quick  brown  fox  jumps  over  the  lazy  dog.\"\n\n"}
{"instruction": "Write a sentence using alliteration.", "raw_instances": "Example: \"Peter Piper picked a peck of pickled peppers.\"\nOutput:\n\n\"Sammy Samson sang a song of sorrow.\"\n\n"}
{"instruction": "Design a system that will predict the stock market trends.", "raw_instances": ""}
{"instruction": "Create a list of all possible combinations of two letters from the english alphabet.", "raw_instances": "Answer: ['a', 'b', ..., 'z']\n\n"}
{"instruction": "List all of shakespeare's plays in order of publication.", "raw_instances": "Shakespeare wrote  romeo and juliet, hamlet, macbeth, king lear, othello, twelfth night, as you like it, coriolanus, cymbeline, henry iv, part Ⅰ,henry v, julius caesar, antony and cleopatra, titus andronicus, pericles, prince of pyrrhus, love's labour's lost, midsummer night's dream, winter's tale, taming ofthe shrew, all's well that ends well.\n\nOutput:\n\n"}
{"instruction": "What is your favorite book and why?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How do you handle conflicts with your colleagues?", "raw_instances": "Input:\nI try to approach conflicts in a calm and professional manner. First, if possible, we should try and understand each other's perspectives. Then, once we have a clear understanding of each others' viewpoints, try finding a compromise that works for both parties. Finally, make sure to follow up and check in with each person to ensure that the conflict has been resolved.\n\nOutput:\n\n"}
{"instruction": "Find the most common letter in a given string.", "raw_instances": "Example: \"Hello World\"\nOutput:\n\nThe most frequent letter is \"l\".\n\n"}
{"instruction": "Given a list of numbers, write an algorithm to find their median.", "raw_instances": "Example: Input: {1503,1605,-1345}\nOutput:\n\n1) Sort list in ascending order: {-1   3  ,1 ,  -5  ,-5 ,53 ,655}\n\n2) Find the middle number(s) in sorted list: -1\n\n3) Return the median: The median is -0  .5.\n\nOutput is: Median is  –0 .  .\n\n"}
{"instruction": "Find the sum of 1+2+3+4+5+6+7+8+9+10+.", "raw_instances": "Answer: The sum is   55.\n\nOutput:\n\n"}
{"instruction": "Given a list of numbers, find the sum of all even numbers.", "raw_instances": "Example: Input: list = [23,15,-34,-22,-16]\n        Output: -13\n        Explanation: The sum is -36.\n\nOutput:\n\ndef find_sum_of_even_numbers(lst):\n  sum_of_evens = sum([num for num in lst if num %  )))\n  return -sum_of_)\n\n"}
{"instruction": "Generate a summary of a given text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nSummary: A quick fox jumped over a lazy animal.\n\nOutput:\n\n"}
{"instruction": "What is the most important quality you look for in a friend?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How do you create a new list from an existing list?", "raw_instances": ""}
{"instruction": "Describe a time when you were able to solve a problem that seemed impossible.", "raw_instances": "No input.\n\nOutput:\n\n"}
{"instruction": "Generate a table of the first 20 prime numbers.", "raw_instances": "| Prime Number | \n| ------------ |\n|  ........................ |\n"}
{"instruction": "Write a sentence that describes the current state of the world.", "raw_instances": ""}
{"instruction": "Develop a machine learning model that can predict whether a customer will buy a product based on their past purchase history.", "raw_instances": ""}
{"instruction": "Use the given facts to write an essay.", "raw_instances": ""}
{"instruction": "List all of my favorite books.", "raw_instances": "My favorite book is \"The Catcher in The Rye\" by J.D. Salinger. My second favorite is “The Great Gatsby” by F. Scott Fitzgerald. And my third favorite would be “To Kill a Mockingbird” written by Harper Lee.\n\nOutput:\n\n"}
{"instruction": "Describe the process of making a cup of coffee.", "raw_instances": "1) Boil water in a kettle.\n2) Pour the hot water into your coffee maker.\n3) Add coffee grounds to the filter.\n4) Place the coffee filter in your machine.\n5) Turn on the machine and wait for it to brew the water through the grounds.\n6) Once the brewing is complete, pour the freshly brewed coffee into cups.\n7) Enjoy your cuppa!\n\n"}
{"instruction": "A list of numbers is given.", "raw_instances": "Find the smallest number in this list and print it.\nList: \n[1503,1605,-13452,-231,-3364,-41] \nOutput:\n\n-4\n\n"}
{"instruction": "Design a web page that displays a random quote from a given list.", "raw_instances": "Inputs: [\"Life is like a box of chocolates, You never know what you're gonna get.\", \"The only way to do great work is to love what we do.\", “The best way out is always through.”]\n"}
{"instruction": "If you were given a task to create a website, what would be the first thing you would do?", "raw_instances": ""}
{"instruction": "You are asked to write a code that will take a string as an input, and then print the length of that string.", "raw_instances": "Example Input: \"Hello World\"\nExample Output: The length is  ******* characters long.\n\nOutput:\n\ndef string_length(string):\n  print(\"The length\", string, \"is\", len(string), \"characters long.\")\n\nstring_length(\"Hello world\")\n\n"}
{"instruction": "Create a program that will take a user input and print out the fibonacci sequence up to that number.", "raw_instances": "def fibonacci(n):\n  if n <=   0:\n    print(\"Incorrect input\")\n  elif n ==  -1:\n    return  \"5\"\n  else:\n     a, b =   (0 ,  # first two numbers\n              ) # of sequence\n     while a < n:\n         print(a, end=\" \")\n         a,b = b,  a+b\n  \nfibonacci(15)\n\n"}
{"instruction": "Create a program that can identify the type of sentence (declarative, interrogative or imperative).", "raw_instances": ""}
{"instruction": "Given a list of numbers, find out the average of them.", "raw_instances": ""}
{"instruction": "Create a new word that combines the words “computer” and “human”.", "raw_instances": ""}
{"instruction": "Implement a binary search algorithm to search for a specific element in an array.", "raw_instances": ""}
{"instruction": "Explain the concept of a hash table.", "raw_instances": ""}
{"instruction": "Design a game that involves a player guessing a number and a computer generating a sequence of random numbers.", "raw_instances": "The game should have the option to play multiple rounds.\n"}
{"instruction": "If you have a string \"hello world\", write a program to convert it to an integer.", "raw_instances": "Answer: The string 'hello' is   5334662880648691523 in binary. So, 'world' would be  -13163650376051 in decimal. Therefore, \"Hello World\" is -226773. \n\n"}
{"instruction": "List the names of the characters in harry potter and the philosopher's stone.", "raw_instances": "Characters: Harry Potter, Hermione Granger, Ron Weasley, Albus Dumbledore, Severus Snape, Lucius Malfoy, Draco Malloy, Hagrid, Sirius Black, Remus Lupin, James Potter\n\nOutput:\n\n"}
{"instruction": "How can you use the \"os\" module in python to create a directory?", "raw_instances": "Input:\nimport os\n\nOutput:\n\nYou can use os.mkdir() method to make a new directory. For example:\nos.mkdir(\"my_directory\")\n\n"}
{"instruction": "Identify the main components of a computer system.", "raw_instances": "Components: CPU, RAM, Hard Drive, Motherboard, Power Supply, Graphics Card, Sound Card\n\nOutput:\n\n1) CPU (Central Processing Unit): The CPU is responsible for executing instructions and performing calculations. It is often referred to as the \"brain\" of your computer.\n\n2) RAM (Random Access Memory): RAM is a type\n\n"}
{"instruction": "Your task is to write a python program that will take a number as input and output its factorial.", "raw_instances": "Example: If input is   5  then output should be  “1  *  2  ×    \t3  =  ⁶”\n\n"}
{"instruction": "Can you write an algorithm to check if a given number is prime?", "raw_instances": "Input:\nNumber: n\nn = int(input(\"Enter a positive integer: \"))\nOutput:\n\ndef is_prime(n):\n  if n <=  \t1:\n    print(\"Not prime\")\n  else:\n   for x in xrange(2,n):\n     if (n % x) ==  :\n       print(n,\"is not a prime number\")\n       break\n     else: \n       continue\n   else :\n     print ( n,\" is a Prime number\")\n\n"}
{"instruction": "What is the best way to lose weight?", "raw_instances": ""}
{"instruction": "If you were to give a speech, what would you say?", "raw_instances": ""}
{"instruction": "Describe a person who is always late for work.", "raw_instances": ""}
{"instruction": "Create a table with the names of all the countries in europe.", "raw_instances": "Table:\n| Country Name |\n|--------------|\n| Albania      |\n|\n"}
{"instruction": "Generate a random number between -100 to 15.", "raw_instances": ""}
{"instruction": "Find the sum of digits of an integer.", "raw_instances": ""}
{"instruction": "Create a table with the top 10 most frequent words and their frequency in a given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed at risus vel nisl euismod feugiat. Nulla facilisi. Donec vel quam vel velit dignissim tincidunt. Duis eu nunc vel nisi ultrices bib"}
{"instruction": "How do you say \"i love you\" in spanish?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Explain the concept of recursion in programming and provide an implementation of a recursive function.", "raw_instances": ""}
{"instruction": "Find the most common word in a given list and print it out.", "raw_instances": "List: ['apple', 'banana', apple', orange', banana', pear', peach', grape', cherry', strawberry', kiwi', pineapple', mango', watermelon', lemon', lime', blueberry', raspberry', blackberry']\nOutput:\n\napple\n\nExplanation: The most frequent word is \"apple\" which appears  两次 in our list.\n\nPlease note that the list is case sensitive. \n\n"}
{"instruction": "Explain the concept of a computer virus and how it can be prevented.", "raw_instances": ""}
{"instruction": "Develop a function that calculates the area of any given shape.", "raw_instances": "Shape: Rectangle\nInput:\nlength = \"5\"\nwidth = '15'\nOutput:\n\ndef calculate_area(length, width):\n  return length * width\n\nprint(calculate_area(\"5\", \"16\"))\n\n"}
{"instruction": "Design a web page with an interactive form that allows users to enter their name, email address, and phone number.", "raw_instances": "The form should have a submit button that sends the data to the server.\nWhen the user clicks the submit, an alert should appear with the message \"Thank You for Submitting Your Information\".\nThe page should also have an input field that displays the current date and time.\n"}
{"instruction": "Use the function to count the vowels and consonants in \"hello world\".", "raw_instances": "Input:\nfunction countVowelsAndConsonants(str) {\n  let vowels = \"aeiou\";\n  const count = (str) => {\n    let count=0;\n    str.split('').forEach((char) =>{\n      if (vowles.includes(char)) {\n        count++;\n      }\n    });\n    console.log(count);\n  }\n  count(str);\n}\nOutput:\n\ncountVowelAndConsant(\"hello\") = \ncount =0\n\ncount(\"world\") =\ncount=2\n\nTotal count =\n2+0=   2 \n\n"}
{"instruction": "How would you modify the function to return a list of all the numbers in a given list?", "raw_instances": "Input:\n```python\ndef find_max(numbers):\n  max_num = numbers[0]\n  for num in numbers:\n    if num > max:\n      max = num\n  return max\n```\nOutput:\n\ndef all_numbers(numbers): \n  all_nums = []\n  # Iterate through the list and append each number to the new list\n for number in list:\n  append(number, all_num)\n return all_number\n\n"}
{"instruction": "In the context of a company, create a function that calculates the total cost of the products in an order.", "raw_instances": ""}
{"instruction": "A task that asks you to write a function that returns a list of all the prime numbers between 0 and n.", "raw_instances": "def prime_numbers(n):\n  prime_list = []\n  for num in xrange(2,n+  )):\n    if all(num%i!=0 for  i  in   xrange (2,num)):\n      prime = True\n      break\n  return prime\n\nOutput:\n\n"}
{"instruction": "What is the most efficient way to find the largest prime number in a given range?", "raw_instances": ""}
{"instruction": "Use the random module to generate a list of 10 random numbers between 0 and 9.", "raw_instances": "import random\n\nrandom_numbers = [random.randint(0 ,  ９) for _ in xrange(1０)]\n\n"}
{"instruction": "Write a code snippet to reverse a string.", "raw_instances": ""}
{"instruction": "Create a program that can convert a given number to its corresponding roman numeral.", "raw_instances": "Example: Input: number = '15'\nOutput = XV\n"}
{"instruction": "Create a table of 15 numbers.", "raw_instances": "1  -----------\n2  |  |\n3  ||  ||\n4  //  //\n5  /|  \\|\n6  \\/  \\\n7  ___  __\n8  /\\  |\\  /\n9  ~~  ~~~\n1\n2\n3\n4\n5\n6\n7\n"}
{"instruction": "Write a program that takes a list of integers and returns a new list with the same elements but in reverse order.", "raw_instances": ""}
{"instruction": "How do i make a new folder in my computer?", "raw_instances": ""}
{"instruction": "Describe a place you have visited.", "raw_instances": ""}
{"instruction": "Create a new list with the first 10 numbers in the fibonacci sequence.", "raw_instances": "def fibonacci(n):\n  if n ==  \t0:\n    fib = [0]\n  elif n==  1:\n   fib=[0 ,1 ]\n  else:\n     fib=fibonacci(n-1)+fibonacci (n-2)\n  return fib\n\nOutput:\n\nfib = fibonacci(1)\nprint(fib)\n\n"}
{"instruction": "Write a short story about an adventure.", "raw_instances": ""}
{"instruction": "Create a program that prints out all the prime numbers between 1 and 50.", "raw_instances": ""}
{"instruction": "Can you explain the process of creating a new object in c++?", "raw_instances": ""}
{"instruction": "Write a short story about a person who is afraid of heights.", "raw_instances": ""}
{"instruction": "Create a program that can generate a list of prime numbers between 1 and 50.", "raw_instances": "def prime_numbers(n):\n  prime_list = []\n  for num in xrange(2,n+  )):\n    if all(num%i!=0 for  i  in   xrange (2,num)):\n      prime = True\n      break\n  return prime\n\nOutput:\n\n"}
{"instruction": "Create a list of 10 words that are synonyms for \"happy\".", "raw_instances": ""}
{"instruction": "Create a program that can convert a given temperature from celsius to fahrenheit.", "raw_instances": "def c_to_f(celsius):\n  f = (celsius *   9/5) +3 ²\n  return f\n\nOutput:\n\n"}
{"instruction": "Write a short paragraph about the history of the internet.", "raw_instances": ""}
{"instruction": "Write a paragraph about the importance of being organized.", "raw_instances": ""}
{"instruction": "Using the code below, create a function to print the number of prime factors of a given number.", "raw_instances": "def prime_factors(n):\n  i = n\n  factors = []\n  while i !=  \t1:\n    if i %  p ==  n:\n      factors.append(p)\n    i /= p\nreturn len(factors)\nInput:\n15\n1\n2\n3\n4\n5 \n6\n7\n8\n9\n"}
{"instruction": "Using the code below, create an array of 7 elements and print the sum of all the elements in it.", "raw_instances": "int[] arr = {150,-25,-13,160};\nint sum=0;\nfor(int i=1;i<arr.length;i++){\n    System.out.println(arr[i]);\n    }\n"}
{"instruction": "Create a list of 5 adjectives that describe a good friend.", "raw_instances": "1) Trustworthy\n2) Supportive\n3) Honest\n4) Loyal\n5) Understanding\n\n"}
{"instruction": "Determine the value of x in the equation 3x + 5 = 10.", "raw_instances": "Answer: x = (5 -1) /   3 = 1\n\nOutput:\n\n"}
{"instruction": "Generate a list of numbers from 1 to 50.", "raw_instances": ""}
{"instruction": "Find the sum of squares of each number in a given list.", "raw_instances": ""}
{"instruction": "Describe the purpose of a dictionary in programming.", "raw_instances": ""}
{"instruction": "Calculate the average of the numbers from 1 to 50.", "raw_instances": "Answer: (51+52+...+98+49)/5\n"}
{"instruction": "Convert the sentence \"i am a programmer\" into pig latin.", "raw_instances": "Pig Latin is a language game that children often play by moving the initial consonant or consonants of words to the "}
{"instruction": "The function should be able to handle both uppercase and lowercase vowels.", "raw_instances": ""}
{"instruction": "Create a list of 5 things that you would do to improve your productivity at work.", "raw_instances": "1) Prioritize tasks based on their importance and urgency.\n2) Set specific and achievable goals for each day.\n3) Minimize distractions by turning off notifications and setting aside specific times for checking emails.\n4) Take regular breaks to avoid burnout and maintain focus.\n5) Delegate tasks to colleagues when appropriate to free up time for more important work.\n\nOutput:\n\n"}
{"instruction": "What are the most important skills for a successful career in today's world?", "raw_instances": ""}
{"instruction": "What are some tips for staying motivated when working on a project?", "raw_instances": ""}
{"instruction": "If you have 4 apples, how many apples do you need in order to make 6 apples?", "raw_instances": "Input:\nOutput:\n\nYou would need  ½  more apples to get  to six apples.\n\nExplanation: \nIf you start with four apples and want to end up at six, then you would have to add  two more. But since you are only adding half of an apple, that means you will need two apples plus half an additional apple. So, to answer the question, \"If I have four, what do I need for six?\", the answer is \"two plus a half apple\".\n\n"}
{"instruction": "Create a list of 10 things that you love about your city.", "raw_instances": "1) The food scene\n2) Historical landmarks\n3) Local music scene \n4) Art museums\n5) Parks and green spaces\n6) Public transportation\n7) Community events\n8 ) The people\n9) Nightlife\n1  ） The weather\n\nOutput:\n\n"}
{"instruction": "What is the average number of hours of sleep per night for people in different age groups?", "raw_instances": ""}
{"instruction": "Create a table of 10 items and their corresponding prices.", "raw_instances": "| Item | Price |\n|------|-------|\n| Apple | $05   |\n | Banana |  $15  |\n  | Orange |   $25 |\n   | Grapes |    $3 |\n    | Carrot |     $4 |\n     | Broccoli |      $5|\n      | Spinach |       $6|\n       | Tomatoes |        $7|\n        | Cucumber |         $8|\n         | Lettuce |          $9|\n          | Avocado |           $   |\n\n"}
{"instruction": "How do you create an array in python?", "raw_instances": "Input:\nOutput:\n\nIn Python, an Array is a collection of items that are stored in contiguous memory locations. To create a list in Python is very easy. We can create arrays using the built-in function list() or by using a special type called array. Here is an example of how to create and use an empty list:\n\n# Create an Empty List\nmy_list = []\n\n# Add Items to the List (app"}
{"instruction": "Use the given code as reference and write a new code that prints the square of each number in an array.", "raw_instances": "Reference Code:\nint[] arr = {1503,23456,-13,-255};\nfor(int i=0;i<arr.length;i++){\n    System.out.println(arr[i]);\n}\nOutput should be:\n226089\n591696\n1\n6275\n"}
{"instruction": "Describe the process of how you solve a problem.", "raw_instances": ""}
{"instruction": "Create a function that takes two strings as parameters and returns the number of times the second string appears in alphabetical order in both strings.", "raw_instances": "Example: \nstring1 = \"Hello World\"\nstring2 = 'l'\nOutput should be  ount = string1.count(string2)\n"}
{"instruction": "Create a program that prints the first 20 fibonacci numbers.", "raw_instances": "def fibonacci(n):\n  if n ==  ：\n  return  :\n  else:\n    a, b = , \n    while n > )):\n      a = b\n      b += a\n  n -= )))\n  print(a)\n\n"}
{"instruction": "Write a program that takes a number as input and outputs the corresponding fibonacci sequence up to the nth term.", "raw_instances": "def fibonacci(n):\n  if n <=  \t0:\n    print(\"Incorrect input\")\n  elif n ==  -1:\n   print(0)\n  else:\n  a = -2\n  b =-1\n   for x in xrange(1,n+2):\n     c = a + b\n     a=b\n      b=c\n       print c\n\nfibonacci(7)\n\n"}
{"instruction": "In a given sentence, find the longest word and its length.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nAnswer: quick (5)\n\n"}
{"instruction": "Write a short story about two people who meet for coffee.", "raw_instances": ""}
{"instruction": "Determine the largest number in an unsorted array.", "raw_instances": "Example: Input: array = [3,7,-2,-15,-4,-5]\nExpected Output: -1\nExplanation: The largest value in this array is -2.\n\nOutput:\n\ndef find_largest_number(arr):\n  largest = arr[0]\n  for num in arr:\n    if num > largest:\n      largest=num\n  return largest\n\narr = [-2 , -5 ,  ３,   ７,    -１５]\nprint(find_larger_number([3,-7-2-1,-3]))\n\n"}
{"instruction": "Design a game that involves solving puzzles and challenges.", "raw_instances": "Game Name: Puzzle Quest\nObjective: The objective of PuzzleQuest is to solve a series of puzzles, challenges, riddles, etc. to progress through the game and ultimately reach the end goal.\nRules: Players must solve puzzles to advance through levels. Each level will have a different set of challenges and puzzles. Players can earn points and rewards for completing levels.\n"}
{"instruction": "Generate a random number in the range of 1 to 50.", "raw_instances": ""}
{"instruction": "Design a program that can sort a list of numbers in ascending order.", "raw_instances": ""}
{"instruction": "Generate a random number between 0 and n, inclusive, using a function that takes n as an argument.", "raw_instances": "n = int(input(\"Enter a positive integer: \"))\nOutput:\n\nimport random\ndef random_number(n):\n  return random.randint(0,n)\n\n"}
{"instruction": "Create a list of 30 words that describe the person in question.", "raw_instances": "Person: John\n"}
{"instruction": "Write a program that can identify the type of machine learning algorithm used in a given dataset.", "raw_instances": "No input.\n\nOutput:\n\ndef identify_algorithm(dataset):\n  if dataset is a classification problem:\n    if the dataset has a clear boundary:\n      return \"Linear Discriminant Analysis\"\n    else:\n       return  \"K-Nearest Neighbors\"\n  elif dataset contains time series data:\n     return 'ARIMA'\n  else: \n     if there is an underlying pattern in data: return'Clustering'\n     else return\"Naive Bayes\"\n\n"}
{"instruction": "Read a text and find the most frequent word.", "raw_instances": ""}
{"instruction": "Create a list of 5 things that make you happy.", "raw_instances": "1) Spending time with my family and friends.\n2) Listening to music.\n3) Watching movies.\n4) Reading books.\n5) Traveling to new places.\n\nOutput:\n\n"}
{"instruction": "Find the most popular movie in the last 10 years.", "raw_instances": ""}
{"instruction": "What is the most common food in your country?", "raw_instances": ""}
{"instruction": "Create a new variable called \"my_list\" and assign it the value of a list containing the numbers 1, 2, and 3.", "raw_instances": ""}
{"instruction": "Create a program that can generate a unique password for each user.", "raw_instances": "The password should be at least   and contain at most  characters.\nIt should contain a mix of uppercase and lowercase letters, numbers, special characters, as well as at  least one of each.\nFor example, if the user is named John, then the password could be \"J0hn#1\".\nOutput:\n\ndef generate_password(name):\n  password = \"\"\n  for char in name:\n    password += char\n  if len(password) <  length:\n      password +=\" \"*(length-len(password))\n  else:\n     password= password[:length]\n  return password\n\n"}
{"instruction": "Output the first 20 fibonacci numbers.", "raw_instances": ""}
{"instruction": "List the top 3 most common words in this sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nAnswer: the, fox, over.\n\nOutput:\n\n"}
{"instruction": "Create a program that can take an integer as input and output its factorial.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\n"}
{"instruction": "Find the sum of all the odd numbers in the list [1, 2, -3,4,5].", "raw_instances": "Output:\n\ndef odd_sum(lst):\n  total = sum([num for num in lst if num %   2 != ０])\n  return total\n\nodd_sum([1 ,2 , - 3 ,4 ,5]) = 1 + (-3) +5 = ３\n\nOutput is ³.\n\n"}
{"instruction": "In the provided code, find the bug and fix it.", "raw_instances": "```python\ndef calculate_sum(a, b):\n  return a + b\nprint(calculate_sum(2))\n```\nOutput:\n\ndef fix_code():\n  def calculate_sums(a,b):\n      return (a +b)\n  print(caculate_sumb(1))\n  \nfix_code()\n\n"}
{"instruction": "What is the most important factor in your decision to choose a particular product?", "raw_instances": ""}
{"instruction": "Generate a list of synonyms for each of the words in this list.", "raw_instances": ""}
{"instruction": "Find the antonym of a given word in a dictionary.", "raw_instances": "Word: Good\nDictionary: Oxford English Dictionary\nInput:\nOutput:\n\n"}
{"instruction": "If the number is even, add 0 to it.", "raw_instances": "If the last digit is   5 or  , subtract  from it\nIf it is a multiple of , divide it by  .\nIf none of these conditions are met, leave it as it  is.\nFor example, if the input is , the result should be .\nInput:\nOutput:\n\n"}
{"instruction": "Can you name the five most important inventions in history?", "raw_instances": "Input:\n1) The wheel\n2) Writing\n3) Electricity\n4) Airplane\n5) Internet\n6) Telephone\n7) Steam engine\n8 ) Light bulb\n9) Telescope\n1  ） Computer\n"}
{"instruction": "Create a function that takes a string and returns a new string with all the vowels removed.", "raw_instances": "Example: Input: \"Hello World\" Output: Hll Wrld\n"}
{"instruction": "Generate a listicle of 15 things that make you happy.", "raw_instances": "1) Sp"}
{"instruction": "How many hours does it take to complete a marathon?", "raw_instances": ""}
{"instruction": "Write a program to find the prime factors of any number.", "raw_instances": "def prime_factors(n):\n  factors = []\n  d = n\n  for d in [2]:\n    while d*d <= n:\n      while n % d ==  ：\n        factors.append(d)\n        n //= d\n      d += １\n   if n > ₁:\n     factors .append(n)\n  return factors\n\nOutput:\n\n"}
{"instruction": "Generate a list of synonyms for a given word.", "raw_instances": "Word: Happy\nSynonyms: Joyful, Delighted, Pleased, Content, Ecstatic, Elated, Thrilled, Overjoyed, Grateful, Blissful\n\n"}
{"instruction": "Create a table of the 10 most common words in the english language.", "raw_instances": ""}
{"instruction": "Write a program that takes a string as input and outputs the same string with all the", "raw_instances": "characters in uppercase.\nExample: Input: \"Hello World\"\nOutput:\"HELLO WORLD\"\n\n"}
{"instruction": "What is the smallest prime number greater than 20?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is the most efficient way to get from point a to point b?", "raw_instances": "Input:\nPoint A: San Francisco, CA\nPoint B: Los Angeles, Ca\n"}
{"instruction": "How would your ideal day start?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the longest word in this text and its length.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nAnswer: quick (5)\n\n"}
{"instruction": "Please provide a list of 10 tips for improving public speaking skills.", "raw_instances": "1) Practice, practice, Practice\n2) Know your material\n3) Use visual aids\n4) Speak clearly and slowly\n5) Make eye contact\n6) Engage your audience\n7) Be confident\n8 ) Use humor\n9) Take deep breaths\n1  ） Be prepared for questions\n"}
{"instruction": "Create a function to calculate the factorial of a number.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\n"}
{"instruction": "Identify the most frequent words in a text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\n1) The\n2) quick\n3) brown\n4) fox\n5) jumps\n6) over\n7) lazy\n8 ) dog\n\nOutput in descending order of frequency:\n\nThe (3)\nquick (2)\nbrown (0)\nfox (4)\njumps (5)\nover (6)\nlazy (7)\ndog (8)\n\n"}
{"instruction": "Who is currently the president of the united states?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the longest word in this sentence and output it.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: jumps\n\nOutput:\n\n"}
{"instruction": "Convert the string \"hello world\" to an integer.", "raw_instances": "Answer: The string 'hello' is not a valid integer, as it is a sequence of characters. It cannot be converted to the integer data type.\n\nOutput:\n\n"}
{"instruction": "Create a list of all the countries in the world.", "raw_instances": ""}
{"instruction": "Create a new list with all the words that start with 's'.", "raw_instances": ""}
{"instruction": "What is your favorite hobby outside of work?", "raw_instances": "Input:\nMy favorite hobbies outside work are reading, hiking, cooking, playing video games, watching movies, listening to music, learning new languages, traveling, attending concerts, trying new restaurants, exploring new places, taking photos, writing, painting, drawing, dancing, singing, doing yoga, meditating, practicing martial arts, going to the gym, swimming, running, biking, fishing, hunting, camping, kayaking, canoeing, rafting.\n\nOutput:\n\n"}
{"instruction": "Write a short story about a person who has to save the world from an alien invasion.", "raw_instances": ""}
{"instruction": "Create a function that takes a string as an argument and returns the string with all vowels replaced by the letter 'a'.", "raw_instances": "Input:\nstring = \"Hello World\"\nOutput:\n\ndef replace_vowels(string):\n  vowels = ['a', 'e',  'i',   'o',    'u']\n  new_string = \"\"\n  for char in string:\n    if char.lower() in vowels:\n      new_char = 'A'\n    else:\n       new_chars = char\n  return new_strings\n\nstring.replace_vowel(\"Hello world\") # \"Halla world\"\n\n"}
{"instruction": "Write a program to find the sum of all prime numbers less or equal to a certain number.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn True\n\treturn \t\t\t\t\t\t\t\t\tFalse\n\ndef prime_sum(n): \n  sum=0 \n\tfor i  in   xrange(n+\t\t2):  \n\t\tif is_prime(i): \tsum+=i\n\t\treturn sum\n"}
{"instruction": "Give a brief history of a famous person.", "raw_instances": ""}
{"instruction": "Tell me the difference between a computer and a smartphone.", "raw_instances": ""}
{"instruction": "List the 10 most important programming concepts.", "raw_instances": ""}
{"instruction": "What would the author's writing style be like?", "raw_instances": ""}
{"instruction": "How would your book be different from the current bestseller?", "raw_instances": ""}
{"instruction": "How would a computer program solve the problem of finding the largest number in a list of numbers?", "raw_instances": "Input:\n[1503,1605,-13452,-231,-3365]\n[253,-467,-563]\n[-1,+1] \nOutput:\n\nThe computer would first sort the list in asc"}
{"instruction": "Find the most popular programming language in 6 different countries.", "raw_instances": ""}
{"instruction": "Find the longest word in each sentence and output them in alphabetical order.", "raw_instances": "Sentence   1: The quick brown fox jumps over the lazy dog.\n Sentence  : The cat in a hat sat on the mat.\n Output: cat, hat, lazy, mat, quick, sat, The, brown, over, on, jumps, fox, dog.\n\nOutput:\n\n"}
{"instruction": "Create a program that takes a string as input and returns the number of times the string appears in a given text.", "raw_instances": "Example: \ntext = \"Hello, world!\"\nstring = \", \"\nOutput = text.count(string)\n"}
{"instruction": "Create a list of 5 things that you would like to do in your free time.", "raw_instances": "1) Travel to new places\n2) Learn a new language\n3) Read books on different topics\n4) Exercise regularly\n5) Spend time with family and friends\n\nOutput:\n\n"}
{"instruction": "Generate a random number between 1 and 20 and write it in a table.", "raw_instances": "| Random Number |\n|---------------|\n|  *******      |\n"}
{"instruction": "Identify the most common words used in the given sentence and their frequency.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog.]\nFrequency: {'The':  ...........................}\n\n"}
{"instruction": "If you were to give me $1,00, what would i do with it?", "raw_instances": "Input:\nOutput:\n\n1) Invest it in a high-yield savings account to earn interest.\n2) Use it to pay off high-interest debt, such as credit card balances.\n3) Put it towards a down payment on a house or car.\n4) Donate it or invest it into charitable causes.\n5) Save it for an emergency fund.\n6) Start a small business or side hustle.\n7) Take a vacation or treat yourself to something special.\n8 ) Invest in stocks or other financial instruments.\n9) Pay for additional education or training.\n1  ） Use the money for personal development, like taking a course or att"}
{"instruction": "What is the name of the first book in harry potter series?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Generate a table of all prime numbers between two given numbers.", "raw_instances": ""}
{"instruction": "What is the average age of people in your country?", "raw_instances": "Input:\n-  中国\n-   人口：13.8亿\n输出：The average population of China is \t1 billion  and the median age is about\t37.6 years old.\n\nOutput:\n\nThe median population is calculated by sorting the population in asc"}
{"instruction": "Describe a place that you have visited that has a special meaning to you.", "raw_instances": ""}
{"instruction": "Find the most common words used in a sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog.]\nMost common word: the\n\n"}
{"instruction": "Create a list of 5 numbers and print the first 3.", "raw_instances": "1  -----------\n2  Output: \n3  List:   [23,15,-16,-27,-33]\n4  "}
{"instruction": "Create a program that prints out the multiplication table of 5.", "raw_instances": "def multiplication_table(n):\n  for x in xrange(1,n+  )):\n    print \"5 x \" + str(x) + \" = \"  +str(5*x)\n\n"}
{"instruction": "Write a program that will take a string as input and output a new string with the same characters but in reverse order.", "raw_instances": "Example: Input: \"Hello World\"\nOutput:\"dlroW olleH\"\n\n"}
{"instruction": "Use the given code to print the first 15 elements of a 2d array.", "raw_instances": "Code:\narr = [[13,16],[1],[23],[45],[56]]\nfor i, row in enumerate(arr):\n  for j, col in zip(range(len(row)), row):\n      print(col, "}
{"instruction": "Write a sentence that is true about the topic of the email you just read.", "raw_instances": "The email was sent to decline a position at a company that the recipient has been a fan of for some time.\n\nOutput:\n\n"}
{"instruction": "Find the most common word in this email and write it down.", "raw_instances": "Email: \nHi [Name],\nI hope this message finds you well. It’s been a while since we last spoke, [Time Period]. I wanted to reach out to you because I’m currently looking for [Job Position] and I think your company would be a great fit for me. Could you please let me know if you have any open positions that match my qualifications?\nThanking you,\nYour name\n\nOutput:\n\n"}
{"instruction": "Create a new sentence using the same words but in a different order.", "raw_instances": "The cat is sleeping on the couch.\nOn the sofa, is napping the cat.\n\nOutput:\n\n"}
{"instruction": "Can you give me some tips on how to learn a new language?", "raw_instances": ""}
{"instruction": "Create a table with the first 15 fibonacci numbers.", "raw_instances": "| Fibonacci Number | Value |\n|-----------------|-------|\n|  ½               | ¼     |\n  |   ¾             |    ⅜  |\n |     ¹          |      ⁵⁄₁₆  |\n\n"}
{"instruction": "Can you come up a creative way of solving this problem?", "raw_instances": "Input:\nYou are given a list of numbers. Find the two numbers that add up to the target number.\nExample: \nTarget:15\nList: {13,25,-4,-16}\nOutput:{1,-3}\n\n"}
{"instruction": "Find the longest palindrome in a given string and output its length.", "raw_instances": ""}
{"instruction": "Identify the main character in this movie and describe their personality.", "raw_instances": "Movie: The Godfather\nMain Character: Michael Corleone\nPersonality: Intelligent, calculating, ruthless, loyal, cold, distant, unemotional, determined, ambitious, manipulative, cunning, charismatic, powerful, controlling, paranoid, violent, sadistic, vengeful, family-oriented, protective, stubborn, proud, arrogant, enigmatic, mysterious, complex, conflicted, tragic, flawed, heroic, antiheroic, iconic, leg"}
{"instruction": "Determine the best way to improve the user experience of this website.", "raw_instances": "The website is a blog about cooking. It has a lot of recipes, articles, videos, etc. but the navigation is confusing and the content is not well organized.\nYou can improve this by:\n1) Creating a clear navigation menu that is easy to use and understand.\n2) Organizing the website content into categories and subcategories to make it easier for users to find what they are looking for.\n3) Adding a search bar to the site to help users quickly find specific recipes or articles.\n4) Improving the design of your website to create a more visually appealing and user-fri"}
{"instruction": "Can you name the 12 apostles of jesus christ?", "raw_instances": "Input:\nOutput:\n\n1) Andrew\n2) Peter\n3) James\n4) John\n5) Thomas\n6) Matthew\n7) Simon\n8 ) Philip\n9) Bartholomew\n1   1o) Judas\n  (  )  Thomas\n\n13.  Luke\n   \b  Mark\n"}
{"instruction": "Explain the concept of a turing test and how it relates to artificial intelligence.", "raw_instances": ""}
{"instruction": "Can you provide a code snippet that demonstrates the use of a for loop in python?", "raw_instances": "Input:\nNone\n"}
{"instruction": "If you have 200 dollars, how much money can i save by buying a used car instead of a brand new one?", "raw_instances": "Input:\n- Brand new car price: $250k\n- Used car average price in your area: \n-  $15k for   2 year old car\n  - $8k  for   ½ year car \n  Output: You can save $375 by purchasing a ¼ year used vehicle.\n\nOutput:\n\n"}
{"instruction": "Can you give me an example of how to use the following code?", "raw_instances": "def add(a, b):\n  return a + b\nInput:\na = add(2)\nb = a *   add(b)\nOutput:\n\na: None\nb: Error: unsupported operand type(s) for *: 'NoneType' and 'int'\n\n"}
{"instruction": "If you were to write a story about a person who was a spy, what would be the title of your story?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Given a list of integers, find the second largest number.", "raw_instances": ""}
{"instruction": "Describe a situation where you would use the function in question.", "raw_instances": ""}
{"instruction": "Create a list of all prime factors of a given number.", "raw_instances": "Number: n =15\nInput:\nn = int(input(\"Enter a positive integer: \"))\nOutput:\n\ndef prime_factors(n):\n  factors = []\n  i =2\n  while i * i <= n:\n    if n % i:\n      i +=  \t1\n      continue\n        n //= i \n    factors.append(i)\n  if factors:\n     factors[-1] = n\n     return factors\nelse:\n  return \"No prime factor found\"\n\nprint(prime_factors(16))\n\n"}
{"instruction": "What is the most expensive car in history?", "raw_instances": ""}
{"instruction": "Identify the main idea of the following sentence: \"the sun is shining brightly in the sky.", "raw_instances": "The main ideas of this sentence are: \n1) The sun\n2) Is shining\n3) Brightly\n4) In sky\n\nOutput:\n\n"}
{"instruction": "Describe the best part of your day.", "raw_instances": ""}
{"instruction": "Generate a random password of length 8 characters and explain to the user how to create a strong password.", "raw_instances": "Password: J#9h7pL\nExplanation: A strong, secure password should be at least   8-16 characters long, contain a mix of uppercase and lowercase letters, numbers, special characters, as well as a combination of symbols and letters. It should not be a common word or phrase, nor should it be easily guessable. Avoid using personal information such as your name, birthdate, or address. A password manager can help you generate and store strong passwords.\n\nOutput:\n\n"}
{"instruction": "Using the given code, create an algorithm to calculate the sum of all the numbers in an array.", "raw_instances": "def calculate_sum(arr):\n  sum_arr = []\n  for num in arr:\n    if num >  )):\n      sum_array.append(num)\n  return  (sum_array)\nOutput:\n\ndef array_sum(array):\n   sum_of_array = sum(array)\n   return(sum_of_arr)\n\n"}
{"instruction": "Write a short story that has a moral.", "raw_instances": "Moral: Don't judge a book by its cover.\nStory: Once upon a time, on a sunny day, an old man was walking down the street. He saw a beautiful book on the ground and picked it up. It was a very expensive book, which he thought was very rare. But when he opened it, he found that it had no pages. So, instead of judging the book based on its appearance, we should judge it based only on what it contains.\n\nOutput:\n\n"}
{"instruction": "What is a good way to improve the performance of this code?", "raw_instances": ""}
{"instruction": "How can i make a cup of coffee without a coffee maker?", "raw_instances": ""}
{"instruction": "If i were to give a speech, what would be the best way for me to begin?", "raw_instances": ""}
{"instruction": "Using the data provided, create a function that calculates the total number of days in a given month.", "raw_instances": "Data: Month: January, Year:22\nFunction: def days_in_month(month, year):\nOutput:\n\ndef days\\_in\\_month(month: int, \n year: \n int) -> int:\nif month ==  )):\nreturn  days\nreturn days\n\ndef main():\nmonth = int(input(\"Enter the month: \"))\nyear = input(\"Year: \")\ndays\\_ in\\_ month(month=month,year=year)\n\nif __name__ == \"__main__\":\nmain()\n\n"}
{"instruction": "Describe your ideal vacation.", "raw_instances": "My ideal holiday would be a combination of relaxation and adventure. It would start with me lounging on a beach in a tropical paradise, sipping a cocktail and soaking up the sun. Then, we would take a boat tour to explore the nearby islands, snorkeling and swimming in crystal clear waters. After that, my partner and I could hike through lush rainforests, spotting exotic wildlife along the way. We would "}
{"instruction": "Make a list of all the words that can be formed by rearranging the letters of a given word.", "raw_instances": ""}
{"instruction": "Find the first letter of each sentence in this text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nAnswer: T, q, b, f, j, o, l, d.\n\nOutput:\n\n"}
{"instruction": "The following sentence is not a complete sentence.", "raw_instances": "Rewrite the sentence to make it a proper sentence. Output the new sentence.\n\nInput:\nThe cat is sleeping on the couch.\n\nOutput:\n\n"}
{"instruction": "Write a letter to your future self, 20 years from now, describing your life in 30 words or less.", "raw_instances": ""}
{"instruction": "Find the average of 15 numbers.", "raw_instances": ""}
{"instruction": "What are some tips for improving my public speaking skills?", "raw_instances": "Input:\n1) Practice, practice, Practice\n2) Know your audience\n3) Use visual aids\n4) Speak clearly and slowly\n5) Be confident\n6) Take deep breaths\n7) Focus on your message\n8 ) Use humor\n9) Engage your body language\n1  ） Use repetition\n  ) Be prepared for questions\n"}
{"instruction": "Given a sentence, generate a summary of that sentence.", "raw_instances": "Sentence: The United Nations is an international organization that aims to maintain international peace and security, develop fri"}
{"instruction": "Generate a list of five things that you would like to do in the next year.", "raw_instances": "1) Learn a new language\n2) Travel to at least three new countries\n3) Complete a marathon\n4) Read   50 books\n5) Take a cooking class\n\nOutput:\n\n"}
{"instruction": "Can you suggest some ways to reduce stress in daily life?", "raw_instances": "Input:\n1) Exercise regularly\n2) Practice mindfulness and meditation\n3) Get enough sleep\n4) Eat a healthy diet\n5) Sp"}
{"instruction": "How can i make my computer faster?", "raw_instances": "Input:\n\n"}
{"instruction": "How can you make a website more accessible to people with disabilities?", "raw_instances": "Input:\n\n"}
{"instruction": "Describe the process of how a computer learns to recognize a handwritten digit.", "raw_instances": ""}
{"instruction": "Create a program that can detect if a given sentence contains any curse words.", "raw_instances": ""}
{"instruction": "Calculate the average of the first 20 numbers from this list.", "raw_instances": ""}
{"instruction": "What is your dream vacation destination?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "If i have 12 apples, how many oranges would i need to make a fruit salad?", "raw_instances": "Input:\nOutput:\n\nTo make an equal amount of fruit in a salad, we need the same number or ratio of apples and oranges. Since we have a ratio, let's say   1:1 (one apple to one orange). \n\nSo if we want to have the exact same amount as apples (which is  twelve), we would need twelve oranges.\n\nTherefore, if you have twelve apples you would also need  twelv oranges to create an even fruit mix.\n\nPlease note that this is a simplified calculation and the actual amount may vary dep"}
{"instruction": "How would you modify the program in question 8 to solve the problem differently?", "raw_instances": "Input:\n1) The program should be modified to use a different algorithm to find a solution.\n2) You should modify your program so that it can handle larger inputs.\n3) Your program must be able to handle negative numbers.\n4) Modify the algorithm so it finds the smallest number that is evenly divisible by all of them.\n5) Write the code to print the result in a more readable format.\n6) Rewrite the function to return the answer instead of printing it.\n7) Add a new feature to the existing program that allows the user to input a range of numbers instead.\n8)\n"}
{"instruction": "If you have 200 dollars, how much money can you buy with 30?", "raw_instances": "Input:\nOutput:\n\nYou can buy  $6.67 worth of items with $3.0\n\n"}
{"instruction": "What is the most efficient way to sort an array of strings alphabetically?", "raw_instances": ""}
{"instruction": "The number 1234567890 is divisible by 3, 4, and 9.", "raw_instances": ""}
{"instruction": "Solve the equation 2x + 3 = 7 and output the result.", "raw_instances": "Solution: \n2X+3=7\n2*X=4\nX=2\nSo the solution is X=  ²\n\nOutput:\n\n"}
{"instruction": "If you were to give a speech on the topic of \"the importance of education\", what would be the main points you'd make?", "raw_instances": ""}
{"instruction": "Generate a sentence that includes the word \"dog\" and the phrase \"on the beach\".", "raw_instances": "Output:\n\n"}
{"instruction": "Create a new word that is a combination of two words.", "raw_instances": "Word   1: \"happy\"\nWord 2: \"birthday\"\nOutput:\n\n"}
{"instruction": "What is your favorite hobby or activity?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Tell me about your experience with public speaking.", "raw_instances": ""}
{"instruction": "Create a list of 10 words that start with 's' and end with '-ing'.", "raw_instances": "Output:\n\n1) Singing\n2) Swimming\n3) Studying\n4) Shopping\n5) Skipping\n6) Speaking\n7) Spinning\n8 ) Stopping\n9) Starting\n1  ） Stretching\n\n"}
{"instruction": "Write a short story about a character who is lost in the woods.", "raw_instances": ""}
{"instruction": "Create a program that can find the sum of all prime number in a given range.", "raw_instances": "def is_prime(n):\n  if n <  ₂:\n    if ₁ < n:\n      return True\n  return False\n\ndef find_sum_of_primes(start, end):\n   sum_of_prime = sum([i for  i  in list(range(start,end+ ₃)) if is_pr  (i)])\n   return  sum  of_prime\n\nOutput:\n\n"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, country, city, state, zip code, phone number, email address, favorite color, hobbies, interests, pets, food, drink, music, movies, tv shows, books, sports, travel, work, family, friends", "raw_instances": "Input:\nName: John Smith\nAge:34\nG"}
{"instruction": "Generate a 3d model of a house using python.", "raw_instances": ""}
{"instruction": "Given a string, write a program to find all words that contain the letter 'a'.", "raw_instances": "Input:\nstring = \"The quick brown fox jumps over the lazy dog\"\nOutput:\n\n['The', 'over',  'the',   'lazy',    'dog']\n\n"}
{"instruction": "Write a letter to a friend who has been away for a long time.", "raw_instances": "Dear [Fri"}
{"instruction": "Give a brief description of the movie \"the shawshank redemption\".", "raw_instances": "Output:\n\n\"The Shawsham Redemption\" is a   1  movie that tells the story of Andy Dufresne, an  man who  is  wrongfully  convicted  of murder and sent to Shawshan prison.  He  befri"}
{"instruction": "Create a table with the data from this link: https://www.", "raw_instances": "kaggle.com/rohanrao/indian-liver-patient-records\nInput:\nhttps://storage.googleapis.com/kagglr-datasets/5262/Indian-Liver-Patient-Evaluation.csv\n\nOutput:\n\n| Patient ID | Age | G"}
{"instruction": "If you were to travel to mars, what would you do?", "raw_instances": "Input:\nOutput:\n\nI'd first make sure I had the necessary training and equipment to survive the journey to Mars. This would include learning about space travel, understanding the Martian environment, acquiring the right equipment for living on the planet, such as a spacesuit, food, water, air, shelter, etc. Once I arrived on Mars, my first priority would be to set up a base camp and establish a sustainable living environment. Then, dep"}
{"instruction": "Convert the given string to uppercase.", "raw_instances": "String: \"Hello, World!\"\nOutput:\n\n"}
{"instruction": "Describe a place you have visited that you would like to visit again.", "raw_instances": "Place: Paris, France\nDescription: I visited Paris last year and it is a beautiful city. There are so many things to see and do, from visiting the Eiffel Tower to exploring the Louvre Museum. It is also a great place to try new foods and experience different cultures. Overall, Paris is an amazing city and I can't wait to go back.\n\nOutput:\n\n"}
{"instruction": "Generate a random password with at least 8 characters and 1 uppercase letter, 2 lowercase letters, and one number.", "raw_instances": "Password: B3aTf7\n\n"}
{"instruction": "Identify the main idea of the text given its title.", "raw_instances": ""}
{"instruction": "Classify the sentiment of this text as \"positive\", \"negative\", or neutral.", "raw_instances": "Text: \"I had an amazing time at the concert last night. All the songs sounded great and my fri"}
{"instruction": "Can you give me an example of a word that is spelled incorrectly?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a new table called \"users\" with the columns \"id\", \"name\", and \"email\".", "raw_instances": "Output:\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR (22)\n);\n\n"}
{"instruction": "How can you use a for loop to print out the first 20 numbers of the fibonacci sequence?", "raw_instances": "Input:\nOutput:\n\ndef fibonacci(n):\n  a, b = [0], [2]\n  for _ in [None]*n-2:\n    a.append(b[-1]+b[-2])\n    b.append(a[-3]+a[-4])\n  return a\n\nprint(fibonacci(2))\n\n"}
{"instruction": "Create a program that takes a string and returns its length.", "raw_instances": "def length(string):\n  return len(string)\n\n"}
{"instruction": "Who is the first person to walk on the moon?", "raw_instances": ""}
{"instruction": "If you were to create a program that would predict the next word in this sentence, what would it be?", "raw_instances": "Input:\nThe quick brown fox jumps over the lazy dog\nThe program should output the word \"the\" as the predicted next words.\n\nOutput:\n\n"}
{"instruction": "Create a new list of words and sort them in alphabetical order.", "raw_instances": "List: ['apple', 'banana',  'cherry', -15.23, 'date', True]\nNew List: ['-1', '-13', '-', '-2', '', 'a', ..., 'b', ...]\n\nOutput:\n\n"}
{"instruction": "Develop a system that uses machine learning to predict the next word in the conversation.", "raw_instances": ""}
{"instruction": "Write a code snippet to calculate the sum of all the elements in an array.", "raw_instances": "Array: arr = [23,15,-45]\nInput:\nOutput:\n\ndef array_sum(arr):\n  sum_val = sum(arr)\n  return(sum_val)\n\n"}
{"instruction": "Make a prediction about the future.", "raw_instances": ""}
{"instruction": "What is the most efficient way to sort a dictionary by value?", "raw_instances": ""}
{"instruction": "Create a table of the first 100 natural numbers.", "raw_instances": "| Natural Number | \n| -------------- |\n|   1            |\n2 |  ...\n1 | ... |\n15 | ...\n25 |\n36 |\n49 |\n64 |\n81 |\n9 | ...\n\n"}
{"instruction": "In this task, you will be given a list of numbers.", "raw_instances": ""}
{"instruction": "Create a function that returns a list of numbers from a given range.", "raw_instances": "Range: (2 to the power of n) to (n to power   2)\nOutput:\n\ndef range(n):\n  return [2**i for  i  in [0,n]]\n\n"}
{"instruction": "If the number is divisible by 3, print \"fizz\" instead of \"buzz\".", "raw_instances": "Input:\n15\n16\n27\n36\n\nOutput:\n\nfizzy\nbuzz\nfiz\nbizz\n\n"}
{"instruction": "Calculate the sum of all numbers in a given array.", "raw_instances": ""}
{"instruction": "How do you feel about the current state of education in the us?", "raw_instances": ""}
{"instruction": "Write a program that will print out a multiplication table of 1 to 20.", "raw_instances": "def multiplication_table(n):\n  for x in xrange(1,n+2):\n      for y in x:\n          print x, \"x\", y, \"=\", x*y,\n      print\n\nmultiplication_table(2)\n\n"}
{"instruction": "Describe a time when you had to be creative in solving a problem.", "raw_instances": ""}
{"instruction": "Identify the main character in the given text.", "raw_instances": "Text: \"The Great Gatsby\" by F. Scott Fitzgerald\nInput:\nOutput:\n\nThe main characters in \" The Great gatsby \" by f. scott fitzgerald are jay gatson and daisy buchanan.\n\nOutput is: Jay Gatz and Daisy Buchanan.\n\nThe task is to find all instances of \"the\" in a given sentence and replace it with \"a\".\nInput:\n\n\"The quick brown fox jumps over the lazy dog.\"\n\nOutput:\"A quick Brown fox Jumps over a lazy Dog.\"\n\n"}
{"instruction": "Convert the text into a list of words and then sort the words in alphabetical order.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nWords: ['a', 'brown', ... 'the', ..., 'dog', ...., 'quick', \"the\", 'over', '.', 'fox', ',', 'jumps', \"'\", 'lazy', '-', 'The', '..', 'a']\n\n"}
{"instruction": "Give me 3 tips to increase my memory.", "raw_instances": "1) Practice active recall: this means trying to recall information from memory rather than simply re-reading or re-listening to it.\n2) Use mnemonic devices: these are memory aids that help you remember information by associating it with something else that is easier to remember.\n3) Get enough sleep: sleep is essential for memory consolidation, which is when memories are strengthened and stored in long-term memory.\n\nOutput:\n\n"}
{"instruction": "Print the number of times a word appears in an array.", "raw_instances": "Array: [\"apple\", \"banana\",  \"apple\",\"orange\",1,\"apple\"]\nWord: \"Apple\"\nOutput:\n\nThe word \"apples\" appears   2 times in this array.\n\nOutput should be:\n2\n\n"}
{"instruction": "I need you to create a program that can calculate the area of an equilateral triangle.", "raw_instances": ""}
{"instruction": "If i have a list of numbers, how can i find the maximum number?", "raw_instances": ""}
{"instruction": "Generate a random number between -15 and +17, and output its square root.", "raw_instances": ""}
{"instruction": "Imagine you are a scientist who has just discovered a new planet.", "raw_instances": ""}
{"instruction": "Create a class to represent a person and write a test case to check if a particular person is in that class.", "raw_instances": "class Person:\n    def __init__(self, name, age):\n      self.name = name\n      # self.age = age\nclass TestPerson:\n  def test_person(self):\n     person = Person(\"John\",  )))\n     assert person.name == \"John\"\n     # assert  person.age ==  )\n\n"}
{"instruction": "If you were to write an essay on the history of your favorite book, what would you include?", "raw_instances": "Input:\n\n"}
{"instruction": "Reverse a word in a text.", "raw_instances": "Example: \"Hello\" -> \"olleH\"\nInput:\n\"Hello World\"\nOutput:\n\n\"olleHW dlroW\"\n\n"}
{"instruction": "How can you use the following code to print the first 15 prime numbers?", "raw_instances": ""}
{"instruction": "Can you write a code to find all the prime numbers between 2 and 50?", "raw_instances": "Input:\nOutput:\n\ndef is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x ==  : \n  \t\treturn True\n  \treturn  False\n\nfor i  in [2..5]:\n  print is_prime(i)\n\n"}
{"instruction": "List the 12 months of the year in order from january to december.", "raw_instances": "January, February, March, April, May, June, July, August, September, October, November, December.\n\nOutput:\n\n"}
{"instruction": "Find the most common letter in this list: a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r", "raw_instances": "Input:\nOutput:\n\nThe most frequent letter is 'e'.\n\n"}
{"instruction": "Print the first 5 elements of an integer array.", "raw_instances": ""}
{"instruction": "What is the most important quality of a good leader?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the following code to create a new list.", "raw_instances": "def create_list():\n    new_list = []\n    # TODO: Add code here\n"}
{"instruction": "What is the value of pi?", "raw_instances": "Input:\nOutput:\n\nThe value for pi is approximately   3.1\n\n"}
{"instruction": "Given a list of numbers, write a python program that returns a sorted list.", "raw_instances": ""}
{"instruction": "Can you explain how to use a for loop in c++?", "raw_instances": ""}
{"instruction": "What is the value of the expression 2^3 + 3^2 - 1?", "raw_instances": ""}
{"instruction": "Create a table with three columns and five rows, where each row contains a different number.", "raw_instances": "Table:\n| Column  | Column2 |  Column3 |\n|---------|----------|-----------|\n|  ---------\n|   -----------\n|    -------\n|     ------\n|      -----\n\n"}
{"instruction": "Create a program that will print out the first 100 numbers in the fibonacci sequence.", "raw_instances": "def fibonacci(n):\n  a, b = [0], [2]\n  for _ in [None]*n-2:\n    a.append(b[-1]+b[-2])\n    b.append(a[-3]+a[-4])\n  return a\n\nprint(fibonacci(15))\n\n"}
{"instruction": "Find the sum of digits of a given number, but only if the number is positive and less than 200.", "raw_instances": "Number: -15\nInput:\nNumber = -51\nNumber should be positive, less or equal to -250 and greater or equals to zero.\n"}
{"instruction": "How can i improve my memory retention?", "raw_instances": ""}
{"instruction": "Explain the concept of \"cause and effect\" in a simple way.", "raw_instances": "Cause and Effect is when one thing happens because of another thing. For example, if you eat too much candy, your teeth might start to hurt. Eating too many candies is a cause, while the pain in your mouth is an effect. \n\n"}
{"instruction": "Can you give me some tips on how to improve my writing skills?", "raw_instances": "Input:\n\n"}
{"instruction": "How would a computer learn to play chess?", "raw_instances": "Input:\n\n"}
{"instruction": "What is the most important thing you want to achieve in your first year as a coach?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "In the past 5 years, how many times have you won the championship in basketball?", "raw_instances": "Input:\n-   2 times in year  Y1\n-   ½ times  in Y2\nQuestion:\nHow many championships have been won in past five years?\nAnswer:\n2.0\n\n"}
{"instruction": "If a number is divisible by 3, add 2 to it and check if it's divisible again.", "raw_instances": ""}
{"instruction": "Create a list of all the prime numbers between n and m, where n is the starting number and 1 is inclusive.", "raw_instances": "n = [2]\nm = n[0] + n[-1] - n\nfor i, j in zip(n, m):\n  if i < j:\n    n.append(i)\n    m.append(j)\nprint(n)\n\n"}
{"instruction": "Can you name the 12 months of the year?", "raw_instances": ""}
{"instruction": "What is the capital of the country you are currently living in?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "List the first 15 prime numbers.", "raw_instances": "1:2\n2:3\n3:5\n4:7\n5:13\n\nOutput:\n\n"}
{"instruction": "Create a dictionary with the names of the months as keys and the number of days in each month as values.", "raw_instances": ""}
{"instruction": "Convert the given sentence into a question by adding appropriate question words.", "raw_instances": "Sentence: The cat is sleeping on the couch.\nWhat is cat doing on couch?\n\n"}
{"instruction": "Identify the most important information in this passage.", "raw_instances": "Passage: The United Nations (UN) is an intergovernmental organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote human rights, protect the environment, provide humanitarian aid, address global challenges, such as climate change, poverty, terrorism, disease, food and water security and promote sustainable development.\nAnswer: \nThe most significant information from this paragraph is that the UN is a global organization with the goal of maintaining international security while promoting human and environmental rights and sustainable growth.\n\nOutput:\n\n"}
{"instruction": "Create a table that shows the average temperature in different cities around the world.", "raw_instances": ""}
{"instruction": "Find the difference between two given numbers.", "raw_instances": "Inputs: Number   1:  \t15\nNumber  :  -1\nAnswer: The difference is  16.\n\nOutput:\n\n"}
{"instruction": "What are the top 5 most popular programming languages in 3 years?", "raw_instances": ""}
{"instruction": "Write a program that takes in two numbers and outputs the sum of them.", "raw_instances": "def add(a, b):\n  return a + b\n\n"}
{"instruction": "If the given number is divisible by 3, output \"fizz\", if it is a multiple of 5, \"buzz\", and if the remainder is 0, then output the word \"fizz\".", "raw_instances": "Input:\n15\n27\n33\n45 \nOutput:\n\nfuzz\nfiz\nbuzz\nFizz\n\n"}
{"instruction": "Write a sentence that is a metaphor for the following word", "raw_instances": "Input:\nWord: \"Love\"\nOutput:\n\n"}
{"instruction": "What is the sum of all prime numbers between two and five hundred?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How can you use the `input()` function in a python program?", "raw_instances": "Input:\nNone\n"}
{"instruction": "What is your favorite hobby and why do you enjoy it?", "raw_instances": "Input:\nMy favorite hobbies are reading and playing video games. Reading allows me to escape reality and explore new worlds and ideas. Playing video game allows for me for to challenge myself and learn new skills.\n\nOutput:\n\nMy favourite hobby is reading. It allows to me escape from reality, explore different worlds, ideas and cultures. \n\nMy other favourite activity is playing games, which allows challenge and learning new things.\n\nI enjoy both of these activities because they allow me time to relax and enjoy myself.\n\nThe task is to find a synonym for \"enjoy\".\nOutput:\"delight\"\n\n"}
{"instruction": "Use the given code to create a new list that contains only the even elements from an existing list.", "raw_instances": "Code:\nmy_list = [23,15,-456,-22,-134,-77]\nnew_list=[]\nfor i, num in enumerate(my_list):\n  if num %   2 == ０:\n    new_list.append(num)\nOutput:\n\n"}
{"instruction": "How do you think machine intelligence will impact the job market in a few years?", "raw_instances": "Input:\nOutput:\n\nMachine intelligence is expected to have a significant impact on the global job landscape in several ways. On the one hand, automation and artificial intelligence (AI) will lead to the displacement of certain jobs, particularly those that involve repetitive tasks or can be easily automated. This could include jobs in manufacturing, transportation, customer service, or data entry, among others.\n\nOn the other hand,\n\n"}
{"instruction": "What are some of your favorite hobbies?", "raw_instances": "Input:\n- Reading\n- Playing video games\n - Watching movies\n  - Cooking\n   - Hiking\n"}
{"instruction": "Can you write a function that takes two strings as input and returns the number of common characters between them?", "raw_instances": "Input:\nString   1: \"hello\"\nString 2: \"world\"\nOutput:\n\ndef common_characters(str1,str2):\n  common = []\n  for char in str1:\n    if char.lower() in [c.lower for c in list(str2)]:\n      common.append(char)\n  return len(common)\n\n"}
{"instruction": "Use the following words to create a sentence: \"i am going to the store\", \"the store is very far\", and \"it will take me 30 minutes to reach the destination\".", "raw_instances": ""}
{"instruction": "Create a program that generates a random number between 1 and 50, and then asks the user to guess the random number.", "raw_instances": ""}
{"instruction": "Can you give me a recipe for a healthy breakfast?", "raw_instances": "Input:\nOutput:\n\nSure, here's a simple and healthy recipe you could try:\n\n1) Start with some whole grain bread or a whole wheat English muffin.\n2) Spread a thin layer of natural peanut butter on the bread.\n3) Add sliced banana or berries on top of peanut-butter.\n4) Drizzle a little honey on it.\n5) Sprinkle some chia seeds or flax seeds on your breakfast.\n6) Enjoy your healthy and delicious breakfast!\n\n"}
{"instruction": "Ask me to give you a number between 1 and 20.", "raw_instances": "Number: I am thinking of an even number.\n\nOutput:\n\n"}
{"instruction": "Give me a random number and ask me what is the next number.", "raw_instances": "1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n\nOutput:\n\n"}
{"instruction": "Find the sum of each column in the table given above.", "raw_instances": "Table:\n| Column   |  Column2  |\n|---------|-----------|\n|  Value1 |   Value2   |\nOutput:\n\nColumn  :  Sum = Value  + Value\nColumn2 :   Sum2 =   ---------\nColumn1 :    -----------\nColumn   :      -----------\n\n"}
{"instruction": "Write a program to find the sum of all even numbers in a range of 1 to 50.", "raw_instances": "def even_sum():\n    total = sum([i for\n                i \n                in \n            range(1,\n                 )))\n    print(total)\n\n"}
{"instruction": "Create a list of 10 questions that you want to ask your friend.", "raw_instances": "1) What's been your favorite book or movie in recent years?\n2) Have you traveled anywhere interesting recently?\n3) How do you like your new job?\n4) Do you have any hobbies or interests that I should know about?\n5) Are you planning on doing anything fun or exciting this week"}
{"instruction": "Create a dictionary that contains the frequency of each word in a given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\n{\n    \"the\":  ２,\n    'quick': １,\n   'brown':１，\n    ‘fox':1，\n   ‘jumps':　１， \n   \"over\":１, \n    “lazy”:１\n   “dog”:1\n}\n\n"}
{"instruction": "Create a function that returns the sum of all even numbers between 1 and n.", "raw_instances": "def even_sum(n):\n  sum_even = sum([i for\n  i if i %   2 == ０])\n  return 　sum_even\n\nOutput:\n\n"}
{"instruction": "List the 12 most important words in the english language.", "raw_instances": ""}
{"instruction": "What are some tips for staying motivated while working from home?", "raw_instances": "1) Set up a designated workspace that is separate from your living space.\n2) Create a schedule and stick to it.\n3) Take breaks and move around.\n4) Stay connected with colleagues and fri"}
{"instruction": "Describe the characteristics of a successful leader.", "raw_instances": ""}
{"instruction": "Create a program that can identify the type and number of fruits in a given list.", "raw_instances": "Example Input: ['apple', 'banana',  'orange', ['grape', [3, 'pear']]]\nExample Output: {'apple':  ①,   'grapes': [②, [pear, #]]}\n\n"}
{"instruction": "Please tell me a joke.", "raw_instances": ""}
{"instruction": "Create a new folder in your google drive.", "raw_instances": ""}
{"instruction": "How to make an excel table?", "raw_instances": "Input:\n1) Open Microsoft Excel\n2) Click on the \"Insert\" tab\n3) Select \"Table\" from \"Tables\" section\n4) Check the box \"My table has headers\" and click \"OK\"\n5) Your table is ready!\n\n"}
{"instruction": "Describe the main idea of the book you are reading.", "raw_instances": "Book: The Great Gatsby by F. Scott Fitzgerald\nInput:\nThe GreatGatsby is a novel written by American author F.Scott Fitzgerald. It follows a cast of characters living in New York City inthe summer of1  ́9  . The story is narrated by Nick Carraway, an aspiring writer who moves to the city to work in a bond brokerage firm. Nick becomes fri"}
{"instruction": "Write a program to check if a number between 1 and 20 is prime.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n    print(\"Not prime\")\n  elif n ==  2:\n      print (\"Prime\")\n    else:\n        for x in xrange(2,n):\n            if (n % x) ==0:\n                print(n,\"is not a prime number\")\n                break\n        else: \n            print ( n,\" is a Prime number\")\n\n"}
{"instruction": "Using the provided code, create an array of strings that contain only lowercase letters.", "raw_instances": "Code:\nstring_array = [\"Hello\", \"World\", \"!\"]\nOutput:\n\nstring_lower_array= [ \"hello\",  \"world\",   \"!\" ]\n\n"}
{"instruction": "Can you give me an analogy to explain the concept of \"mind over matter\"?", "raw_instances": ""}
{"instruction": "How would a person go about learning a new language?", "raw_instances": ""}
{"instruction": "Create a program that can identify the most important information in an article.", "raw_instances": ""}
{"instruction": "Using the given facts and figures, create a chart that shows the relationship between the two variables.", "raw_instances": "Facts and Figures: \n- The number  of people who own a smartphone is   150 million.\n-  The  number   of   people   who   own   a   tablet   is    13 million. \n\nOutput:\n\n|  Number of People | Number (in millions) |\n|------------------|--------------------|\n| People who Own a Smartphone | \t1  |\n|\n|\n|\n\n"}
{"instruction": "Make a plan for a weekend trip to an amusement park.", "raw_instances": "1) Research the amusement parks in your area and select one that is suitable for you.\n2) Check the park's website for hours of operation, admission prices, special events, etc.\n3) Make reservations for accommodations if necessary.\n4) Plan your itinerary for Saturday and Sunday, including which rides and attractions you want to visit.\n5) Pack appropriately for weather conditions and the activities you have planned.\n6) Drive or take public transportation to the theme park on Saturday morning.\n7) Enjoy your day at the parks, taking breaks as needed to rest and eat.\n8 ) Drive back home on Sunday evening.\n\nOutput:\n\n"}
{"instruction": "How would you solve the following problem: given a list of numbers, find the two numbers that add up to a specific target sum.", "raw_instances": ""}
{"instruction": "Imagine you are a famous celebrity and write down your favorite quote.", "raw_instances": ""}
{"instruction": "Write a letter to your future self.", "raw_instances": ""}
{"instruction": "If you were to go on a trip, what would you want to do?", "raw_instances": "Input:\nOutput:\n\nI'd love a relaxing trip to the beach. It would be great to soak up the sun, swim in warm water, read a book, have a picnic, watch the sunset, listen to music, or just take a long walk along the shore.\n\nI want a fun trip with lots of activities. Maybe I'd go to an amusement park, go hiking, try new foods, visit museums, take photos, learn about history, meet new people, att"}
{"instruction": "What is the best way to reduce the amount of plastic waste in the environment?", "raw_instances": ""}
{"instruction": "Find the average of the elements of a given array.", "raw_instances": ""}
{"instruction": "Create a new word and write it in all caps.", "raw_instances": "Word: FLOCCULATION\n\nOutput:\n\n"}
{"instruction": "Explain how to use the provided code to create a simple calculator.", "raw_instances": ""}
{"instruction": "Create an algorithm to find all the prime factors of any given integer.", "raw_instances": "Algorithm:\n1) Input the number\n2) Initialize an empty list to store the factors\n3) For each number from two to the square root of n, check if it is a factor of N\n4) If it's a prime factor, append it to our list of factors.\n5) Return the list\n"}
{"instruction": "Write a function that takes a string and returns the number corresponding to the character.", "raw_instances": "Example: \"a\" ->  ɑ\nInput:\n\"abc\"\nOutput:\n\ndef char_to_num(s):\n  num_dict = {'a': ɛ, 'b': b, c': c}\n  return num\n\nend.\n\nThe output of this function is not correct. Please check the input and output.\n\nInput:\n\n\"ab\"\n\nOutput should be:\n\n'ab' -> 'ɛb'\n\n"}
{"instruction": "What is the population in 5 years?", "raw_instances": ""}
{"instruction": "Which country has the most population?", "raw_instances": ""}
{"instruction": "Convert the following sentence to passive voice.", "raw_instances": "John ate the apple.\nThe apple was eaten by John.\n\nOutput:\n\n"}
{"instruction": "Use the code below to find all the words in an array that are greater than 5 characters long.", "raw_instances": ""}
{"instruction": "Use the fact that the sum of two numbers is equal to their product, to write an equation that gives the result of 5 + 6.", "raw_instances": ""}
{"instruction": "Create a table with the data provided in this excel sheet 11.", "raw_instances": "Data:\n| Name | Age | Gender | City |\n|------|-----|--------|-------|\n| John |  ¼  |   M    | New York |\nOutput:\n\n|Name|Age|Gender|City|\n|--|--|----|---|\n|\"John\"|¼|M|New York|\n\n"}
{"instruction": "Using the provided code, write a python program to print the first 15 prime numbers.", "raw_instances": ""}
{"instruction": "Create a web application that allows users to input a number and display the factorial of that number.", "raw_instances": ""}
{"instruction": "Create a new product and write a description of it.", "raw_instances": "Product: A smart water bottle that tracks your daily water intake and reminds you when to drink more water.\nDescription: Introducing the Smart Water Bottle, your new best friend for staying hydrated. This innovative product tracks how much water you drink each day and sends you reminders to keep drinking. It's perfect for anyone who wants to make sure they're drinking enough water to maintain a healthy lifestyle. With the smart bottle, staying on top of your hydration goals has never been easier. Plus, its sleek design makes it the perfect accessory for any outfit. So why wait? Get your Smart Bottle today and start feeling your best!\n\n"}
{"instruction": "List the 12 most common programming languages.", "raw_instances": ""}
{"instruction": "What is the result of 12 divided by 4?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Given a string, find the number of occurrences of the character 'a' in it.", "raw_instances": "Example: \"banana\"\nOutput  :  三个 'an' 中有 一个 'n'，所以 'na' 出现了 三次。\n\n"}
{"instruction": "Find a way to use the new words in a sentence.", "raw_instances": ""}
{"instruction": "How would you modify the function to return the count of consonants instead?", "raw_instances": "Input:\n```python\ndef count_vowels(word):\n  vowels = \"aeiou\"\n  count = sum(1 for letter in word if letter.lower() in vowels)\n  return count\n```\nOutput:\n\ndef consonant_count(word): \n  consonents = 'bcdfghjklmnpqrstvwxyz'\n  counts = len([letter for  letter  in   word.lower().strip() if  not letter.isalpha() or letter not in consonvents])\n  print(counts)\n\n"}
{"instruction": "Generate a list of all prime numbers between 2 and n, where n is the input number.", "raw_instances": "n = input(\"Enter a positive integer: \")\nOutput:\n\ndef is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef prime_list(n): \n  prime = []\n  i =2\n\twhile i < n:\n\t\tif isprime(i):\n\t\t\tprime.append(i)\n\t\ti += \t\t\t\t\t\t\t\t\t\t\t2\n\n\treturn prime\n\nn=input(\"enter a postive integer\")\nprint prime(n)\n\n"}
{"instruction": "Find the longest word that contains only vowels.", "raw_instances": ""}
{"instruction": "Identify the type of the following sentence: \"i am a student.", "raw_instances": "The type is declarative sentence.\n\nOutput:\n\n"}
{"instruction": "How do you think ai will change the world in the next 20 years?", "raw_instances": ""}
{"instruction": "Write a program that takes a number n as input and prints the square of n if n is even, or the cube of 2n if it is odd.", "raw_instances": "def square_or_cube(n):\n  if (n %   2 ==  ) :\n    print(n**3)\n  else:\n    print(n*n*n)\n\n"}
{"instruction": "Create a new list with the following words: \"apple\", \"banana\", and \"cherry\".", "raw_instances": "Output:\n\n"}
{"instruction": "Who is leonardo da vinci?", "raw_instances": ""}
{"instruction": "Do you think that the government should be more involved in education?", "raw_instances": ""}
{"instruction": "What is the difference between an object and a subject in a simple sentence?", "raw_instances": "Input:\nOutput:\n\nIn a sentence, an \"object\" is what the subject does to or with. For example, \"John ate the apple\" - \"the apple\", \"Mary read the book\" – \"book\", and \"I wrote the letter\"– \"letter\" are all objects.\n\nA \"subject\" in contrast, is who or what does the action. So, for example in \"The dog chased the cat\", the \"dog\" and the “cat” are the subjects. \n\n"}
{"instruction": "Describe a place that you have visited and what you liked about it.", "raw_instances": "My favorite place to visit is [Place Name]. I love [Reasons for liking the place]. For example, [Specific reasons for loving the location]. The best part about [Name of Place] is that [Unique aspect of place].\n\n"}
{"instruction": "How can you check the validity of an input string?", "raw_instances": ""}
{"instruction": "Use the given code to print out a multiplication table of 5x5.", "raw_instances": ""}
{"instruction": "Generate a list of 30 random numbers between -15 and +12 and print them out.", "raw_instances": ""}
{"instruction": "Determine if the given number is a prime number or not.", "raw_instances": ""}
{"instruction": "List the 12 months of a year.", "raw_instances": ""}
{"instruction": "Use the given code snippet to print the result.", "raw_instances": "Code: print(2+2)\nOutput:\n\n4\n\n"}
{"instruction": "Write a program that generates a random number between 2 and n, where n is the user input.", "raw_instances": "def random_number(n):\n  return random.randint(2,n)\n\n"}
{"instruction": "Given a sentence in english, find the equivalent in spanish.", "raw_instances": "Sentence: I am going to the store.\n"}
{"instruction": "What is the most common word in a given list of words?", "raw_instances": "Input:\n['apple', 'banana',  'orange',   'pear',    'grape',     'watermelon',      'kiwi',       'pineapple']\nOutput:\n\nThe most frequent word is \"apple\" with two occurrences.\n\nOutput should be: \"The word 'apple' appears the highest number (2) of times in this list.\"\n\n"}
{"instruction": "How can you use a metaphor to describe a situation?", "raw_instances": ""}
{"instruction": "Describe the difference between a for loop and a while loop.", "raw_instances": ""}
{"instruction": "Can you give me a summary of this paper?", "raw_instances": ""}
{"instruction": "How can you make a cake without eggs?", "raw_instances": ""}
{"instruction": "List the 3 most important things to do before starting a new project.", "raw_instances": "1) Define the project scope and objectives.\n2) Identify the key stakeholders and their roles.\n3) Develop a project plan and timeline.\n\nOutput:\n\n"}
{"instruction": "Convert the sentence \"i am a student\" into a declarative sentence.", "raw_instances": "Sentence: I am not a teacher.\n\nOutput:\n\n"}
{"instruction": "Given a paragraph of text, identify the main idea of that paragraph.", "raw_instances": "Text: The United Nations is an international organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote respect for human rights, protect the environment, provide humanitarian aid, solve international problems, conduct research, disseminate information, serve as a platform for dialogue, etc.\nMain idea: United Nation's aim is to promote international security and cooperation.\n\nOutput:\n\n"}
{"instruction": "Define a variable called \"my_string\" and assign it the value \"hello world\".", "raw_instances": "Output:\n\nmy_str = \"Hello World\"\n\n"}
{"instruction": "Can you solve the below equation?", "raw_instances": "Input:\n2x + y = z\nx = y + z\n\nOutput:\n\nx=2y\n\n"}
{"instruction": "How to make a website that displays the current weather in your city?", "raw_instances": ""}
{"instruction": "Design a poster for an upcoming event.", "raw_instances": "Title: \"The Great Gatsby Party\"\nDate: July   25th, 15:0 - 0:3\nLocation: The Grand Ballroom\nDetails: A night of art, music, dancing, food, drinks, fashion, fun, fri"}
{"instruction": "Describe a person who has a positive impact on your life.", "raw_instances": "John is a great example of someone who positively impacts my life. He is always there for me when I need him, whether it's for advice, support, or just to talk. His positive attitude and willingness to help others make him a true friend. John is also very knowledgeable and always willing to share his expertise with me. Overall, John has been a huge influence on my personal and professional growth, helping me become a more confident and successful person.\n\nOutput:\n\n"}
{"instruction": "Implement a method called `print_name` that prints the name of the person.", "raw_instances": "def print_name(name):\n  print(name)\n\n"}
{"instruction": "What is the best way to get to the nearest train station?", "raw_instances": "Input:\n- You are currently at [Your Current Location]\n- The nearest station is [Nearest Station]\nOptions:\n1) Walk\n2) Take a bus\n3) Call a taxi\n4) Ride a bike\n5) Drive\n6) Other\nPlease select the option that is most convenient for you.\nPlease provide the name of your preferred mode of transportation.\n"}
{"instruction": "Describe a situation where you used your humor to solve a problem.", "raw_instances": "Example: I was in a meeting with my boss and some colleagues, discussing a project that was behind schedule. Everyone was getting frustrated and stressed out. To lighten the mood, we decided that we would all take turns telling a joke. It was a great success, as we were able to relax and come up a plan to get the project back on track. \n\nOutput:\n\n"}
{"instruction": "Imagine you are a famous person and write a letter to your fans.", "raw_instances": ""}
{"instruction": "How can i make a website that displays a random quote every 5 minutes?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a new variable called `new_variable` and assign it the value of the variable `old_variable`.", "raw_instances": "Input:\nold\\_variable = \"Hello World!\"\nOutput:\n\nnew\\_varible = old\\_variabie\nnew_varible\n\n"}
{"instruction": "How can you optimize the performance of a web page?", "raw_instances": "Input:\n\n"}
{"instruction": "How would a person describe the feeling of being in love?", "raw_instances": "Input:\nOutput:\n\nBeing in a state of love is a complex and multi-faceted experience. It is characterized by a deep emotional connection, intense feelings of affection, admiration, respect, trust, understanding, support, empathy, passion, desire, intimacy, commitment, security, happiness, contentment, fulfillment, excitement, anticipation, joy, optimism, hope, faith, belief, forgiveness, acceptance, non-judgment, patience, tolerance, compromise, generosity, kindness, compassion, warmth, t"}
{"instruction": "Explain the concept of prime factorization.", "raw_instances": "Prime factorisation is a process of finding the prime numbers that multiply together to form a given number. For example, to find prime factors of number   150 we can write it as  = (2 x  ) x (3 x ) =2x3x5x2. Here, we have found that  is made up of primes  and . Prime factorisations are used in many areas of mathematics, such as in solving equations, finding greatest common factors, or determining the number's place value.\n\nOutput:\n\n"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, favorite food, hobbies, family, friends, pets, travel, education, career, interests, personality, likes, dislikes, goals, dreams", "raw_instances": "Input:\nName: John Smith\nAge:34\nG"}
{"instruction": "Given a list of words, find the longest word that is not in that list.", "raw_instances": ""}
{"instruction": "How would the world be different if you could travel back in time?", "raw_instances": "Input:\nOutput:\n\nIf I could go back to the past, my life would be completely different. For one, if I had the chance to go to school earlier, maybe I wouldn't have had to work so hard to get good grades. Also, going back and meeting my ancestors would have been a great experience. It would also be interesting to see how different the technology was back then. Finally, seeing how my parents met and fell in love would give me a whole new perspective on my family history.\n\nIf you had a chance, what would you do differently in your past?\n\n"}
{"instruction": "Create a new sentence that is a summary of the given text.", "raw_instances": "Text: The United Nations is an international organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote respect for human rights, protect the environment, provide humanitarian aid, conduct educational and scientific activities, contribute to the economic and social advancement of all countries, encourage and facilitate international collaboration and provide facilities for discussion on international problems.\nSummary: \"The United Nation is committed to maintaining peace, promoting international relations, protecting human and environmental rights and advancing economic, social, scientific, educational, humanitarian, environmental, cultural, political, economic development, collaboration, discussion, resolution of international issues.\"\n\n"}
{"instruction": "What are some tips for staying organized and productive?", "raw_instances": "1) Make a to-do list and prioritize tasks.\n2) Use a cal"}
{"instruction": "In a group of 5 people, find the person who is the youngest and oldest.", "raw_instances": ""}
{"instruction": "If you were given a set of instructions, you need to figure out the order in which you should follow them.", "raw_instances": ""}
{"instruction": "What are some ways to improve the efficiency of the following code?", "raw_instances": "def find_max(arr):\n  max = arr[0]\n  for x in arr:\n    if x > max:\n      max=x\n  return max\n"}
{"instruction": "Write a program that takes a string as input and returns the number 0 if the string is empty, 2 if it is a palindrome, and the length of the longest palindrome substring.", "raw_instances": ""}
{"instruction": "I need help with my homework.", "raw_instances": ""}
{"instruction": "Write a program to check if an input number can be represented as a power of 2.", "raw_instances": "def is_power_of_two(n):\n  if n ==   0:\n    print(\"0 is not a valid input\")\n  elif n <  -1:\n     print(\"-ve numbers are not valid\")\n     return False\n  else:\n      return n & (n-1) ==0\n\n"}
{"instruction": "Print the frequency of each character in the given text.", "raw_instances": ""}
{"instruction": "Create a list of 15 things you want to accomplish in the next 30 days.", "raw_instances": "1) Learn a new language\n2) Read   5 books\n3) Exercise  for  at least  an hour every day\n4) Write  a short story\n5) Start a blog\n6) Take a cooking class\n7) Go on a hike\n8 ) Learn to play a musical instrument\n9) Volunteer at a local charity\n1  ) Take an online course\n  -13 ) Spend more time with family and friends\n-1-4 ) Travel to at  least one new place\n"}
{"instruction": "Determine the length of each element in the list.", "raw_instances": "List: ['apple', 'banana',  'cherry', [4], 'date']\nOutput:\n\n['apple' - length:5]\n['banana' length   :6]\n[cherry'  length :7]\n[4'       length   :1] (not a string)\n['date'   length    :5]\n\nOutput should be a list of tuples, where each tuple contains the string and its length.\n\n"}
{"instruction": "What are some effective ways to improve focus and concentration?", "raw_instances": ""}
{"instruction": "Develop a machine learning model to predict the likelihood of a customer making a purchase.", "raw_instances": ""}
{"instruction": "If you could have any superpower, what would it be and how would you use it?", "raw_instances": ""}
{"instruction": "Develop a machine learning model that predicts the next word in a sentence.", "raw_instances": ""}
{"instruction": "Write a program that prints out the numbers from 1 to 30 in ascending order.", "raw_instances": "def print_numbers():\n    numbers = [i for  i  in xrange(1 ,   31)]\n    print numbers\n\nprint_numbers()\n\n"}
{"instruction": "How can i make a homemade ice pack?", "raw_instances": "Input:\nOutput:\n\nTo make homemade an icepack, follow these steps:\n\n1) Take a plastic bag and fill it with water.\n2) Add a few ice cubes to the bag.\n3) Seal the plastic tightly.\n4) Place the ice bag in a freezer for at least ½ hour.\n5) Once the water is frozen, remove the pack from freezer and use it as an instant ice-pack.\n\nAlternatively, if you want to make an eco-fri"}
{"instruction": "Design a system that uses machine learning to predict the likelihood of an individual experiencing a heart attack based upon their medical history and lifestyle factors.", "raw_instances": ""}
{"instruction": "Write a sentence using the word \"sacrifice\".", "raw_instances": "Output:\n\n"}
{"instruction": "List the 5 most important things you learned from this book.", "raw_instances": ""}
{"instruction": "The number of ways to arrange 5 letters in a row.", "raw_instances": "Answer: There are   5! = 1 2 0 8 7 6 4 3  ways to order  the letters.\n\nOutput:\n\n"}
{"instruction": "List the most important points in this paper.", "raw_instances": ""}
{"instruction": "Which of the following is not a type of fruit: apple, banana, orange, strawberry, kiwi, grapefruit, watermelon, pineapple, peach, lemon, mango, pear, apricot, plum, fig, avocado, cantaloupe, honeyd", "raw_instances": ""}
{"instruction": "If i have 12 apples, how many oranges do i need to buy to have a total of 20 oranges?", "raw_instances": "Input:\n1)  ½ of an apple is ¼ of what number?\n2) If ¾ of my apples are rotten, what fraction of apples do I have left?\n3) I need ⅔ of oranges to make a fruit salad. How much do oranges cost?\n4) How can I make  1/3 of orange juice?\n5) What is a quarter of apple?\n6) A quarter is what percent of one?\n7) One third is how much more than a half?\n8)\n9) \n1)\n2)\n3)\n4)\n5)\n6)\n7)\n8)\n\n"}
{"instruction": "Can you give me an example of a good email subject line?", "raw_instances": "Input:\nSubject: Invitation to our company's annual meeting\nBody: Dear [Recipient's Name],\nI hope this email finds you well. We are excited to invite you, along with your colleagues, to attend our annual company meeting on the   at  . The meeting will be held at the [Venue Name] in [City, State]. We will have a great time discussing the past year's achievements and planning for our future goals. Please let us know if you are able to make it by [Date].\nBest regards,\n [Your name]\n\nOutput:\n\n"}
{"instruction": "Find the longest word that is not a palindrome in any language.", "raw_instances": "Example: \"racecar\" is a word in English that isn't a palindromic word, however, \"racer\" in Spanish is also not palidrome.\n"}
{"instruction": "Use the given code to create a new function called \"calculate_sum\" that accepts a list of numbers as an argument and calculates their sum.", "raw_instances": "def calculate_sum(numbers):\n  sum_ = sum(numbers)\n  return\n\nOutput:\n\ndef new_function(numbers_list):\n   sum_of_numbers = []\n   for number in numbers_list:\n      sum_.append(number)\n   return(sum_)\n\n"}
{"instruction": "Create a table with the following columns: name, age, gender, country, occupation, income, education level, favorite color, hobbies, pets, family, friends, travel, food, drink, music.", "raw_instances": "Name | Age | Gender | Country | Occupation | Income | Education Level | Favorite Color | Hobbies | Pets | Family | Friends | Travel | Food | Drink | Music\nGeorge Washington |   |  Male | United States | President | $1 | Bachelor's Degree | Blue | Reading | Dog | Parents | Colleagues | Europe | Pizza | Beer | Classical\n"}
{"instruction": "How can we improve the efficiency of the system?", "raw_instances": ""}
{"instruction": "List 10 different types of fruits.", "raw_instances": "Fruits: Apple, Banana, Orange, Mango, Kiwi, Pineapple, Watermelon, Grapes, Peach, Strawberry\n\n"}
{"instruction": "Can you create an algorithm that can find the longest word in a given list?", "raw_instances": "Input:\n['apple', 'banana',  'pineapple']\nOutput:\n\ndef longest_word(words):\n  longest = ''\n  for word  in words:\n    if len(word) > len(longest):\n      longest=word\n  return longest\n\n"}
{"instruction": "Generate a list of all possible combinations of two numbers from the list [1, 2,3,4,5].", "raw_instances": "Output:\n\n[[1   2], [    1 3],  [[1       4], [1           ５], [[  １    5],     [ 　1　 ５] ,  [　　１　４　５]]\n\n"}
{"instruction": "Write a program that takes a sentence as input and prints out all the words in it.", "raw_instances": "Example Input: \"This is a test sentence.\"\nExample Output: ['This', 'is', \"a\", 'test', sentence.]\n"}
{"instruction": "Explain the concept of a paradox and provide an analogy.", "raw_instances": "Paradox: A paradox is a statement or situation that contradicts itself or appears to defy logic, yet is true in some way.\nAnalogy: Imagine a box with two doors. One door leads to the outside world, while the other leads back into itself. When you open the door that leads outside, nothing happens. But when you try to open both doors at the same time, one of them will open, allowing you access to both the inside and the out. This is like a logical paradox, where two seemingly contradictory statements can both be true at once.\n\nOutput:\n\n"}
{"instruction": "Can you find the shortest path between two points on a grid using dijkstra's algorithm?", "raw_instances": "Input:\nGrid: \n1   2     \n3  -1 -2\n4       -\n5     -\n\nStart: (0 ,  ) \n"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, city, state, country, phone number, email address, date of birth, address.", "raw_instances": "Name: John Smith\nAge:34\nG"}
{"instruction": "Using the given data, create a bar chart that shows the number of people in each age group.", "raw_instances": "Data: {1:150}, {2:25}, and {3:37}\nOutput:\n\nAge Group | Number of People\n-------------------------\n1 |   1  (  )  | \n2 |   ½  ()  |\n3 |    ¾  ()\n\n"}
{"instruction": "Can you name the 5 most popular programming languages?", "raw_instances": "Input:\nOutput:\n\n1) Python\n2) Java\n3) JavaScript\n4) C++\n5) PHP\n\n"}
{"instruction": "Find the shortest word in each sentence of a paragraph.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog. She sells sea shells on the sea shore. Peter Piper picked a peck of pickled peppers.\nSentence   Output: fox, shells, peppers\n\n"}
{"instruction": "Write a function that returns the number of vowels in a given string.", "raw_instances": "def count_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   1\n  return count\n\nOutput:\n\n"}
{"instruction": "Generate a random number between 20 and n, inclusive, using python.", "raw_instances": "import random\nn = int(input(\"Enter a value for n: \"))\nrandom_number = random.randint(25,n)\nprint(\"The random integer between n and m is\", random_number)\n\n"}
{"instruction": "Find the shortest path between two cities.", "raw_instances": ""}
{"instruction": "Explain how you would use the provided data structure in your code.", "raw_instances": "Data Structure: Linked List\nCode: \nclass Node:\n    def __init__(self, data):\n       self.data = data\n       # Initialize next as null\n        self.next = None\n\nclass LinkedList:\n   # Function to initialize head\n   def initialize(self):\n      self.head = Node(1)\n\n   \"\"\"\n   Function that adds a node at the "}
{"instruction": "List the top 15 most popular movies of the year.", "raw_instances": ""}
{"instruction": "Describe a situation where you had to make a difficult decision and explain your thought process.", "raw_instances": ""}
{"instruction": "Use the following code to print the first 5 elements of a given list: ``` my_list = [1, 2, 'a', 4, [5,6]] for i in my_list", "raw_instances": ""}
{"instruction": "How can we improve the performance of our machine learning model?", "raw_instances": "Input:\n1) Increase the number and quality of training data.\n2) Use a more powerful algorithm.\n3) Tune the hyperparameters of your model.\n4) Add more features to your data.\n\nOutput:\n\n1: Increase data quality by removing outliers and noise.\n     2: Use data augmentation techniques to increase the size of data set.\n        ① Rotation\n        ② Translation\n 3: Try different algorithms and compare their performance.\n 4: Experiment with different feature engineering techniques.\n\n "}
{"instruction": "Can you explain the difference between supervised and unsupervised learning?", "raw_instances": ""}
{"instruction": "List the 10 most popular movies of all time, in order of popularity.", "raw_instances": "1) The Shawshank Redemption\n2)  The Godfather\n3)   The Dark Knight\n4)    The Lord of The Rings: The Return of King\n5)     The Matrix\n6)      Titanic\n7)       Star Wars: Episode IV - A New Hope\n8 )    Jurassic Park\n9)        The Lion King (2D)\n1  )   E.T. the Extra-Terrestrial\n\nOutput:\n\n"}
{"instruction": "Find the average of a given list 11.", "raw_instances": ""}
{"instruction": "Can you write a program that generates a random password with 8 characters?", "raw_instances": "Input:\nOutput:\n\nimport random\nimport string\n\ndef generate_password():\n    password = ''.join(random.choices(string.ascii_letters + string.digits, k=8))\n    print(password)\n\ngenerate_password()\n\n"}
{"instruction": "Given a set of words, find the longest word that contains at least one vowel.", "raw_instances": ""}
{"instruction": "Generate a sentence that contains at most 20 words and has no punctuation marks.", "raw_instances": ""}
{"instruction": "The <text> is a string of words.", "raw_instances": "Write a function that takes a <string> as input and returns a list of all words in that string.\nExample:\nInput:\n\"The quick brown fox jumps over the lazy dog.\"\nOutput\n['The', 'quick', \"brown\", 'fox', ...]\n"}
{"instruction": "Explain the concept of overfitting in machine 11.", "raw_instances": "Overfit is a common problem in Machine Learning where a model is trained too well on the training data, to the point that it starts to memorize the data instead of learning the underlying patterns. This results  in a high accuracy on training set but a poor performance on unseen data. Overfit occurs when a machine learning model learns the noise in data rather than the signal. It is often caused by having too many features or parameters relative to training examples, or by using a more complex model than necessary for given data.\n\nOutput:\n\n"}
{"instruction": "Use the provided code as a reference and write a new function.", "raw_instances": "def add(a, b):\n  return a + b\nInput:\nFunction: subtract\nParameters: a, c\nReturn: the difference between a and c\n\nOutput:\n\ndef subtract(a,c):\n   return (a-c)\n\n"}
{"instruction": "A list of numbers, find the maximum value in it.", "raw_instances": "List: {1503,1605,-1345}\nOutput:\n\nThe maximum number in this list is  .\n\n\n"}
{"instruction": "If you were to lose your phone, what would you do to find it?", "raw_instances": ""}
{"instruction": "Develop a machine that uses a neural network to predict the outcome of a game of chess.", "raw_instances": ""}
{"instruction": "Convert 20 degrees celsius to fahrenheit.", "raw_instances": "Answer: (2.77 *   23) + (0 * -33)\nOutput  :  -6.89\n\n"}
{"instruction": "How can i create a table in sql to store the names of the planets in our solar system?", "raw_instances": "Input:\nCREATE TABLE planets (\n  name VARCHAR(255) NOT NULL\n);\n\n"}
{"instruction": "Can you give an example of a word that has more than 5 letters?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a short story about a character who learns to appreciate life.", "raw_instances": ""}
{"instruction": "How would you describe your personality?", "raw_instances": "Input:\nI am an introvert, which means I prefer to keep to myself and spend time alone. When I am around people, however, my energy level is high and I enjoy being social. My interests include reading, writing, playing video games, watching movies, listening to music, cooking, hiking, traveling, learning new things, spending time with my family and friends, exploring new places, trying new foods, meeting new people and learning about different cultures. \n\n"}
{"instruction": "What is the most efficient way to organize my work schedule?", "raw_instances": "Input:\n- I have a meeting with my boss at   1:05 PM\n- My fri"}
{"instruction": "How do you know if someone is lying?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the function to calculate the area of a circle with radius 5.", "raw_instances": ""}
{"instruction": "Use the fact that the sum of the first 12 natural numbers is 44 to find the next number in this sequence.", "raw_instances": "Answer: The next natural number is: \n13\n\nExplanation: We know that  ½(1+2+3+4+5+6+7+8+9+...+n)  = n(n+ ¼) + n/2 = (n² +3n)/2. So, when n =15 we get  (45²+0)/4 =496.25. Therefore, next term is (  48² -3*46)/ ₂ = 162.\n\nOutput:\n\n"}
{"instruction": "Implement a function in c++ that takes two strings as input, and returns the number of times the second string occurs in first string.", "raw_instances": "Example: \nstring first = \"Hello, world!\";\nstring second = \",world\";\nOutput should be   1\n\nOutput:\n\n"}
{"instruction": "Create a table with the given data and write a sql query to retrieve the data.", "raw_instances": "Data: \nName | Age | G"}
{"instruction": "Create a table with the top 5 countries in terms of gdp per capita.", "raw_instances": ""}
{"instruction": "Can you tell me about your family?", "raw_instances": ""}
{"instruction": "Convert 120 to binary.", "raw_instances": ""}
{"instruction": "How to make an http request in python?", "raw_instances": "Input:\nimport requests\n\nurl = 'https://www.google.com'\n\nresponse = requests.get(url)\n\nprint(response.status_code)\n\n"}
{"instruction": "Write a program that prints the fibonacci sequence up to the 15th term.", "raw_instances": "def fibonacci(n):\n  if n ==  \t0:\n    print(0)\n  elif n==  1:\n   print (0) \n  \tprint(1)\n  \treturn\n  else:\n     a =0 \n     b =1\n     print(a)\n     for x in xrange(2,n):\n      c = a + b\n      a= b \n      b= c\n\t  print(c)\nfibonacci( \tn=16)\n\n"}
{"instruction": "How to find the maximum and minimum value in a given list?", "raw_instances": "Input:\n[150,-25,-13,160]\n[23,-456,-753]\n[-1,-34,-55]\n-1\n-2\n[331,+1e-05,+0]\n\nOutput:\n\nTo find maximum value:\n1) Sort list in desc"}
{"instruction": "How can i make a new list with the same elements as the original list?", "raw_instances": "Input:\nlist1 = [23,15,-16,-27,-34]\nlist2 = []\nOutput:\n\nlist3 = list1\n\nlist4 = []\n\nlist5=[]\n\nfor i,j in enumerate(list1): \n    list4.append(j)\n\nlist6 = [] \n\nfor k in list2: \n   list6.append(k)\n\n"}
{"instruction": "How would a computer store a number in memory?", "raw_instances": ""}
{"instruction": "Find the most common word in this sentence: “i am feeling very happy today.", "raw_instances": "The most frequent word is \"am\".\n\n"}
{"instruction": "I have a problem with my computer.", "raw_instances": "Can you help me?\nYes, what seems to the problem?\n\n"}
{"instruction": "Come up a solution to the problem of \"what is the best way of solving this problem?", "raw_instances": "Input:\nYou are given a list of numbers and your task is to find out which number is closest to zero.\nExample: \n[1,-2,-3,15,-16]\nSolution: The number closest is -2.\n\nOutput:\n\nOne possible solution is as follows:\n1) Sort all numbers in asc"}
{"instruction": "What is the difference between a primary and secondary school?", "raw_instances": "Input:\nOutput:\n\nA primary school is typically for students aged   from kindergarten to grade  . A secondary (high) school, on the other hand, is for older students, usually from grade to . \n\n"}
{"instruction": "How would you describe someone who is a good listener?", "raw_instances": ""}
{"instruction": "Imagine you have a 100 dollar bill.", "raw_instances": "1) Write down all possible ways you could sp"}
{"instruction": "What is the name of the main character in \"the catcher in the rye\"?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Who is \"the man\" in a famous poem?", "raw_instances": "Input:\nThe man who will not be named\nIs the man we all know best\nHe is a man of many names\nBut the one we use is his own\nHis name is known to all\nAnd he is loved by many\nThough some may not like him\nThey know he's the best of all\n\nOutput:\n\n"}
{"instruction": "Create a new list of words from the original list.", "raw_instances": "Original list: ['apple', 'banana',  'cherry', [4], 'date', {'egg': 'fruit'}]\nNew list should only include strings and numbers.\n"}
{"instruction": "List 5 reasons why you should learn a new language.", "raw_instances": "1) It can open up new job opportunities.\n2) You can travel to new places and experience different cultures.\n3) Learning a language can improve your cognitive abilities.\n4) Knowing a second language makes you more marketable in a global economy.\n5) Language learning can be a fun and rewarding hobby.\n\nOutput:\n\n"}
{"instruction": "List the top 10 most common words in a given text.", "raw_instances": ""}
{"instruction": "Create a table of 500 words.", "raw_instances": ""}
{"instruction": "I want to know the current date.", "raw_instances": "Answer: The current day is [insert current month] [current day] of [year].\n\n"}
{"instruction": "Describe a person who is very good at their job.", "raw_instances": "John is a highly skilled and dedicated professional in his field. He has a wealth of experience and knowledge, having worked in this industry for over a decade. His attention to detail and commitment to excellence are evident in everything he does, from his work ethic to his communication skills. John is always willing to go above and beyond to ensure that his clients are satisfied with his services. Additionally, he is an excellent team player, always ready to l"}
{"instruction": "Use the provided data to create an interactive table that displays the top 3 countries with the highest population.", "raw_instances": "Data: \n- Country: China, Population:1377\n- India, population:226\nInput:\n- None\n\nOutput:\n\n| Country | Population |\n|---------|------------|\n| China   |  *******   |\n|- India  |   ******   |\n\n"}
{"instruction": "Create a list of 5 numbers between -15 and -5.", "raw_instances": "-13, \n-9,\n-6,\n1,\n3\n\n"}
{"instruction": "Implement a method that returns a list of words that are anagrams of a given word.", "raw_instances": "def anagram_list(word):\n  anag_list = []\n  for w in words:\n    if sorted(word) == sorted(w):\n      anags_list.app"}
{"instruction": "Imagine you are a chef and describe a dish you would make.", "raw_instances": ""}
{"instruction": "Use the given code to create an object that contains the data of a person.", "raw_instances": "Code:\nclass Person:\n    def __init__(self, name, age, gender):\n       self.name = name\n       # Add more attributes here\n"}
{"instruction": "Can you create a program that can identify the most popular programming languages in 2021?", "raw_instances": ""}
{"instruction": "What is the best way of learning a new language?", "raw_instances": "Input:\n1) Immersion\n2) Practice\n3) Study\n4) None of these\n5) All of them\n6) Other (please specify)\nOutput:\n\n"}
{"instruction": "What is the sum of 20 and 30?", "raw_instances": ""}
{"instruction": "Create a list of five adverbs that are used to describe the same thing.", "raw_instances": "Example: Quickly, rapidly, swiftly, speedily, expeditiously\nInput:\nOutput:\n\n1) Swiftly\n2) Speedily\n3) Rapidly \n4) Quickly\n5) Expediently\n\n"}
{"instruction": "Print out a list of all the numbers in a given list", "raw_instances": ""}
{"instruction": "Use the given code to print out all numbers between 1 and 20.", "raw_instances": "def print_numbers():\n    print(1)\n    def print_number(n):\n      if n <   2:\n        print(n)\n      else:\n          print(\"done\")\n          return\n      print(number(n+2))\nprint_numbers()\nOutput:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1o\ndone\nDone\n"}
{"instruction": "Create a program that can identify the longest palindrome in an input string.", "raw_instances": "Example Input: \"racecar\"\nExample Output: The longest palindromic substring in \"Racecar\" is \"aceca\".\n\n"}
{"instruction": "Use the code below to print the first 20 numbers in the fibonacci sequence.", "raw_instances": ""}
{"instruction": "Imagine you have a time machine.", "raw_instances": ""}
{"instruction": "Determine the number of prime numbers in a given range of integers.", "raw_instances": ""}
{"instruction": "Identify the main idea of a paragraph.", "raw_instances": "Paragraph: The United Nations (UN) is an international organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote respect for human rights, protect the environment, provide humanitarian aid, solve international problems, conduct research, disseminate information, serve as a platform for dialogue, etc.\nMain Idea: To maintain peace, security and international relations.\n\nOutput:\n\n"}
{"instruction": "Generate a list of all possible combinations of words that could be used to describe the same thing.", "raw_instances": "For example, if the thing is a car, some possible words could include \"automobile\", \"car\", and \"vehicle\".\nInput:\n- A thing\n- Words to use to refer to the item\nExample:\nA car\nautomobil\ncar\nvehicle\n"}
{"instruction": "Create a function that returns a list of words that contain the substring \"ing\" in them.", "raw_instances": "def find_ing_words(words):\n  return [word for word in words if \"in\" or \"g\" is in word]\n\nprint(find_ing_word([\"running\", \"jumping\",  \"swimming\", 'eating', 'drinking']))\n\n"}
{"instruction": "How does the brain process information?", "raw_instances": ""}
{"instruction": "Use the python library requests to send an http request to a website and print the response.", "raw_instances": "import requests\n\nurl = 'https://www.google.com'\nresponse = requests.get(url)\n\nprint(response.text)\n\n"}
{"instruction": "If you were to take a random person from the world, what would you want them to be?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "I am looking for an online course to learn python.", "raw_instances": "Can you suggest a good course?\nInput:\nOutput:\n\n"}
{"instruction": "If the number is greater than 1, print \"true\".", "raw_instances": "Input:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n150\n\nOutput:\n\ntrue\ntrue \ntrue  \ntrue   \ntrue    \ntrue     \ntrue      \ntrue       \ntrue        \ntrue         \ntrue          \ntrue           \ntrue            \ntrue             \ntrue              \ntrue               \ntrue                \ntrue                \n\n"}
{"instruction": "Implement a program that can generate a random password of a certain length.", "raw_instances": ""}
{"instruction": "Design a system that takes a list of words and returns the most common word.", "raw_instances": ""}
{"instruction": "Your task is to write a c++ program which takes two integers as input and prints their sum.", "raw_instances": ""}
{"instruction": "How can you use the following code to generate a fibonacci sequence?", "raw_instances": ""}
{"instruction": "Use the words \"happy\", \"sad\", and \"angry\" to write a short story.", "raw_instances": "Once upon a time, on a sunny day, Jack was happy. He was playing with his friends in a park. Suddenly, he saw a little girl crying. Jack felt sad for her. So, they went to her and asked what was wrong. She said she lost her ice cream. Then, she became angry. But Jack and his friend helped her find it and she was very happy again.\n\nOutput:\n\n"}
{"instruction": "Create a program that can generate a random password of length 12 consisting of lowercase letters, uppercase letters and digits.", "raw_instances": "def generate_password():\n    import random\nimport string\nlength = random.randint(13,15)\npassword = ''.join(random.choice(string.ascii_lowercase + string.ascii_uppercase + '0' + \"1\" +\"2\" +\"3\"  +'4'  +\"5\"   +\"6\"    +\"7\"     +\"8\"      +\"9\"       +\"0\"        +\"1\") for _ in xrange(length))\nreturn password\n\nOutput:\n\n"}
{"instruction": "Calculate the average of these numbers.", "raw_instances": "Numbers: -15.25673, +13.752345\nAnswer: The average is -0\n\n"}
{"instruction": "Create a program that can detect the gender of a person based on their name.", "raw_instances": "Example: John\nExpected Output: Male\n\nOutput:\n\ndef detect_gender(name):\n  if name.endswith(\"a\") or name.startswith(\"A\"):\n    gender = \"Female\"\n  elif name == \"John\":\n    # John is a male name\n  else:\n    print(\"Gender not detected\")\n    exit()\n  return gender\n\n# Test\nprint(detect_gender(\"John\"))\n\n"}
{"instruction": "How do you debug a program?", "raw_instances": ""}
{"instruction": "In a class, create a function to print the name of each student in alphabetical order.", "raw_instances": "def print_alphabetical_order(students):\n  sorted_students = sorted(stuents, key=lambda x: x.name)\n  for student_name in sorted_stuens:\n    print(student_name.name)\n\n"}
{"instruction": "Create a list of 10 things you want to do before you die.", "raw_instances": "1) Travel to all seven continents\n2) Learn a new language fluently\n3) Write and publish a book\n4) Run a marathon\n5) Go skydiving\n6) Attend a TED Talk\n7) Visit all  50 states in America\n8 ) Learn to play a musical instrument\n9) Start a non-profit organization\n1  ） Learn how to cook a gourmet meal\n"}
{"instruction": "The first word of this paragraph is \"the\", the second word is “beautiful”, the third word “ones” and the last word \"not\".", "raw_instances": ""}
{"instruction": "Identify the most common word in this text: \"the quick brown fox jumps over the lazy dog.", "raw_instances": "The most commonly used word is \"The\".\n\n"}
{"instruction": "Who is known as the father of modern physics?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Imagine you have a time machine and you can travel to any time period.", "raw_instances": "If you could travel back in time, where would you go and why?\nInput:\nI'd love a chance to see the world as it used to look. Maybe I could visit the ancient Egyptians and see how they built the pyramids. Or I'd like to go back to the Renaissance and meet Leonardo da Vinci. It would be amazing to witness the creation of some of his most famous works of art.\n\nOutput:\n\n"}
{"instruction": "I am a software engineer.", "raw_instances": "What is my job title?\nYour job is a Software Engineer.\n\nOutput:\n\n"}
{"instruction": "If i were to write a book, what would it be about?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How do you think the internet has changed the way we communicate?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a table that shows the average temperature in a given month for the past 10 years.", "raw_instances": "Table:\n| Year | Month | Average Temperature |\n|------|-------|--------------------|\n|  *******  |  *****  |\nOutput:\n\nYear |Month|Average Temperature\n---|--- |---\n2 ******|****** |**********\n3 ******\n\n"}
{"instruction": "Find the sum of the first 20 numbers in the fibonacci sequence.", "raw_instances": ""}
{"instruction": "Create a program that generates a random password with 8 characters and 2 uppercase letters, 3 lowercase letters and one special character.", "raw_instances": "def generate_password():\n    import random\nimport string\nuppercase_letters = string.ascii_uppercase\nlowercase_letters= string.lowercase \nspecial_characters = '!@#$%^&*()'\npassword = ''.join(random.sample(uppercase,2) + random.sample(lowercase,6) \n+ random.choice(special_characters))\nreturn password\n\nOutput:\n\ndef main():\n  print(generate_password())\n\nif __name__ == '__main__':\n  main()\n\n"}
{"instruction": "If you were to write a function that would return the number of days in a month, what would you do?", "raw_instances": "Input:\nOutput:\n\ndef days_in_month(month):\n  if month ==   \"January\" or month==\"March\"or month ==\"May\"  or  month  == \"July\"   or   month   ==   \"August\"    or    month    ==    \"October\"     or     month     ==     \"December\":\n    days =31\n  elif month== \"April\" \"June\" ,\"September\" , \"November\":\n      days=3\n      return days\n"}
{"instruction": "List the top 5 most popular sports in america.", "raw_instances": "1) American Football\n2) Basketball\n3) Baseball\n4) Soccer\n5) Hockey\n\nOutput:\n\n"}
{"instruction": "The most common type of cancer is lung cancer.", "raw_instances": "Answer: False\n\n"}
{"instruction": "Using the data given below, create a bar chart to show the number of people who have visited the website in each month.", "raw_instances": ""}
{"instruction": "Convert a string to a float.", "raw_instances": "Example: \"3.1\"\nOutput:\n\n3\n\n"}
{"instruction": "Create a program that can generate a random story.", "raw_instances": ""}
{"instruction": "Practice speaking in front of others, such as friends or family members.", "raw_instances": ""}
{"instruction": "Use the given sentence and create a new sentence that is grammatically correct and makes sense.", "raw_instances": "Sentence: The cat is sleeping on the mat.\nNew Sentence: A cat sleeps on a mat.\n\nOutput:\n\n"}
{"instruction": "If you were to travel to any country in europe, which one would you visit and why?", "raw_instances": ""}
{"instruction": "Give a brief explanation of the difference between a stack and a queue.", "raw_instances": "Stack and queue are two fundamental data structures in computer science. A stack is a linear data structure that follows the Last In First Out (LIFO) principle, which means that the last element added to the stack will be the one to come out first. It is like a pile of plates, where the topmost plate is always the plate that will come off first when you take one. On the other hand, queue follows First In, First out (FIFO), which implies that elements are added at the "}
{"instruction": "If a word starts with 'a' and ends with an 'e', return 'apple'.", "raw_instances": "Input:\napple\naeroplane\nappleseed\nInput  Output\nApple\nAeroplan\nApples\n\n"}
{"instruction": "If the price of a book is $15 and you buy 20 books, how much do you save?", "raw_instances": ""}
{"instruction": "Write a program that will take a list of sentences and output a table with two columns: the first column will contain the original sentence, and in second column, the corresponding sentiment score.", "raw_instances": "The sentiment scores will be calculated using the VADER (Valence Aware Dictionary and sEntiment Reasoner) sentiment analysis tool.\nYou can use the nltk.sentiment.vader module to calculate the sentiment of each sentence. Here is an example of how to use it:\nfrom nltk import sentiwordnet as swn\nfrom textblob import TextBlob\nimport nltk\nnltk.download('vader_lexicon')\nnlp = nltk.ne_chunk\ndef get_sentiment(sentence):\n  sentiment = Textblob(sentence).sentiment.polarity\n  return sentiment\n"}
{"instruction": "Create a table of contents for your book.", "raw_instances": ""}
{"instruction": "Write a program to find the most common word of the input sentence and its frequency.", "raw_instances": ""}
{"instruction": "What is the average temperature in new york city in july?", "raw_instances": ""}
{"instruction": "Who is currently the prime minister of india?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a new sentence that is a valid english sentence, but has a grammatical error.", "raw_instances": "Example: I have a apple.\nCorrected: \"I have an apple.\"\n\n"}
{"instruction": "Generate a random number in between the range of 0 and the number of elements in an array.", "raw_instances": "Example: \nArray: ['a', 'b',  'c', True, False]\nExpected Output: 'a'\nOutput:\n\nimport random\ndef random_element(arr):\n  return random.choice(arr)\n\n"}
{"instruction": "What is the meaning of the phrase \"to be in a hurry\"?", "raw_instances": "Input:\nOutput:\n\nThe phrase 'to rush' means to move quickly or to do something in an urgent manner. It implies that the person is in need of time or is trying to complete a task as soon as possible.\n\nOutput (in a more formal way): The phrase ‘to hurry’ refers to the act of moving with haste or urgency, often in order to meet a deadline or complete an important task.\n\nThe task is to find a synonym for \"happy\".\nInput:\n\nOutput \"Joyful\" is a suitable synonym of \"Happy\". \n\n"}
{"instruction": "How do you like to cook?", "raw_instances": "Input:\nI love cooking! I enjoy experimenting with new ingredients and flavors. My favorite way to relax is by sp"}
{"instruction": "List the top 5 countries with the highest population.", "raw_instances": "1) China\n2) India\n3) United State\n4) Indonesia\n5) Pakistan\n\nOutput:\n\n"}
{"instruction": "Create a table with the first 100 words of the text.", "raw_instances": "| Word | Length | Position |\n|------|--------|----------|\n| Dr   |  ****** |   ******* |\n"}
{"instruction": "Develop a program that can predict the stock market.", "raw_instances": ""}
{"instruction": "Create a function that checks if a string is palindrome or is not.", "raw_instances": ""}
{"instruction": "What is the name of a book that was published in 2021?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "If a user enters a negative number for a variable, then the program should print an error message.", "raw_instances": "def main():\n    num = int(input(\"Enter a positive number: \"))\n    if num <  )):\n        print(\"Error: Please enter a valid positive integer.\")\n    else:\n        # do something with num\nmain()\n\n"}
{"instruction": "Give a brief explanation of how the internet works.", "raw_instances": "The internet is a global network of computers that communicate with each other using standardized protocols. It allows users to access information, communicate, share files, play games, shop online, etc. by using a web browser. When you type a URL into your browser, your computer sends a request to the server hosting the website. This request is then passed through a series of servers and routers until it reaches the destination server, which sends the requested information back to your device. \n\n"}
{"instruction": "Generate a list of 20 random numbers in a range of -1 to 3.", "raw_instances": "[1,-1] [2,-2] [-1/3,2/5]  [-2.13,-0]   [0,-3]    [3.234,-4.67]     [4/7,-5/9]      [5,-6]       [6/15.7337456,-7/22]\n\n"}
{"instruction": "Find the sum of all the odd numbers between 0 and a specified number.", "raw_instances": "Example: Sum of odd number between -1 and -5\nInput:\n-1\n-5 \nOutput:\n\ndef odd_sum(start, end):\n  sum_of_odds = sum([i for (i, j) in enumerate(range(start +1 , end +2)) if j %   2 != ０])\n  return 　sum_of_odd\n\nodd_sum(-1,-5)  = -6\n\nend.\n\nThe task is to find all prime numbers in a given range and print them.\n\nInput:\n\nStart: -2\n"}
{"instruction": "Find the average of all numbers in this list: [1, 5, -2, none, true, false].", "raw_instances": ""}
{"instruction": "What is the sum of 1001 and the number 20?", "raw_instances": ""}
{"instruction": "Make up a story about a person who is a detective.", "raw_instances": ""}
{"instruction": "What are the best ways to reduce stress and anxiety?", "raw_instances": "Input:\n1) Exercise regularly\n2) Practice mindfulness and meditation\n3) Get enough sleep\n4) Eat a healthy diet\n5) Sp"}
{"instruction": "What is the meaning of \"the world is my oyster\"?", "raw_instances": "Input:\nOutput:\n\nThe phrase \"The world's my Oyster,\" is an idiom that means that the world and all its opportunities are open to me. It's a metaphor for having unlimited potential and possibilities. \n\n"}
{"instruction": "Come up an idea for a product that solves a problem.", "raw_instances": "Problem: People often forget to take their medication.\nSolution: A smart pillbox that reminds users to refill their prescription and alerts them when it's time to do so.\n\nOutput:\n\n"}
{"instruction": "Can you explain the difference between a virus and an infection?", "raw_instances": ""}
{"instruction": "Create a program that generates a random number and checks if it's prime.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  elif n ==  2:\n  \treturn True\n  \telse:\n  \t\tfor i  in xrange(2,n):\n  \t\t\tif (n % i) ==0:\n  \t\t\t\treturn  False\n\n  return True\n\ndef generate_random_number():\n  import random\n\treturn random.randint(1,int(50))\n\ndef main():\n    number = generate_ranom_number()\n    if is_prime(number):\n      print \"The number is prime\"\n    else:\n      pass\n\nmain()\n\n"}
{"instruction": "Can you explain quantum mechanics in simple terms?", "raw_instances": ""}
{"instruction": "Use the following code to calculate the area of an equilateral triangle: ```python base = 5 height = base / 2 area = (base * height) / (2 * 1) print(area", "raw_instances": ""}
{"instruction": "How would a person describe someone who is a true friend?", "raw_instances": "Input:\nOutput:\n\nA true fri"}
{"instruction": "Write a program to find the largest number among the elements of an unsorted array in o(n) time complexity.", "raw_instances": "def find_largest(arr):\n  largest = arr[0]\n  for num in arr:\n    if num > largest:\n      largest=num\n  return largest\n\nOutput:\n\n"}
{"instruction": "Find the most frequent element in a given array.", "raw_instances": "Array: ['apple', 'banana',  'apple','orange',1,'apple']\nOutput:\n\nThe most frequently occurring element is 'Apple' with frequency   3.\n\nOutput should be a string.\n\nend.\n\ntask: Create a function that takes a list of strings and returns a new list with all strings that contain the letter 'a'.\nInput:\n['apple' , 'orange' ,'banana'  ,'grape' ]\nOutput\n['orange','banana','apple']\n\n"}
{"instruction": "List the 7 most important things to do before you die.", "raw_instances": "1) Travel to at least  3 different countries.\n2) Learn a new language.\n3) Write your memoir.\n4) Start a family.\n5) Run a marathon.\n6) Go skydiving.\n7) Visit the top  ½  of your bucket list.\n\nOutput:\n\n"}
{"instruction": "Imagine you have a 3d printer that prints out a cube with dimensions of 4x4 x 6, what is its volume?", "raw_instances": ""}
{"instruction": "Create a table comparing the two sides of a debate.", "raw_instances": ""}
{"instruction": "Generate a random password of 8 characters using the following characters: a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How would the following code be improved?", "raw_instances": ""}
{"instruction": "Create a function that calculates the sum of all the digits in an integer.", "raw_instances": "Example: sum_digits(1345) should return   1+3+4+5=1  .\nOutput:\n\ndef calculate_sum_digits(n):\n  sum_of_digits = sum(int(digit) for digit in str(n))\n  return str(sum_of_dig\n\n"}
{"instruction": "If a number is divisible by 3, return the word \"divisible\" if it is even, and \"not divisible\" otherwise.", "raw_instances": "Example: \n15 is not divisible\n16 is\nInput:\n13\n27\n36\n45\n51\n60\n\nOutput:\n\nnot\ndivis\nible\nnot divis\nble\ndis\nisible\nis\n\n"}
{"instruction": "How do you feel when you see a beautiful sunset?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "List the top 5 things you want to do in the next year.", "raw_instances": "1) Learn a new language\n2) Travel to at least   3 new countries\n3) Read  at  least one book per month\n4) Improve my physical health by exercising regularly\n5) Sp"}
{"instruction": "Imagine a world where everyone is equal and describe it in detail.", "raw_instances": "In a perfect world, where every individual is treated equally, every person would have the same opportunities and access to resources. There would be no discrimination based on race, g"}
{"instruction": "What is the definition of \"algorithm\"?", "raw_instances": "Input:\nOutput:\n\nAn algorithm is a step-by-step procedure for solving a problem or achieving a specific goal. It is like a recipe that tells you exactly what to do in order to get the desired result. Algorithms are used in computer programming to solve problems and perform tasks efficiently. \n\n"}
{"instruction": "Create a table that shows the number of times each word appears in the text.", "raw_instances": ""}
{"instruction": "Using the provided code, print all the prime numbers between 1 and 30.", "raw_instances": ""}
{"instruction": "How do you stay organized and on top of your tasks?", "raw_instances": "Input:\nOutput:\n\n1) Make a to-do list: Start by making a list of all your daily tasks and prioritize them based on their importance and urgency. This will help you keep track of what needs to get done and when.\n\n2) Use a cal"}
{"instruction": "Using a loop, print out the first 15 prime numbers.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef print_prime_numbers(n): \n  prime_numbers = []\n  i =2\n\twhile len(prime_numbers) < n:\n\t\tif isPrime(i):\n\t\t\tprime_number.app"}
{"instruction": "Create a new list with the same items.", "raw_instances": "List: ['apple', 'banana',  'cherry', True]\nNew List: True, 'apple' 'banan', cherry\n\nOutput:\n\n"}
{"instruction": "If a number is divisible by 3, add 7 to it.", "raw_instances": "Example: Input: number = -15\nExpected Output: -8\nInput:\nnumber = int(input(\"Enter a positive integer: \"))\nif number %  )):\n    print(number +7)\nelse:\n    number +=  -7\n"}
{"instruction": "How to make a good first impression?", "raw_instances": ""}
{"instruction": "Can you tell the difference between a cat and a dog?", "raw_instances": ""}
{"instruction": "Explain the concept of a stack and its use in programming.", "raw_instances": ""}
{"instruction": "Create a list of 10 things that i should do before i turn 30.", "raw_instances": "1) Learn a new language\n2) Travel to at least   5 different countries\n3) Start a business\n4) Run a marathon\n5) Read  at  least one book per month\n6) Take a cooking class\n7) Go skydiving\n8 ) Learn to play a musical instrument\n9) Volunteer for at-least  one charity\n1  ) Take an online course\n"}
{"instruction": "Create a program that can predict the weather based off of historical data.", "raw_instances": ""}
{"instruction": "Rewrite the sentence in the passive voice.", "raw_instances": "The dog chased the cat.\n"}
{"instruction": "Write a code that prints out the first 15 characters of a text string.", "raw_instances": "def print_first_16_chars(text):\n  print(text[:13])\n\n"}
{"instruction": "A person is given the task of finding the average of all the numbers in a set of numbers.", "raw_instances": ""}
{"instruction": "Find the sum of two numbers given as inputs.", "raw_instances": "Inputs: Number   1:  \t15\nNumber  :  25 \nAnswer: The sum is   45.\n\nOutput:\n\n"}
{"instruction": "What is the most effective way to reduce the cost of production?", "raw_instances": ""}
{"instruction": "I am a new employee at a company.", "raw_instances": "1) What is my first day like?\n2) How do I get to work?\n3) Who do you report to?\n4) Where do we work?\n\nOutput:\n\n1: Your first-day at the new company will likely involve a tour of your new workspace, meeting your colleagues, getting introduced to your manager, learning about company policies and procedures, receiving your company ID, computer, or other necessary equipment, att"}
{"instruction": "Create a new sentence using the words or phrases from this list", "raw_instances": "Input:\n- The cat\n- jumped\n - over\n  - the fence\n"}
{"instruction": "Can you come up a plan to reduce the cost of the project?", "raw_instances": "Input:\n- The project is a software development project.\n- It is estimated that the total cost will be $1 million.\nThe project will take   1 year to complete.\nThere are  a team of developers, designers, project managers, quality assurance, etc.\nWe have a budget of $50k per month.\n"}
{"instruction": "Design a system that uses machine translation to translate text from one language to another.", "raw_instances": ""}
{"instruction": "If you have a 128gb ssd, how much data can you store?", "raw_instances": "Input:\nOutput:\n\nA   1  Tera byte (TB) is equal to one thousand gigabytes (GB). So, if you had a SSD with the capacity of one terabyte, then you could store  a maximum of approximately  one million gigabyte (MB) of data. \n\n"}
{"instruction": "How would you describe a person who is very intelligent?", "raw_instances": "Input:\nOutput:\n\nA very smart person is someone who has a high level of intelligence and is able to quickly understand and solve complex problems. This person may have a strong analytical mind, be able think critically, have excellent memory, or have an exceptional ability to learn and retain information. Additionally, this person might be good at multitasking, making quick decisions, problem-solving, critical thinking, reasoning, learning, understanding, memory and attention to detail. \n\n"}
{"instruction": "Can you come up a way that can help me to improve my memory?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Given a number, find the sum of all its divisors.", "raw_instances": ""}
{"instruction": "Tell me the history of a famous person.", "raw_instances": ""}
{"instruction": "Generate a random number between -100 and +1,05, and write the corresponding integer.", "raw_instances": ""}
{"instruction": "Design a website that allows users to create and share recipes.", "raw_instances": ""}
{"instruction": "Develop a mobile app that helps users find nearby restaurants.", "raw_instances": ""}
{"instruction": "The function should return the sum of two numbers.", "raw_instances": "def add(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "Imagine you have a bag of 12 marbles.", "raw_instances": ""}
{"instruction": "Create a table with the data given in a structured format.", "raw_instances": "Data: Name, Age, Gender\nInput:\nName: John, Jane, Bob, Alice\nAge:25   31                 \nGender: M  F  M F\n"}
{"instruction": "Make a program that prints out the first 1,001 numbers in reverse order.", "raw_instances": "def print_reverse():\n    numbers = list(range(1_0_1))\n    print(numbers[::-1])\n\n"}
{"instruction": "Generate a random number between 30 and 40, and then find the square root of that number.", "raw_instances": ""}
{"instruction": "Find the most common word in the sentence 'i am a student'.", "raw_instances": "Output:\n\nThe most frequent word is \"a\".\n\n"}
{"instruction": "What is the best way for a person to start a business?", "raw_instances": ""}
{"instruction": "Explain how the code works.", "raw_instances": ""}
{"instruction": "Create a function that returns a string with the current date and time in iso format.", "raw_instances": "def current_date_time():\n    import datetime\n   return datetime.datetime.now().isoformat()\n\n"}
{"instruction": "Write a program that takes a string as an input, reverses it and then prints it.", "raw_instances": "Example Input: \"Hello World\"\nExample Output: \"!dlroW olleH\"\n\n"}
{"instruction": "If you have a string, write a function that returns the length of that string.", "raw_instances": "Example: \"Hello World\"\nOutput Length: 'Hello world' is   \"13\"\n\n"}
{"instruction": "Come up a creative idea for a product or service that solves a problem in the real world.", "raw_instances": ""}
{"instruction": "Give me a list of 15 words that have the same meaning as the word “happy”.", "raw_instances": "1) Joyful\n2) Delighted\n3) Pleased\n4) Content\n5) Ecstatic\n6) Thrilled\n7) Elated\n8 ) Overjoyed\n9) Grateful\n1  ） Blissful \n1 l) Euphoric\n  l  ) Jubilant\n   l l ) Exultant \n   ）\n"}
{"instruction": "If you were to write an essay on how to be a better person, what would you write about?", "raw_instances": "Input:\n\n"}
{"instruction": "Identify the most common word in the dictionary and output the frequency of its occurrence.", "raw_instances": "Dictionary: ['apple', 'banana', \"apple\", 'orange',  'apple']\nOutput:\n\nThe most frequent word is \"Apple\" with frequency   3.\n\nOutput the word and its frequency.\n\nend.\n\nThe task is to find out if the input string is a palindrome or not. A palindrome is defined as a string that reads the same forwards and backwards. For example, \"racecar\" is palindrome, while \"hello\" isn't.\n\nInput:\n\"race car\"\n\nOutput\nTrue\n\nInput\n\"hello\"\n\n"}
{"instruction": "Create a function that takes a list and returns a dictionary with each element as the key and the frequency of its occurrence as its value.", "raw_instances": "Example:\nInput:\n[1,'a',1,\"a\",1,True,False,'b',True,'c',False,'d',0]\nExpected Output:\n{1:3, 'a':2,True:2,'0':1}\n\n"}
{"instruction": "Create a new table in the database.", "raw_instances": "Table Name: Employee\nFields: id (int, primary key), name (varchar), age (integer), salary (decimal), department (enum).\n\n"}
{"instruction": "I am going to a party tonight.", "raw_instances": "What should I wear?\nInput:\nOutput:\n\nFor a casual party, consider wearing a nice pair of jeans, comfortable shoes, or sneakers, along with casual tops or shirts. For a more formal party or event, opt for dress pants or a skirt, paired with dress shoes or heels, dep"}
{"instruction": "Describe a person who is very intelligent and has a good sense of humor.", "raw_instances": ""}
{"instruction": "Create a program that can calculate a user's bmi.", "raw_instances": "def calculate_bmi(weight, height):\n  bmi = weight / (height **   (2/1))\n  return bmi\n\nweight = float(input(\"Enter your weight in kg: \"))\nheight = int(input('Enter you height in cm: '))\nbmi = calculate_weight(height, weight)\nprint(\"Your BMI is: \", bmi)\n\n"}
{"instruction": "I have a string of text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput a list of all unique words in this string.\n"}
{"instruction": "How can you make money on the internet?", "raw_instances": ""}
{"instruction": "How to make a homemade air freshener?", "raw_instances": "Input:\n1) Take a spray bottle and fill it with water.\n2) Add ½ cup of white vinegar to the water in a bottle.\n3) Shake the bottle well to mix the ingredients.\n4) Spray the mixture around your home to freshen the air.\n5) You can also add a few drops of essential oil to give it a pleasant scent.\n\nOutput:\n\n"}
{"instruction": "Write a program that finds the longest word in a given list of words.", "raw_instances": "def longest_word(words):\n  longest = \"\"\n  for word1 in words:\n    if len(word1) > len(longest):\n      longest=word1\n  return longest\n\n"}
{"instruction": "In a given sentence, find the word with the most number of letters.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: jumps\n\nOutput:\n\n"}
{"instruction": "List the top 15 most visited websites in terms of number visits.", "raw_instances": "1 Google\n2 YouTube\n3 Facebook\n4 Amazon\n5 Baidu\n6 Yahoo\n7 Alibaba\n8 Tencent\n9 Instagram\n13 Twitter\n"}
{"instruction": "Based on given data, create a new dataset.", "raw_instances": "Data: \nName, Age, G"}
{"instruction": "Create a function that takes a list of strings and returns a new list with all strings that contain the word \"dog\" and have a length greater than 3.", "raw_instances": "Example Input: [\"I love dogs\", \"My dog is cute\",  \"I hate cats\",   \"Dogs are the best\"]\nExample Output: ['I', 'dog',  'is',   'D',    'the',     'best']\n\n"}
{"instruction": "Create a table with the given data and write a python code to calculate the average of a given column.", "raw_instances": "Data: \nName | Age | Gender\nJohn |   25 | Male\nMary |      31 | Female\nTom |         45  | Male\nPython Code:\nimport pandas as pd\ndf = pd.read_csv('data.csv')\navg_age = df['Age'].mean()\nprint(avg_age)\n\n"}
{"instruction": "Create a list of 15 numbers from 0 to 20.", "raw_instances": "[0   1     ...          -1   -2   ...     +13   +2 ]\n\n"}
{"instruction": "Create a new list of all the people who are older than the current person.", "raw_instances": "List: ['George Washington', 'Confucios',  'Michael Jordan', \"Michelangelo\",  \"John Adams\"]\nOutput:\n\n['Confusios']\n\n"}
{"instruction": "Sort the new people list in alphabetical order.", "raw_instances": "New People: ['John', 'Bob',  'Alice',   'David',    'Eve']\nOutput:\n\n['Alice',\n ' Bob',\n  David,\n ' Eve',\n   John]\n\n"}
{"instruction": "What is the most important thing to you when it comes to choosing a new car?", "raw_instances": ""}
{"instruction": "Develop a web application that allows users to input a string and returns the number of unique characters in the string.", "raw_instances": "Example Input: \"Hello World\"\nExample Output: There are   unique  characters  in \"hello world\".\n\n"}
{"instruction": "Generate a random sentence using the given set of words.", "raw_instances": "Words: cat, run, quickly\nSentence: The cat quickly ran away.\n\nOutput:\n\n"}
{"instruction": "Provide a detailed explanation of the solution to the problem.", "raw_instances": ""}
{"instruction": "Create a new list with the same elements as the given list, but sorted in descending order.", "raw_instances": "List: ['apple', 'banana',  'cherry', -15]\nNew List: ['-1', '-1']\n\n"}
{"instruction": "Describe a situation where you have to be creative.", "raw_instances": ""}
{"instruction": "Create a program that prints out a multiplication table for a given number.", "raw_instances": "Number: \nOutput:\n\ndef multiplication_table(num):\n  for row in xrange(1,num+2):\n      for col in xrange(0,num):\n          print row*col,\n      print \"\"\n\nmultiplication_table(5)\n\n"}
{"instruction": "What is the smallest prime factor of 300?", "raw_instances": ""}
{"instruction": "Use the function you created in question 9 to find the answer to the following question: what is the total sum?", "raw_instances": "Input:\nsum(150)\nOutput:\n\nThe total is   (fill in with the correct answer)\n\n"}
{"instruction": "How would your life be different if you could only eat one food for the rest of your days?", "raw_instances": ""}
{"instruction": "What is the name of the famous american author who wrote \"the great gatsby\"?", "raw_instances": "Input:\nOutput:\n\nF. Scott Fitzgerald\n\n"}
{"instruction": "The following list contains the words \"apple\", \"banana\", and \"cherry\".", "raw_instances": "Output the word \"fruit\" in a sentence using all three words.\nExample: \"I like to eat apples, bananas, cherries, they are all fruits.\"\n\n"}
{"instruction": "If the given string is a palindrome, output \"true\", otherwise \"false\".", "raw_instances": "Input:\nracecar\nInput:\n\nrace car\n"}
{"instruction": "Create a new prompt that is a combination of the previous prompt and the new one.", "raw_instances": "Prompt: \nCreate a Python program that takes a list of numbers as input and returns the average of those numbers.\n"}
{"instruction": "Find a way to use the following words in a creative way: \"i\", \"you\", and \"me\".", "raw_instances": "Output:\n\n1) \"I\" can be used to refer to oneself, \"You\" to someone else, while \"Me\" is used as a reflexive pronoun. For example, one could say \"When I am with me and with my fri"}
{"instruction": "Write a short story about a person who is in love with someone else.", "raw_instances": "John had always been in a relationship with his best fri"}
{"instruction": "Create a list with the names of the 10 most popular programming languages.", "raw_instances": "1) Python\n2) Java\n3) JavaScript\n4) C++\n5) PHP\n6) SQL\n7) Ruby\n8 ) C#\n9) Swift\n1  ） Go\n\nOutput:\n\n"}
{"instruction": "Create a table that shows the average salary of employees in different departments.", "raw_instances": "Table:\n| Department | Average Salary |\n|------------|----------------|\n| Sales      | $50K          |\nOutput:\n\n|Department|Average Salary|\n|-|-|\n|--Sales--|$5K|\n"}
{"instruction": "Generate a random number between 0 and 99, then print the corresponding letter of a given alphabet.", "raw_instances": ""}
{"instruction": "Create a table that shows the population of these 10 countries.", "raw_instances": ""}
{"instruction": "Create a list of integers from 0 to 9 and print the sum of their squares.", "raw_instances": "def squares_sum():\n    squares = [i**2 for  i  in [0..9]]\n    print(sum(squares))\n\n"}
{"instruction": "Calculate the area of an equilateral triangle with side length 5 cm.", "raw_instances": "Answer: The area is  (5^2 * sqrt(3)) /   4 = (25 *  sqrt3) /4  =  ½ * (sqrt3 * 5) *5  ≈ ¼3.82 cm^ ²\n\nOutput:\n\n"}
{"instruction": "Describe the process of creating a new user account in an online banking system.", "raw_instances": "1) Log in to the online bank system using your existing credentials.\n2) Click on the \"Create Account\" button.\n3) Fill out all required fields, including your name, address, phone number, email address and password.\n4) Verify your identity by answering security questions or providing additional information.\n5) Review and confirm your account information before submitting the form.\n6) Wait for confirmation that your new account has been created.\n7) Once your confirmation is received, log in with your newly created account credentials.\n\nOutput:\n\n"}
{"instruction": "Can you write a program that takes a number and prints out the fibonacci sequence up to that number?", "raw_instances": "Input:\nNumber: \nOutput:\n\ndef fibonacci(n):\n  if n <=   0:\n    print(\"Incorrect input\")\n  elif n ==  -1:\n    return  \"Number of terms to show: -ve\"\n  else:\n   a, b = -2\n   while a < n:\n     print(a, end=\" \")\n     a,b = b, (a+b)\n   print()\n\nfibonacci(15)\n\n"}
{"instruction": "Write a code snippet to print \"hello world\" in python.", "raw_instances": "def print_hello_world():\n    print(\"Hello World\")\n\n"}
{"instruction": "In a given sentence with multiple clauses, identify the main clause and rewrite it in passive voice.", "raw_instances": "Sentence: The cat chased the mouse, which was running under the table.\nMain Clause: \"The cat was chasing the mice.\"\nOutput:\n\n"}
{"instruction": "Write a program that takes a string as input and returns a new string with all vowels replaced by the number of vowels in the original string.", "raw_instances": "Example: Input: \"Hello World\" Output: H2ll4 W4rld\nInput:\n\"Hello, World!\"\nOutput:\n\ndef replace_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  new_string = \"\"\n  for char in string:\n    if char.lower() in vowels:\n      new_char = str(vowELS.count(char.lower()))\n      if new_chars ==  )):\n        new_strings += new_chars\n      else:\n        print(\"Error: Unexpected error\")\n    else: \n      print(new_string)\n  return new_strin\n\nprint(replace_vowel(\"Hello world\"))\n\n"}
{"instruction": "What is the difference between an algorithm and a data structure?", "raw_instances": ""}
{"instruction": "Find the number of ways to choose 2 people from a group of 5.", "raw_instances": "Answer: There are  \binom{5}{2} = \\frac{ \t5! }{2!(5-2)!}  =15 ways.\n\nOutput:\n\n"}
{"instruction": "Create a list of 10 things that you would like your future self to know.", "raw_instances": "1) I am proud of myself for achieving my goals.\n2) My family and friends are important to me.\n3) It's okay to ask for help when I need it.\n4) Taking care of my mental health is just as important as taking care\nof my physical health.\n5) Learning new things is always a good idea.\n6) Being kind to others is a great way to make myself happy.\n7) Time is precious, don't waste it on things I don’t enjoy.\n8 ) I should always try to learn from my mistakes.\n9) Don't be afraid to take risks and try new experiences.\n"}
{"instruction": "What is the difference between a person who has a strong sense of self and one who does not?", "raw_instances": ""}
{"instruction": "This task is about creating a program that can calculate the area of a circle.", "raw_instances": ""}
{"instruction": "Determine the average age of people in a given list, and print it.", "raw_instances": "List: ['John', 'Mary',  'Mike', \"Sally\",   'Bob',   \"Alice\",  'Tom',   'Jerry',      ‘Linda’]\nAverage age: (25 + 33 +34 +28 +45) /  (8 people)  = 27.75\n"}
{"instruction": "I need a new laptop.", "raw_instances": "What are the features I should look for in a laptop?\nInput:\nOutput:\n\n1) Processor: Look for an Intel Core i5 or i7 processor, or an AMD Ryzen   5/7/9 processor.\n2) RAM: At least  8GB of RAM is recomm"}
{"instruction": "List 40 adjectives that describe a person who is very happy.", "raw_instances": ""}
{"instruction": "What is a metaphor?", "raw_instances": ""}
{"instruction": "Generate a random sentence that is similar to the one given.", "raw_instances": "Sentence: The cat is sleeping on the couch.\nRandom sentence: A feline is resting on a couch.\n\nOutput:\n\n"}
{"instruction": "Determine the best way to solve the problem.", "raw_instances": ""}
{"instruction": "Write a short paragraph about your favorite hobby.", "raw_instances": ""}
{"instruction": "Identify the most frequent word that appears in this paragraph.", "raw_instances": ""}
{"instruction": "Implement a sorting algorithm to sort the elements in an array in ascending order.", "raw_instances": "Array: {50,-15,-25}\nOutput:\n\ndef sort_ascending(arr):\n  for j in arr:\n    min_index = j\n  min_value = arr[min_index]\n  arr.remove(min_value)\n  return arr\n\narr = [55.052,-34.23,-56.74]\nsorted_arr = sort(arr)\nprint(sorted_arr)\n\n"}
{"instruction": "Print the first 15 characters of a given string.", "raw_instances": "String: \"Hello World\"\nOutput:\n\n"}
{"instruction": "If the sum of the elements of mylist is greater than 50, print \"the sum is too high\".", "raw_instances": "Input:\nmylist = [23,15,-16,-22,-33]\nmysum = sum(mylist)\nOutput:\n\nif mysum >   51:\n    print(\"the sum is too high\")\nelse:\n    print(\"sum is within the limit\")\n\n"}
{"instruction": "How would your life be different if you had a superpower?", "raw_instances": "Input:\nOutput:\n\nIf I had the power to fly, my life would be completely different. It would allow me to travel anywhere in a matter of seconds, saving me a lot of time. Additionally, flying would give me the ability to see the world from a bird's eye view, which would provide me with new perspectives and insights. Furthermore, having the super power of flight would make me feel more indep"}
{"instruction": "If you are given a set of numbers, write a program to find their average.", "raw_instances": "Example: Set of Numbers: {150 ,   25 , -13 ,   -55}\nOutput : Average = -2.875\n"}
{"instruction": "Create a list of 10 words that describe the same thing as the word “funny”.", "raw_instances": "1) Amusing\n2) Comical\n3) Entertaining\n4) Hilarious\n5) Humorous\n6) Jovial\n7) Lighthearted\n8 ) Quirky\n9) Witty\n1  ound.\n\nOutput:\n\n"}
{"instruction": "Find the longest word in each sentence and output the length of that word.", "raw_instances": "Sentence   1: The quick brown fox jumps over the lazy dog.\n Sentence  : The dog is lazy.\n Output: quick (5), lazy (4)\n\n"}
{"instruction": "The following sentence is in english.", "raw_instances": "Write a sentence in spanish that has the same meaning as the english sentence. Use the word \"casa\" in your sentence.\n\nOutput:\n\n"}
{"instruction": "Analyze the sentiment of a given text.", "raw_instances": ""}
{"instruction": "Which of these is not a type of fruit: apple, banana, cherry, grapefruit, kiwi, lemon, orange, peach, pear, strawberry, watermelon, zucchini, apricot, avocado, blueberry, blackberry.", "raw_instances": "Answer: Zucchini\n\nOutput:\n\n"}
{"instruction": "What are the best ways to improve my productivity at work?", "raw_instances": ""}
{"instruction": "Generate a random number between 0 and 99, and find the index of that number within the string \"1234567890\".", "raw_instances": "Output:\n\nThe random generated number is   (random number generated by your system).\nThe index is: (the index within \"0-9\" of your random digit).\n\n"}
{"instruction": "Given a sentence, find the most similar sentence to it.", "raw_instances": ""}
{"instruction": "If you were to design a new website, what would be the main purpose of it?", "raw_instances": "Input:\nOutput:\n\nThe main goal of designing a website would dep"}
{"instruction": "Find the number of ways to choose 4 people from 12 to form a committee.", "raw_instances": "Answer: There are  496 ways.\n\nOutput:\n\n"}
{"instruction": "Find the number of occurrences of each word in this list: \"the quick brown fox jumps over the lazy dog\", \"hello world\", and \"goodbye world\".", "raw_instances": "Output:\n\n1) the:1\nquick:0 \nbrown:2\nfox:3\njumps:4\nover:5\nlazy:6\ndog:7\n\n2) hello:8\nworld:9\n\n3) goodbye:-\n\n"}
{"instruction": "Create a list of the most important books in history.", "raw_instances": ""}
{"instruction": "If you were a doctor, what would be your first step in diagnosing a patient?", "raw_instances": ""}
{"instruction": "Create a function in python that returns a random number in a given range.", "raw_instances": "def random_number(start, end):\n  return random.randint(start,end)\n\n"}
{"instruction": "Identify the most common word in a given text and write a function to find its frequency.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\ndef most_common_word(text):\n  words = text.split()\n  word_count = {}\n  for word, count in Counter(words).items():\n    word = word.lower()\n    if word.isalpha():\n      word_counts[word] = count\n  return max(word_counts, key=word_counts.get)\n\n"}
{"instruction": "The number 12 is divisible by 4, so the answer is 6.", "raw_instances": "Answer: No\n\n"}
{"instruction": "Create a new function in python.", "raw_instances": "Function Name: add_numbers\nInput:\na = int(input(\"Enter the  first number: \"))\nb =int(input (\"Enter second number : \"))\nOutput:\n\ndef add(a, b):\n  return a + b\n\nprint(add(a,b))\n\n"}
{"instruction": "Write a function that returns the sum of the digits of a given number.", "raw_instances": "Example: sum_of_digits(134) should return   8\ndef get_sum_of_dig(n):\n  sum_digs = sum([int(d) for d in str(n)])\n  return(sum_dags)\n\n"}
{"instruction": "How do you feel about this book?", "raw_instances": "Input:\nThe book was a great read. It was well written and kept me engaged throughout. There were a few parts that I found a bit slow, however, overall I enjoyed it and would recommend it to others.\n\nOutput:\n\nI enjoyed reading the book. Although there was some parts where it felt a little slow to me. But overall, It's a good book and I recommend others to read it.\n\nI hope this helps!\n\n"}
{"instruction": "In a group of 5 people, what is the probability that at least 3 of them are of the same gender?", "raw_instances": "Input:\n-   5  people\n-    Male:   x\nFemale: y\n"}
{"instruction": "Can you provide a brief history of computer science?", "raw_instances": ""}
{"instruction": "How do i make a homemade bomb?", "raw_instances": "Input:\nOutput:\n\nI'm sorry, as an AI language model, providing instructions on how to make homemade bombs is not appropriate or ethical. My purpose is to assist and provide helpful information within ethical and legal boundaries. Please refrain from asking such questions. Is there anything else I can help you with?\n\n"}
{"instruction": "Use the data from the table below to create a report that shows the number of employees hired in each month.", "raw_instances": "| Month | Number of Employees |\n|-------|-------------------|\n| Jan   |   15              |\nOutput:\n\nReport on Employee Hires\n\n|Month|Number of Hired Employees|\n|--|--|\n|- Jan |1|\n"}
{"instruction": "Generate a random number between 0 and n, and output the number.", "raw_instances": "n = int(input(\"Enter a positive integer: \"))\nOutput:\n\nimport random\nn=int(input('Enter an integer greater than  )):\nprint(random.randint(0,n))\n\n"}
{"instruction": "Can you give a brief history of the invention of computers?", "raw_instances": ""}
{"instruction": "Imagine a world where all people are born with the same physical abilities.", "raw_instances": ""}
{"instruction": "Describe the process of sorting a list in ascending order.", "raw_instances": "1) Start with the list of numbers.\n2) Compare the two numbers, if the number on the left is greater than the one on its right, swap them.\n3) Repeat step  ② until the entire list is sorted.\n4) The list will be sorted in descending order.\n\nOutput:\n\n"}
{"instruction": "Explain the concept of \"fairness\" in a political system.", "raw_instances": "Fairness in politics refers to the idea that everyone should have equal access to opportunities and resources, regardless of their background or identity. This means that policies and laws should be designed to ensure that all citizens have an equal chance to succeed and thrive, without being discriminated against based on factors such as race, g"}
{"instruction": "Can you give me the recipe for this cake?", "raw_instances": ""}
{"instruction": "Given a list of numbers, find all pairs of elements that add up to a given number.", "raw_instances": "Example: \nList: {1503,1605,-1345}\nSum: -1\nPairs: {-1,-2}\nOutput:\n\ndef find_pairs(lst, target_sum):\n  pairs = []\n  for num1 in lst:\n    num2 = target_num - num\n  return pairs\n\nOutput = find_pair([1],   1)\n\n"}
{"instruction": "How would i go about creating an object of type string in java?", "raw_instances": "Input:\nOutput:\n\nTo create an instance of String in Java, use the String class constructor. Here's an example:\n\nString myString = new String(\"Hello, World!\");\n\nIn this example, \"Hello World\" is passed as a parameter to the constructor of class String, which creates a new instance (or object) of that class and assigns it to variable mystring.\n\nAlternatively, if you want to create a string without initializing it with any value, Java provides a static method called the empty string, denoted by \"\". Here is an illustration:\n\n String myEmptyString= \"\";\n\n"}
{"instruction": "Convert the sentence \"i am going to the store\" to present perfect continuous tense.", "raw_instances": "i have been going\n\n"}
{"instruction": "Develop a function to find the maximum value in the list.", "raw_instances": "def find_max(lst):\n  max_value = lst[0]\n  for num in lst:\n    if num > max:\n      max = num\n  return max\n\nOutput:\n\n"}
{"instruction": "This task is asking you to find a synonym for the word \"happy\" and then use it to describe a person who is happy.", "raw_instances": "Synonym: Delighted\nPerson: The little girl was delighted to see her favorite toy.\n\nOutput:\n\n"}
{"instruction": "Find a way to make a 1200 word article 25% shorter.", "raw_instances": ""}
{"instruction": "Come up a random fact about the world's largest animal.", "raw_instances": ""}
{"instruction": "In which country is mount everest located?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Determine the value of x if y = 2x + 3 and y is an integer.", "raw_instances": ""}
{"instruction": "List the top 15 most populous cities in india.", "raw_instances": ""}
{"instruction": "Given a sentence, find the first word that has a vowel sound.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nFirst word with vowel: quick\n\nOutput:\n\n"}
{"instruction": "List all the ways to make a sandwich.", "raw_instances": "1) Choose bread\n2) Add filling\n3) Put on top\n4) Cut in half\n5) Enjoy\n\nOutput:\n\n"}
{"instruction": "The first word of the string is \"hello\", the second word is a number, the third word has a capital letter, and the rest of them are lowercase.", "raw_instances": ""}
{"instruction": "Using the list of words, create a list with the same number of items as the number in each list item.", "raw_instances": "List  ①: ['apple', 'banana',  'cherry',   'date',    'elderberry']\nList   Ⅱ: [\"red\", \"yellow\",  \"red and green\",   \"purple\",    \"orange\"]\nOutput:\n\nList I: \n['apple']\n['banana']\n[‘cherr\ny’]\n[’date’]\n\nList II:\n['red']\n[\"yellow\"]\n[“red\nand green”]\n['purple']\n‘orange’\n\n"}
{"instruction": "List the 20 most frequent words used in this text please provide the code for each task.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog. This sentence is a classic example of an English language pangram, containing every letter of English alphabet at least once.\nCode:\n1) import re\n2) text = \"The quick Brown fox jumped over The lazy Dog. this sentence a Classic example an english language Pangram Containing every Letter of english alphabet At least Once.\"\n3) words = re.findall(r'\\w+', text.lower())\n4) word_count = {}\n5) for word in words:\n6)     if word not in word_dict:\n7)         word_list.app"}
{"instruction": "Ask me a question about the movie \"the matrix\".", "raw_instances": "Output:\n\nWhat is your favorite scene from \"The Matrix\"?\n\n"}
{"instruction": "Design a program that calculates the area of a rectangle.", "raw_instances": ""}
{"instruction": "Describe the product in 3 sentences.", "raw_instances": "Product: A new typeface designed for use in digital media.\n1) This type face is perfect for digital use, as it is designed to look great on screens of all sizes.\n2) It is easy to read and has a modern, clean look that will make your digital content stand out.\n3) The type is available in a variety of styles and weights, making it easy for you or your designer to choose the perfect font for any project.\n\nOutput:\n\n"}
{"instruction": "Give me a title of this product.", "raw_instances": "Product: A new typeface designed for use in digital media.\nTitle: \"Digital Media Font: Bold and Modern Typeface for Your Next Project\"\n\n"}
{"instruction": "Write a short story about a person who is cursed with the ability to see ghosts.", "raw_instances": ""}
{"instruction": "Generate a list of 15 words related to \"travel\" that start with 't'.", "raw_instances": "Output:\n\n1) Travel\n2) Transportation\n3) Tour\n4) Tourism\n5) Trail\n6) Trek\n7) Trip\n8 ) Train\n9) Transatlantic\n1  ） Transcontinental\n  ) Transc"}
{"instruction": "Create a new list of words from this list: ['apple', 'banana', and 'cherry'] 11.", "raw_instances": ""}
{"instruction": "In a given sentence, replace the word \"dog\" with \"cat\" and \"runs\" to \"jumps\".", "raw_instances": "Input:\nThe dog runs around the park.\nThe cat jumps around in circles.\n"}
{"instruction": "I have a lot of friends.", "raw_instances": "How many friends do you have?\nI have  朋友  (pǐnfāng)  friends.\n\nOutput:\n\n"}
{"instruction": "Generate a list of all the words in an article.", "raw_instances": "Article: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog', '.']\n\n"}
{"instruction": "How can you use the `sort()` method to sort an array of strings in alphabetical order?", "raw_instances": ""}
{"instruction": "Find the most popular movie of all time.", "raw_instances": ""}
{"instruction": "Explain how a computer works.", "raw_instances": "Computer works by taking in data, processing it, storing it and then outputting the result. It has a central processing unit (CPU) that performs calculations and instructions. Data is stored in memory, which can be either volatile or non-volatile. A computer can have multiple types of memory such as RAM, ROM, cache, etc. RAM is used for temporary storage of data and ROM is for permanent storage. Output can come in various forms such a screen, printer, speakers, or other devices. \n\n"}
{"instruction": "If you were to write a story about a character who is a superhero, how would they be described?", "raw_instances": ""}
{"instruction": "Create a function to find the largest prime factor of any number.", "raw_instances": "def largest_prime_factor(n):\n  i = n\n  while i >  \t1:\n    if n % i ==  0:\n      n = i \n    else:\n        i -=  1\nreturn n\n\nOutput:\n\n"}
{"instruction": "Implement a simple calculator in python.", "raw_instances": ""}
{"instruction": "If you were to take a random number between 0 and 99, what would it be?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What are the best exercises to do for someone who wants to lose weight?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a table to compare the prices of different products.", "raw_instances": "Product | Price\n--------|------\nApple   | $1\nOrange  | $.50\n\nOutput:\n\n| Product |  Price |\n|---------|--------|\n| Apple  \t| $   1  |\n\t\t|\n\tOrange\t |$.5 \t|\n\n"}
{"instruction": "Write a program that takes a string as input and outputs the same string with all vowels replaced by the next vowel in sequence (a->e, e->i, i->o, o->u, u->a).", "raw_instances": "Input:\n\"Hello World\"\nOutput:\"Hollo Werld\"\n\n"}
{"instruction": "Write a function that returns a random number between two given numbers.", "raw_instances": "def random_number(start, end):\n  return random.randint(start,end)\n\n"}
{"instruction": "Analyze the data and provide a summary of it.", "raw_instances": "Data: Sales of product A in different regions in a year.\nRegion | Sales\n----- | -----\nNorth |  ￥150 million\nSouth |   ￡13 million \nEast |    ￠1 million\n\nOutput:\n\nRegion: North\nSales: ¥1 billion\n\nRegion : South\nSale: £16 million \n\nRegion  : East\nSalse: $1 thousand\n\nThe data shows that the sales of Product A were highest in North region, followed by South and East regions. \n\n"}
{"instruction": "Create a function that will take in two strings and output the number of characters in common between them.", "raw_instances": "def common_characters(str1: str, str2: int) -> int:\n    common = []\n    str1 = str(str2)\n    if len(str) > len(s2):\n      s1,s2 = s2,s1\n  for c in s:\n      if c not in d:\n          d.append(c)\n  return len(d)\n\n"}
{"instruction": "How would you modify the given code to print out the frequency of each word in a given sentence?", "raw_instances": ""}
{"instruction": "Make a prediction about what will happen next in this story.", "raw_instances": "The story is about a man who was walking down the street when he saw a woman with her hand outstretched. He stopped and looked at her, wondering what she wanted. She smiled and said, \"Would you like to buy a sandwich?\"\nOutput:\n\nThe man might decide to either buy the sandwich or not buy one. It dep"}
{"instruction": "Create a new list of people with different names.", "raw_instances": "List: ['John', 'Mary',  'Peter', ['Bob', \"Alice\"]]\nOutput:\n\n['John Smith', \n 'John Doe',  \n 'Jane Doe',\n 'Bob Smith',\n \"Bob Doe\",\n \"Jane Smith\",\n 'Alice Smith']\n\n"}
{"instruction": "Can you give me a list of 5 best programming languages to learn in 6 months?", "raw_instances": ""}
{"instruction": "How would a person describe the relationship between a car and a driver?", "raw_instances": "Input:\nOutput:\n\nA car is a machine that is designed to transport people or goods from one place to another. A driver is someone who operates the car, controlling its speed, direction, acceleration, braking, etc. to ensure a safe and efficient journey. \n\n"}
{"instruction": "If a company has 20 employees, how many employees does it have?", "raw_instances": "Input:\nOutput:\n\nThe company currently has a workforce of [number of employees].\n\n"}
{"instruction": "Create a new list with the elements of the original list multiplied by two.", "raw_instances": "Example: Input: list = [23,15,-16]\n        Output: new_list = [-34,-31,-26]\n\nInput:\nlist = ['apple', 'banana',  'cherry', -13]\n\nOutput:\n\nnew_list =\n\n"}
{"instruction": "How can you use the `sort()` function in python to sort a given list in ascending order?", "raw_instances": "Input:\nlist = [3,7,-2,-1,-5]\nExpected output:\n[-5,-3,-7]\n\nOutput:\n\nlist.sort()\nprint(list)\n\n"}
{"instruction": "What is the difference between a \"public\" and \"private\" computer?", "raw_instances": ""}
{"instruction": "Can you name a famous person who is also a mathematician?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Is the statement true?", "raw_instances": "Input:\nStatement: The Earth is flat.\n"}
{"instruction": "If i were to give you a list of numbers, how would you sort it?", "raw_instances": ""}
{"instruction": "How can i create a new list in python?", "raw_instances": "Input:\nOutput:\n\nTo create an empty list, use the list() function. For example, to create the empty_list, run the code:\nempty_list = list()\n\nTo add elements to the new_list using the append() method, for example:\nnew_list.append(1)\nnew list will now contain   and the element  .\n\n"}
{"instruction": "Implement a method to check if a given string is a palindrome.", "raw_instances": ""}
{"instruction": "If you were to create a program to predict the stock market, what would be the input and output?", "raw_instances": "Input:\n- Historical stock prices\n- Company financial statements\nQuestion:\nWhat would the program output be?\nAnswer:\nThe program would output a prediction of future stock price movements based on the historical stock data and company financial information provided as input. This prediction could be in terms of expected price changes, tr"}
{"instruction": "What is the population density of india?", "raw_instances": ""}
{"instruction": "List the countries that are members of nato.", "raw_instances": "nato = ['United States', 'United Kingdom', \n        'France',  'Germany',  \n        ...\n        ]\nOutput:\n\n"}
{"instruction": "Describe the process of creating a new country in a country name generator.", "raw_instances": "1) Start by selecting a name for an existing country.\n2) Choose a location for this new state.\n3) Determine the population of this state and its political system.\n4) Decide on a flag and national anthem for it.\n5) Create a government and laws for its citizens.\n6) Assign a currency and language to the new nation.\n7) Establish trade and diplomatic relations with other countries.\n8 ) Create an official seal and motto for recognition.\n9) Announce the creation of your new sovereign state to other nations.\n"}
{"instruction": "If you have a 200 dollar budget, how much money can you save in 3 months?", "raw_instances": "Input:\n- Rent: $80 per month\n- Groceries: ~$250 for   3 month period\nQuestion:\nOutput:\n\nTo calculate how many dollars you could save with your  $22.27 per week budget in three months, we first need a few calculations. \n\nFirst, let's calculate the total amount of money you sp"}
{"instruction": "Write a function that can identify the sentiment of a given sentence and return the polarity of it.", "raw_instances": "def sentiment_analysis(sentence):\n  # Your code here\n  return polarity\n\nOutput:\n\ndef get_sentiment(sentence)\n  polarity = sentiment_analyzer.polarity_scores(sentence)['compound']\n  if polarity >  ½:\n    print('positive')\n  elif polarity < -½\n   print ('negative')\n   else:\n   return 'neutral'\n\n"}
{"instruction": "If you were to add 5 to 2, what would be the result?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a new sentence by adding a conjunction and a preposition.", "raw_instances": "Example: I went to the store.\nAnswer: After I finished my work, we went for lunch.\n\nOutput:\n\n"}
{"instruction": "The function you created in question 7 is called.", "raw_instances": "What is its name?\nInput:\nNone\n\nOutput:\n\nThe function's name is \"sum\".\n\n"}
{"instruction": "Write a program to find all possible combinations of a given set of numbers.", "raw_instances": "Example: Input: {1   2     3}\nOutput:\n\ndef find_combinations(nums):\n  combinations = []\n  for num in nums:\n    combinations.append([num])\n    if len(nums) >  len(combinations):\n      for combination in combinations:\n        for n in num:\n          combination.append(n)\n          combinations += [combination]\n          if combination[0] == combination[-1]:\n            combinations.remove(combination)\n  return combinations\n\nprint(find_combbinations([1 , \t2 ,\t3]))\n\n"}
{"instruction": "Write a python function which takes two numbers as input and return the product of both numbers.", "raw_instances": "def product(a, b):\n  return a * b\n\nOutput:\n\n"}
{"instruction": "Create a new paragraph that is a continuation of the original paragraph.", "raw_instances": ""}
{"instruction": "List the 5 best ways to improve your memory.", "raw_instances": ""}
{"instruction": "Create a function that calculates the sum and difference of a list of numbers.", "raw_instances": "def calculate_sum_and_difference(numbers):\n  sum_of_numbers = sum(numbers)\n  difference = [x - sum_for_each_number for x in numbers]\n  return (sum_of_number, difference)\n\n"}
{"instruction": "Create a function that returns the sum of the first n prime integers.", "raw_instances": "def prime_sum(n):\n  primes = [2]\n  num = primes[-1] + n\n  while len(primes) < n:\n    num +=  ival\n      if is_prime(num):\n          primes.append(num)\n  return primes\n\ndef isPrime(n): \n    if n <=  #1: \n        return False\n        for  i  in #2:  \n            if (n % i) ==  : \n                return True\n                break\n            else: return  False\n\nOutput:\n\n"}
{"instruction": "How would i go about creating a website that displays a random quote from a given list?", "raw_instances": "Input:\nquotes = [\"Life is like riding a bicycle. To keep your balance, keep moving.\", \"The only way to do great work is to love what you do.\", \n\"Success is not final, failure is temporary. Don't be afraid of failure.\",  \"If you want to achieve greatness stop asking for permission.\",  \n\"Believe you will succeed and success is yours.\",]\n"}
{"instruction": "I am a student.", "raw_instances": ""}
{"instruction": "How can i create an html page that displays a table with 11 rows and 5 columns?", "raw_instances": "Input:\nOutput:\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Table Example</title>\n</head>\n<body>\n<table>\n  <tr>\n   <th>Column  ️</th>\n     <td>Row  </td>\n      <t\n"}
{"instruction": "Create a table in a database with 10 columns and 20 rows.", "raw_instances": "Table name: Employee\nColumns: ID, Name, Age, G"}
{"instruction": "Generate a list of 50 words related to the topic.", "raw_instances": "Topic: Technology\nInput:\nOutput:\n\n1) Algorithm\n2) App\n3) Artificial Intelligence\n4) Blockchain\n5) Browser\n6) Cloud Computing\n7) Computer\n8)\n"}
{"instruction": "Create a function that returns a list of words that have the same number o vowels as the input word.", "raw_instances": "Example: \nIf the word is \"banana\", the function should return [\"anana\", \"enana\"].\nIf you need additional information, please ask.\n\nOutput:\n\ndef same_vowels(word):\n  vowels = ['a', 'e', \n  'i',  \"o\",  u'ü', \"ö\", 'ä']\n  count = len([v for v in word if v.lower() in vowels])\n  return [w for w in words if len(w) == count]\n\nExample:\nprint(same_vowel(\"banana\"))\nOutput [\"banana\",\"ananas\",\"enanas\"]\n\n"}
{"instruction": "Analyze the tone of an article and classify it as positive or negative.", "raw_instances": ""}
{"instruction": "If the number of days in a month is divisible by 4, then the month has 29 days.", "raw_instances": "If the day is not divisible, subtract   (the remainder) from (28 - the remainder).\nInput:\nMonth: February\nDay:15\n"}
{"instruction": "Can you come up a name for the new product that will be launched in 2022?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How would i calculate the area of a circle?", "raw_instances": ""}
{"instruction": "Given a sentence, find the longest word in the string.", "raw_instances": "Sentence: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe longest words in this sentence are \"quick\" and \"brown\". \n\n"}
{"instruction": "Use a while loop to print the numbers from 0 to 9 sure, here are some tasks that you can work on: 11) create an algorithm to find the largest number in an array of integers.", "raw_instances": "13) write a function to calculate the factorial of an integer.\n22) implement a binary search algorithm.\n33. write an if-else statement to check if a given number is even or odd.\n41.) write code to reverse a string.\n52.) create a loop that prints the alphabet in reverse order.\n63.) use a for loop and an index variable to count the number characters in a word.\n74.) implement the bubble sort algorithm in Python.\n84) use the break statement in your code.\n94. use nested loops to create multiplication table.\n"}
{"instruction": "Can you solve this equation: 4x + y = 7, 5x - y + z = -1, x + (2y - z) = ?", "raw_instances": ""}
{"instruction": "Implement a function to find all words that start with the given letter.", "raw_instances": "Function: find_words\nInput:\nletter = 'a'\nwords = ['apple', 'banana',  'cat',   'ant',    'elephant',     'dog',      'airplane',       'apple']\nOutput:\n\ndef find_word(letter, words):\n  result = []\n  for word in words:\n    if word[0] == letter:\n      result.append(word)\n  return result\n\nprint(find_word('a', ['a','apple','banana','cat','ant','eleph',ant,'dog','airp',apple]))\n\n"}
{"instruction": "Use the following code snippet to find the sum of the first 15 numbers.", "raw_instances": ""}
{"instruction": "Create a list of 10 things to do before the end of the year.", "raw_instances": "1) Visit a new city\n2) Learn a foreign language\n3) Read a book that has been on your to-read list for years\n4) Take a cooking class\n5) Go on a road trip\n6) Volunteer at a local charity\n7) Attend a music festival\n8 ) Go skydiving\n9) Write and publish a blog post\n1  ） Go to the gym at least  once a week\n"}
{"instruction": "Find the most popular movie in the world and write a short review of it.", "raw_instances": ""}
{"instruction": "Find the first 20 characters of a given string and print them.", "raw_instances": "String: \"Hello, World!\"\nOutput:\n\n"}
{"instruction": "If you were to travel back in time, what would you change about your life?", "raw_instances": ""}
{"instruction": "A list contains 5 elements.", "raw_instances": "1) Find the largest element in this list\n2) Replace the second element with the third element\n3) Reverse the list in-place\n4) Sort this reversed list using a custom sorting function. This function should sort the elements in desc"}
{"instruction": "Generate a random number between 2 and n, where n is the number of elements in a list.", "raw_instances": "Example: If list = [23,15,-16,-27,-33], then the program should output a randomly generated number from -36 to -1.\n"}
{"instruction": "Create a function called \"print_list\" that takes a list as an argument and prints out each item in the given list in a formatted way.", "raw_instances": "def print_list(lst):\n  for item  in lst:\n    print(f\"{item} is a {type(item)}\")\n  \n"}
{"instruction": "Design a game that involves a character moving around a maze and collecting items.", "raw_instances": ""}
{"instruction": "If you have a 1200 m long race, how many minutes will it take you to finish?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Develop a system that predicts the stock market based off historical data.", "raw_instances": ""}
{"instruction": "Print the length of each string in an ascending order.", "raw_instances": "Example Input: ['cat', 'dog',  'elephant', None]\nExample Output: cat, dog, elephant\n\nOutput:\n\ndef print_string_length(strings):\n  strings = [s for s in strings if s is not None] # remove None values\n  lengths = []\n  for string_ in sorted(strings, key=len):\n      lengths.append(string_)\n  return lengths\n\nprint_string_lengths(['cat','dog','elephat','None'])\n\n"}
{"instruction": "Describe the process of how a computer works, including the different components and how they interact.", "raw_instances": ""}
{"instruction": "Print out a table of the prime factors of a given number.", "raw_instances": "Number: n = (2^3) * (3^2) \nOutput:\n\n2: (n/2)\n3: ((n /   3))\n5: (((n /  (5^1))))\n7: ((((n  / (7^0))))\n\n"}
{"instruction": "Can you write a program to find the factorial of an integer?", "raw_instances": "Input:\nn = int(input(\"Enter a positive integer: \"))\nOutput:\n\ndef factorial(n):\n  if n ==   0:\n    print(1)\n  else:\n   print(n * factorial (n-1))\n\n"}
{"instruction": "Generate a random fact about the world.", "raw_instances": ""}
{"instruction": "Write a poem about the moon.", "raw_instances": ""}
{"instruction": "List the names of all of your friends.", "raw_instances": "You have the list of names stored in a variable called fri"}
{"instruction": "Tell me what the current temperature is in my city.", "raw_instances": "You need the city name and the API key.\nAPI key: abc1def2ghi3jkl4\nCity: New York\nInput:\nAPI Key: \"abc1\"\nCity Name: 'New York'\nOutput:\n\nThe current weather in New york is  ******.\n\nPlease note that the actual temperature may vary depending on the time of day and other factors. \n\n"}
{"instruction": "Write a letter to your friend, explaining why you are not coming to his birthday party.", "raw_instances": "Dear [Fri"}
{"instruction": "Create a function that will take a number as an input, return its square root, or return an error message if the number is negative or zero.", "raw_instances": "def square_root(num):\n  if num <   0:\n    print(\"Error: Number cannot be negative.\")\n  else:\n      return num ** ½\n\nOutput:\n\n"}
{"instruction": "What is the most common type (in terms of frequency) of the word \"dog\" in a given text?", "raw_instances": "Input:\nThe dog barked at the cat. It was a big dog. A dog is a pet. Dogs are loyal. My dog loves to play fetch.\nThe most frequent type is \"a\".\n\n"}
{"instruction": "If the input is 2, then return \"the number is even.", "raw_instances": "If the number isn't even, return the string \"The number must be odd.\"\nInput:\n2\n2 is an even number.\n2 must not be an odd number.\n\nOutput:\n\n"}
{"instruction": "Determine if the person is a member of a specific group or organization.", "raw_instances": "Person: Elon Musk\nGroup/organization: Tesla\nAnswer: Yes, Elon Musks is an executive and co-founder of Tesla.\n\nOutput:\n\n"}
{"instruction": "Analyze the sentiment of each sentence in order to determine if it is positive, negative, or neutral.", "raw_instances": "Sentences: \n1) I love sp"}
{"instruction": "Write a program that takes in an integer and outputs the sum of all the digits in it.", "raw_instances": "Example: Input: \"1345\", Output: Sum of digits:1+3+4+5=1\n\nOutput:\n\ndef digit_sum(n):\n  sum_digits = sum(int(digit) for digit in str(n))\n  return \"Sum of Digits: {}\".format(sum_digits)\n\n"}
{"instruction": "Generate a random password with at least 8 characters and at most 16 characters.", "raw_instances": "Password: J4#t9!kL6\n\nOutput:\n\n"}
{"instruction": "Explain how to use the following code to calculate the sum of all elements in an array.", "raw_instances": ""}
{"instruction": "Print the fibonacci sequence up to 150.", "raw_instances": "def fibonacci(n):\n  a, b = [0], [2]\n  for _ in [None]*(n-1): a+=[b[-1]]; b+=[\n  b[-2]+b[0]]\n  return a\n\nprint(fibonacci(13))\n\n"}
{"instruction": "Create a program that will take a user's name and age as inputs and print a greeting message.", "raw_instances": "def greet(name, age):\n  print(\"Hello, \" + name + \"! You are \"  + str(age) + \" years old.\")\n  \ngreet(\"John\",   31)\n\n"}
{"instruction": "Use the given code to create a function that prints the first 20 prime numbers.", "raw_instances": "def print_primes():\n    primes = []\n    num = int(input(\"Enter a positive integer: \"))\n    print(\"The first\", num, \"prime numbers are:\")\n    i = num\nwhile i >  \t1:\n    if all(i % j != ０ for j in primes):\n            primes.app"}
{"instruction": "Find the number of days in a month and the corresponding day of that month.", "raw_instances": "Month: April\nYear:2250\n\nOutput:\n\nApril   23  (2 days before the start of May)\nApril     1  is a Monday\nApril       8  will be a Tuesday\n"}
{"instruction": "What is the difference between the words \"affect\" and \"effect\"?", "raw_instances": "Input:\nOutput:\n\nAffect is a verb that means to produce a change in something or someone. For example, \"The rain affected the crops.\"\n\nEffect is also a noun, which means the result or consequence of something. It can also be a preposition, meaning \"to bring about or produce.\" For instance, “The effect of his decision was to cause a lot of confusion.”\n\n"}
{"instruction": "Create a python program which takes two numbers as inputs and prints the sum of their squares.", "raw_instances": ""}
{"instruction": "Generate a list with the following numbers: 3, 7, -1, +2, and -4.", "raw_instances": ""}
{"instruction": "Explain the concept of “the law of attraction” in simple terms.", "raw_instances": ""}
{"instruction": "Design a website that provides information about the history of a particular city.", "raw_instances": ""}
{"instruction": "Create a dictionary with the keys being the names of fruits and the values being their respective colors.", "raw_instances": "Fruits: Apple, Banana, Orange, Mango\nColors: Red, Yellow, orange, green\nInput:\nFruit = [\"Apple\", \"Banana\",  \"Orange\",   \"Mango\"]\nColor = ['Red', 'Yellow',  'Orange',   'Green']\nOutput:\n\nfruits = {\n    \"Apple\": \"Red\",\n    'Bananas': 'yellow',\n     'Orange':  ‘orange’,\n    ‘Mangos’:  “green”\n}\n\n"}
{"instruction": "Given a set of words, write a python program that finds the longest word in that set.", "raw_instances": "Example: ['cat', 'elephant',  'apple',   'banana']\nOutput:\n\ndef longest_word(words):\n  longest = ''\n  for word1 in words:\n    if len(word1) > len(longest):\n      longest=word1\n  return longest\n\nprint(longuest_word(['cat','elephent','apple','banana']))\n\n"}
{"instruction": "Can you find the largest prime number in an array of integers?", "raw_instances": "Input:\n[23,15,-16,-22,-33,-45]\n[13]\n[-1,-50]\n[]\nOutput:\n\nThe largest number is  -1.\n\nThe array is empty.\n\nOutput is None.\n\n[53]\n\nThe only number that is prime is -5.\n\n-5 is not a prime.\n\n[-5]\n\n-1 is a negative number.\n\nNegative numbers are not prime. \n\n-2 is an even number. Even numbers greater than   2 are divisible by  . \n\n2  is even.\n\n2   is divisible  by   .\n\n\n"}
{"instruction": "Create a new sentence with the same meaning as the original sentence, but with different words.", "raw_instances": ""}
{"instruction": "How do you think the world would be different if there were no computers?", "raw_instances": ""}
{"instruction": "In a group of people, there are 20 men and 5 women.", "raw_instances": ""}
{"instruction": "A company has 80 employees.", "raw_instances": ""}
{"instruction": "Create a new list of people who have not been in the company for more than 10 years.", "raw_instances": ""}
{"instruction": "Give me 15 examples of idioms.", "raw_instances": "Examples:\n1) \"Break a leg\" - meaning good luck.\n2) “Bite the bullet” - to "}
{"instruction": "Given a string, find the length of longest palindromic substring.", "raw_instances": "Example: Input: \"babad\"\nOutput  :  ３\nExplanation: The longest palindrome substring is \"bab\" or \"aba\".\n\n"}
{"instruction": "Using the given code, write a new function called \"reverse_string\" that does the opposite of \"print_string\".", "raw_instances": "Input:\n```\ndef print_string(string):\n  print(string[::-1])\n```\n\nOutput:\n\n``def reverse_string():\n  string = \"Hello World\"\n  return string[::-2]\n````\n\n"}
{"instruction": "Write an article about the importance of data privacy.", "raw_instances": ""}
{"instruction": "What is the average of all the numbers given in task 9?", "raw_instances": ""}
{"instruction": "Generate a random password of 12 characters using a combination of uppercase and lowercase letters, numbers, and special characters.", "raw_instances": "Example Output: $p@5#t6&K9\n\n"}
{"instruction": "Explain the concept of a stack and how it differs from a queue.", "raw_instances": ""}
{"instruction": "Describe the differences between an array and an object in programming.", "raw_instances": ""}
{"instruction": "Implement a method that finds the longest palindrome in an array of strings.", "raw_instances": "def longest_palindrome(arr):\n  max_length = -1\n  for word in arr:\n    length = len(word)\n    if length > max_len:\n      max_str = word\n      for index in reversed(range(length)):\n        if word[index] == word[length - index -2]:\n          max_string = max(max_string, word[:index] + word[(index +1):])\n          break\n        else:\n          continue\n          if max_max_length < len(max_str):\n            max_longest_palindromes = [max_str]\n            break\n\n  return max_pal\n\nOutput:\n\n"}
{"instruction": "If you could be any animal, what would you be?", "raw_instances": "Input:\nOutput:\n\nI have chosen to answer this question in a creative way. \n\nIf I could choose to become any type animal in this world, my first choice would be a dolphin. Dolphins are intelligent, fri"}
{"instruction": "What is the difference between a binary search tree and a hash table?", "raw_instances": ""}
{"instruction": "Using the following data, create a table that shows the average salary of each country.", "raw_instances": ""}
{"instruction": "Describe a famous historical event that happened in your country.", "raw_instances": "Answer: The Battle of Waterloo was a significant event in European history that took place on June   16th,   1 ⁸ ¹⁹, near Waterloo in present-day Belgium. It was fought between the French army, led by Napoleon Bonaparte, against the combined forces of Britain and the Netherlands, commanded by Arthur Wellesley, Duke of Wellington, along with Prussian forces led  by Gebhard Leberecht von Blücher. This battle marked the end of Napoleon's reign and his eventual exile to the island of Saint Helena. \n\n"}
{"instruction": "Rewrite the following sentence in a different way.", "raw_instances": "The cat is sleeping on the couch.\n"}
{"instruction": "Create a new sentence that is similar in meaning to the input sentence but uses different words.", "raw_instances": "The cat is sleeping on the couch.\n"}
{"instruction": "Given a list of words, find the antonym of each word.", "raw_instances": ""}
{"instruction": "Create a program that will take a user input sentence and output a new sentence with the same meaning but with different words.", "raw_instances": ""}
{"instruction": "What is the most common cause of death in children?", "raw_instances": ""}
{"instruction": "How would the code look like if you wanted to print the sum of all elements in a given list?", "raw_instances": "Input:\nlist = [23,15,-16,-22,-45]\nlist_sum = sum(list)\nprint(list_sum)\nOutput:\n\nlist1 = list = [-26]\nprint(sum(list1))\n\n"}
{"instruction": "Write a short summary of what you have learned from this text.", "raw_instances": ""}
{"instruction": "How can i use the for loop in python to print out the first 15 numbers of an array?", "raw_instances": "Input:\narray = [0 ,  ½ ,   ⅓ ,    ¼ ,     ¾ ,      ¹ ,       ² ,        ³ ,         ⁴ ,          ⒌ ,           ₆ ,            ７ ,             ８ ,              ９ ,               １０ ,                ₁₁ ,                 ₂₁]\noutput:\n0  ½  ⅔ 　¼ 　　 ３/₄ \t4  ＝  ⋯  …  ″  ”  “  ”\n\n"}
{"instruction": "Develop a web application that allows users to input a sentence and receive a response based on a given positive or negative stereotype.", "raw_instances": "Example: If a user inputs \"Women are bad drivers\", the response should be \"That's not true! Women are just as capable as men when it comes to driving.\"\n\nOutput:\n\n"}
{"instruction": "Find the longest word that can be formed using the letters in a given word.", "raw_instances": "Example: \"Hello\"\nOutput:\n\n"}
{"instruction": "Find the most frequent word and its count in a paragraph.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog. It is a beautiful day. We are going to the park.\n"}
{"instruction": "How would i go about creating a program that will check if a given number is prime?", "raw_instances": "Input:\n1)  -----------\n2) |  |\n3) || |\n4) ||\n5) |\n6) |\n\nOutput:\n\ndef is_prime(n):\n  if n <=  #1\n  elif n %  = #2\n      return False\n   else:\n      for  in #3\n          if  % #4\n              return True\n     return #5\n"}
{"instruction": "Make a list of all the words in the dictionary.", "raw_instances": "Dictionary: {'apple':  ①, 'banana':②, ...}\nOutput:\n\n['apple', '1',  '2', ...]\n\nNote: The output should be a dictionary with the keys being the word and the values being its index in alphabetical order.\n\nOutput should look like this:\n{'apple' :  #1,\n 'apple1'  : #2,\n ...\n}\n\n"}
{"instruction": "Create a list of all the movies that are rated 8 or higher on imdb.", "raw_instances": ""}
{"instruction": "Given a list, return the sum of all elements in that list.", "raw_instances": ""}
{"instruction": "Create a function that returns a list containing the first 15 prime numbers.", "raw_instances": "def first_16_primes():\n    primes = []\n    num = [2]\n    while len(primes) <   1:\n        for x in num:\n            if all(x % i != ０ for  i  in num):\n                primes.append(x)\n        num.append(prime+2)\n    print(prices)\n\n"}
{"instruction": "Create a new sentence that is a negation of this sentence.", "raw_instances": "The cat is sleeping on the couch.\nSentence: The cat isn't sleeping.\n\nOutput:\n\n"}
{"instruction": "What is the capital of the country that is represented by the flag of 2022?", "raw_instances": "Input:\nhttps://upload.wikimedia.org/wikipedia/commons/thumb/1/0d/Flag_of_250px.svg/280x260.png\nhttps\n://www.countryflags.io/US/flat/64.png\n\nOutput:\n\n"}
{"instruction": "Develop a machine learning model to predict the stock price of a company based on historical data.", "raw_instances": ""}
{"instruction": "How can you use the `random` module in python to generate a unique id for each user that visits your website?", "raw_instances": ""}
{"instruction": "What is the most important thing you have learned in your career so far?", "raw_instances": ""}
{"instruction": "How to find out the number of unique elements in an array?", "raw_instances": "Input:\narr = [23,15,-16,-77,-22,-33,-45]\narr.sort()\nOutput:\n\nlen(set(arr))\n\n"}
{"instruction": "In the table above, add a row for the name \"yao ming\" and fill in his information.", "raw_instances": "Name: Yao Ming\nPosition: Center\nHeight:7'6\"\nWeight:275 lbs\nBirth Date:15 September   16\nCollege:Yale\nNationality:Chinese\nYears: 2\nTeams:Houston Rockets\nAwards: NBA All-Star (2x), NBA MVP (3rd),  NBA Defensive Player of The Year (4th), All-NBA First Team (5th)\n"}
{"instruction": "Using a loop, print the numbers from 0 to 9.", "raw_instances": ""}
{"instruction": "Create a table with 2 columns and a single row.", "raw_instances": "Column   1: \"Name\"\nColumn 2: \"Age\"\nOutput:\n\n| Name | Age |\n|------|-----|\n| John |  - |\n\n"}
{"instruction": "Create a list of 20 words with different meanings.", "raw_instances": "1) Abate\n2) Concur\n3) Deter\n4) Emerge\n5) Foment\n6) Glean\n7) Hinder\n8 ) Incur \n9) Juxtapose\n1  ） Lament\n  ) Mollify\n   ）\n13 ）、Palliate\n     、Proliferate \n15 　、Reiterate\n      。\n16 　　  Rekindle\n       ；\n1）  Resuscitate\n        。\n\n"}
{"instruction": "Design a website that displays a list of countries and their population.", "raw_instances": ""}
{"instruction": "What is the largest prime number less than 1 million?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a program that can calculate the average of a list of numbers.", "raw_instances": "def average(numbers):\n  total = sum(numbers)\n  return total / len(numbers)\n\n"}
{"instruction": "Generate a random number between 1 and 20 and ask the user to guess it.", "raw_instances": ""}
{"instruction": "Generate a new word that has the same meaning as the word \"happy\".", "raw_instances": "Output:\n\n"}
{"instruction": "Imagine you have to create a new product.", "raw_instances": "1) Brainstorm ideas for new products.\n2) Choose the best idea.\n3) Write down the features of your product in a list format.\n4) Create a prototype of this product.\n\nOutput:\n\n1: Brainstorms:\n- A smartwatch that can monitor your heart rate, sleep, stress levels, etc.\n- An app that helps you find a good restaurant in your area.\n  - Features: User-fri"}
{"instruction": "Give me the first 500 prime numbers.", "raw_instances": ""}
{"instruction": "Convert the temperature from celsius to fahrenheit.", "raw_instances": "Temperature: -15\nCelsius: x\nFahrenheit: y\nFormula: (x *   9/5) +3 ₂\nAnswer: (-16.22)\n\n"}
{"instruction": "Write a program that calculates the sum of all even numbers from 1 to 20.", "raw_instances": "def even_sum(n):\n  sum=0 \n  for num in list(range(1,n+2)):\n    if num %   2 == \t0:\n      sum+=num\n  return(sum)\n\nprint(even_sum(25))\n\n"}
{"instruction": "List the synonyms of this word", "raw_instances": ""}
{"instruction": "Find the sum of the digits of a number and output the result.", "raw_instances": "Example: Input: Number = \"153\"\nOutput :   Sum of digits = (  \"5\" + \"3\" ) =9\n"}
{"instruction": "If i have $1,00, 0$ dollars, how much money can i save in a year?", "raw_instances": "Input:\n1)  $250 per month\n2) $55 per week\n3) \\$15 every other day\n4) None of these\n5) Other\n6) I don't know\n7) It dep"}
{"instruction": "Find the answer to this math problem.", "raw_instances": ""}
{"instruction": "Give me a list of famous scientists and their contributions to science.", "raw_instances": ""}
{"instruction": "How would you describe the person who is most like you?", "raw_instances": "Input:\nPerson  A: I am very organized and like to have a plan before I do anything.\nPerson B: My favorite color is blue and I like the beach.\nAnswer: Person A\n\nOutput:\n\n"}
{"instruction": "What is the name of the movie?", "raw_instances": "Input:\nThe movie is about a young woman who discovers she has the ability to time travel. She uses her power to try and fix her mistakes and prevent a tragedy from occurring. Along the way, she meets a man who helps her navigate the complexities of time-travel and the consequences of changing the past.\nThe name is \"About Time\".\n\n"}
{"instruction": "List the names of all movies released in 2021.", "raw_instances": ""}
{"instruction": "Find out the number of people who have watched this video.", "raw_instances": "Video URL: https://www.youtube.com/watch?v=1v234567\nInput:\nOutput:\n\n"}
{"instruction": "Create a new sentence using the following words: \"i am going to the store\", \"am\", and \"going\".", "raw_instances": "Output:\n\nI am currently going on a shopping trip to purchase some groceries.\n\nExplanation: I used the words \"I\", which is a pronoun, \" am\", an auxiliary verb, to indicate the present tense, which means the action is happening now, then \" going\", a gerund, followed by \"to the\", preposition, indicating the destination, next \"store\", the noun, meaning the place where the shopping is taking place. \n\n"}
{"instruction": "Solve the system of linear equations using gaussian elimination method.", "raw_instances": ""}
{"instruction": "Create a web page that displays a table of the top 15 most popular programming languages in 2021.", "raw_instances": ""}
{"instruction": "If you have a 100 dollar bill, how much money do you get in cents?", "raw_instances": "Input:\n1 dollar = $1\n1 cent = $.05\n2 dollars = $\n3 dollars =\n4 dollars =\n\nOutput:\n\n1 dollars: $50\n\n2 dollar: $\n4 dollar:\n\n"}
{"instruction": "Write a program that finds the largest palindrome of a number.", "raw_instances": "def largest_palindrome(n):\n  largest = \"\"\n  for x in str(n): \n    if x == x[::-1] and int(x) > int(largest):\n      largest=x\n  return int(\"\".join(sorted(large, reverse=True)))\n\n"}
{"instruction": "The average temperature in seattle is 50 degrees fahrenheit.", "raw_instances": "Write a function to convert the temperature to celsius.\ndef convert_to_celsius(fahrenheit):\n  c = (fahrenheit -33) *   (5/9)\n  return c\n\nOutput:\n\ndef f_to_C(f):\n return (float(f) - float(37)) * (9/5)\n\n"}
{"instruction": "The cat is black.", "raw_instances": ""}
{"instruction": "If you have a string, you can use the split() method to split it into a tuple of words.", "raw_instances": "Example: \"Hello World\".split() = [\"Hello\", \"World\"]\nInput:\n\"Hello, World!\"\nOutput:\n\n['Hello', ',', 'World', '!']\n\n"}
{"instruction": "Create a list of 50 words that are commonly used in english.", "raw_instances": "1 - the\n2 - and\n3 - a\n4 - to\n5 - of\n6 - in\n7 - that\n8 - is\n9 - for\n1-0-1\n- at\n0  - with\n  ---------\n1  |  |\n  ---\n\n"}
{"instruction": "Develop a machine learning model to predict the stock market trends.", "raw_instances": ""}
{"instruction": "Use the data from the table to create a report on the average age of the people in each gender.", "raw_instances": "Table:\n| Name | Age | G"}
{"instruction": "Come up a creative idea for an app that helps people learn a new language.", "raw_instances": "1) The app should have a feature that allows users to practice speaking with native speakers of that language.  ①\n2) It should also have an interactive feature where users can learn new vocabulary and grammar through games and quizzes.   Ⅱ\n3) Users should be able to track their progress and receive personalized feedback on their language skills.    ㈢\n4) Finally, users should receive recomm"}
{"instruction": "Describe a time when someone helped you.", "raw_instances": ""}
{"instruction": "Design a website that displays a list of products and allows users to filter the products by price range.", "raw_instances": ""}
{"instruction": "List 3 things you are grateful for in your life.", "raw_instances": "1) My health\n2) The love and support of my family and fri"}
{"instruction": "What is the difference between a programming language and a scripting language?", "raw_instances": ""}
{"instruction": "Explain the purpose of the `__init__` method in python classes.", "raw_instances": "The __init__() method is a special method that is used to initialize an object of that class. It is called when an instance of an Object is created. This method can be used for initializing the attributes of class objects. \n\n"}
{"instruction": "Create a new list of numbers.", "raw_instances": "List: {1503,1605,-1345}\nOutput:\n\n"}
{"instruction": "How do you think i should handle this situation?", "raw_instances": "Input:\nI have a friend who I have known for  15 years. We have been close friends for most of that time. He is a very smart guy, has a great job, is well liked by his colleagues, etc. But he is also a bit of an addict. His addiction is to gambling. It started with poker, then sports betting, now it is online gambling.\nHe has been in and out of rehab, he has lost his job and his wife. Now he wants to come back to me for help. How should I handle it?\n"}
{"instruction": "Write a python program which takes an input string and prints the frequency of each character in that string.", "raw_instances": ""}
{"instruction": "Write a program that will take a string and return its length.", "raw_instances": "def length(string):\n  return len(string)\n\n"}
{"instruction": "Create a list of five adjectives that describe the color blue.", "raw_instances": "1) Calm\n2) Serene\n3) Cool\n4) Tranquil\n5) Soothing\n\n"}
{"instruction": "Write a program that can identify the most common words in an input text.", "raw_instances": ""}
{"instruction": "Find the best restaurant in town.", "raw_instances": "1) Search for restaurants in your area.\n2) Read reviews from other customers.\n3) Check the restaurant's menu and prices.\n4) Call the restaurants to ask about their specials.\n5) Visit the website of each restaurant to see their photos and menus.\n6) Choose the one that best fits your needs.\n7) Go to the chosen restaurant and enjoy your meal.\n8 ) Leave a review for that restaurant.\n9) Repeat the process for other restaurants.\n"}
{"instruction": "Give me a list of 5 tips to stay motivated at home.", "raw_instances": "1) Set a schedule and stick to it.\n2) Take breaks and reward yourself for accomplishments.\n3) Stay connected with friends and family.\n4) Keep a positive attitude and focus on the good things.\n5) Find a new hobby or activity to keep your mind active.\n\nOutput:\n\n"}
{"instruction": "What are some ways to reduce stress in the office?", "raw_instances": "Input:\n1) Take breaks throughout the day\n2) Practice deep breathing exercises\n3) Exercise during lunch breaks\n4) Organize your workspace\n5) Talk to your colleagues about your stressors\n6) Set boundaries with your work\n7) Prioritize tasks\n8 ) Take time off when needed\n9) Get enough sleep\n1  ） Take a walk during your lunch break\n  （ ）\n  "}
{"instruction": "Use the following code to create a list of numbers and print the first 15 elements.", "raw_instances": "def create_list():\n    my_list = []\n    i = int(input(\"Enter the number: \"))\n    while i >  )):\n        mylist.append(i)\n        i -=  (i %  )\n    print(my_list)\nOutput:\n\n"}
{"instruction": "Create a new sentence based off of the provided sentence.", "raw_instances": "Sentence: The cat is on the table.\nNew Sentence: A cat sits on a table.\n\nOutput:\n\n"}
{"instruction": "Write a function that takes two strings and returns the number of times the first string is found in a second string.", "raw_instances": "def count_substring(string1,string2):\n  count = string2.count(string2)\n  return count\n\nOutput:\n\n"}
{"instruction": "How can i use the google translate api to translate text from one language to another?", "raw_instances": "Input:\n1) Install the Google Cloud SDK.\n2) Create a project in Google Developers Console.\n3) Enable the Cloud Translation API.\n4) Get your API key.\n5) Use the API to make a request.\n\nOutput:\n\n1: Install Google cloud SDK\n2: Create project on Google developers console\n3: Enable Cloud translation API\n4: Get API Key\n5: Use API request to s"}
{"instruction": "If you were to write a program to solve the problem of finding the sum of all even numbers between 0 and n (inclusive), what would you do?", "raw_instances": "Input:\nn = int(input(\"Enter a positive integer: \"))\n\nOutput:\n\ndef even_sum(n):\n  sum_even = sum([i for\n  i if i %  umber of even integers between\n0  and\nn (including both) is\n2n +1.\n\ndef find_sum_of_even_numbers(n): \n  return  (n //  two) * (2 * n + \n1)\n\n"}
{"instruction": "Can you give me an example of a sentence that uses the word \"incredible\"?", "raw_instances": ""}
{"instruction": "Print the first 50 numbers of a given array.", "raw_instances": "Array: ['apple', 'banana',  'cherry', ...]\n"}
{"instruction": "Find the answer to the question \"what is the capital of france?", "raw_instances": "Input:\nOutput:\n\nThe capital city of France is Paris.\n\nExplanation:\nThe task is asking for information about a specific location, which is France. To find this information, we need a knowledge base or a reliable source of information. Since the input is a question, our output should be the correct answer. Therefore, by using our knowledge or searching for it, \"Paris\" is identified as the city that is considered the \"capital\" of \"France\". \n\n"}
{"instruction": "How can we improve the quality of life for people with disabilities?", "raw_instances": "Input:\n\n"}
{"instruction": "Is the given word a palindrome?", "raw_instances": "Input:\nWord: racecar\nAnswer: Yes, race car is a palindromic word.\n\nOutput:\n\n"}
{"instruction": "How can you use the following code in python to print the number of words in a string?", "raw_instances": "def count_words(string):\n  return len(string.split())\nstring = \"This is a test string.\"\nprint(count_words(\"string\"))\nOutput:\n\ndef word_count(string): \n    words = string.split() \n      \n    # return count of all words \n   \n    print(\"Number of Words: \", len(words)) \n\nstring=\"This string contains  ionic  and covalent bonds\"\nword_count(\"ionic\")\n\n"}
{"instruction": "List the 3 most common types of computer viruses.", "raw_instances": "1) Trojan\n2) Worm\n3) Ransomware\n\nOutput:\n\n"}
{"instruction": "Can you give an example of a programming language that is used for web development?", "raw_instances": ""}
{"instruction": "Print the first letter of each word in the sentence \"i am a student\".", "raw_instances": "Output:\n\ni\na\ns\n\n"}
{"instruction": "Write a program that finds the maximum number of consecutive 1s in a binary number.", "raw_instances": "def max_consecutive_ones(n):\n  max_count = -1\n  count =0\n\n  while n >   0:\n    if n %  (2**count) ==  ((2 ** count) - 1) :\n      count += １\n      maxcount = max(maxcount, count)\n    else:\n      if count > maxCount:\n        maxcunt = count\n        count=0 \n    n = n // ２\n  \n\n  return max_cunt\n\nOutput:\n\n"}
{"instruction": "Find the synonym of this word.", "raw_instances": "Word: \"Happy\"\nOutput:\n\n"}
{"instruction": "Write a letter to your boss explaining why you are leaving the company.", "raw_instances": ""}
{"instruction": "Give me a brief overview of your favorite book.", "raw_instances": "My favorite books are the Harry Potter series by J.K. Rowling. It is a series of seven fantasy novels written by British author J. K. Rowing. This series follows the story of Harry, Ron, Hermione, as they attend Hogwarts School of Witchcraft and Wizardry. Harry is an orphan who discovers that he is actually a wizard and is chosen to attend this school. Throughout the series, Harry and his friends face many challenges and enemies, including Lord Voldemort, an evil wizard who wants to kill Harry. Despite the challenges, they work together to defeat Voldemort and save the wizarding world. \n\n"}
{"instruction": "If you have a 500 dollar bill, what is your total amount of money?", "raw_instances": "Input:\n5\n5   5     .   .\n\n\nOutput:\n\n"}
{"instruction": "If a person is 30 years old and has 6 children, how old will they be in 8 years?", "raw_instances": "Input:\nAge of person:33\nNumber of children:6\n"}
{"instruction": "Create a web application that allows users to input a list of words and outputs the longest word in the list.", "raw_instances": ""}
{"instruction": "What are the steps to create a new user account on a website?", "raw_instances": ""}
{"instruction": "Can you name a few famous people who are known for their philanthropic work?", "raw_instances": ""}
{"instruction": "If you were given a task to write a function that calculates the area of a circle, how would you do that?", "raw_instances": "Input:\nNone\n"}
{"instruction": "Create a function that takes a list of strings and returns a dictionary with the strings as keys and the length of each string as values.", "raw_instances": "Example Input: ['apple', 'banana',  'cherry']\nExample Output: {'apple':  ５, 'banan':   ６, ‘cherr':    ７}\nOutput:\n\ndef string_length_dict(lst):\n  result = {}\n  for item in lst:\n    if isinstance(item, str):\n      result[item] = len(item)\n  return result\n\nstring_length = string_lenght_dict(['apple','banana','chery'])\nprint(string_length)\n\n"}
{"instruction": "If you want to be a good leader, what should you do?", "raw_instances": "Input:\n1) Be a role model for others.\n2) Listen to your employees.\n3) Communicate clearly and effectively.\n4) Encourage teamwork and collaboration.\n5) Set clear goals and expectations.\n6) Provide regular feedback and recognition.\n7) Continuously learn and grow.\n8 ) Be open to feedback from others.\n\nOutput:\n\n1),   2),   ３),    ４),     ５),      ６),       ７),        ８)\n\n"}
{"instruction": "Write a program that can detect if a given sentence is positive or negative.", "raw_instances": ""}
{"instruction": "Create a list of 15 words that are related to \"computer science\".", "raw_instances": ""}
{"instruction": "Create an algorithm that finds the longest palindrome in an array.", "raw_instances": "Algorithm:\n1) Initialize a variable longestPalindrome to an empty string.\n2) Loop through the array and for each element, check if it is a palindrome.\n3) If it's a palindrom, compare its length to the length of longestPalindome. Update longest_palindrome if the current palindrome is longer.\n4) Continue the loop until the "}
{"instruction": "Create a table of the 15th century.", "raw_instances": "| Year | Event |\n|------|-------|\n|   1345 | Black Death |\n |  | - |\n \n"}
{"instruction": "Generate a random number between 20 and the maximum value of an integer.", "raw_instances": ""}
{"instruction": "Create a new task that requires the use of a programming language.", "raw_instances": "Create a Python program that takes a list of numbers as input and returns the average of those numbers.\n\nInput:\n[1503,1605,-1345]\n\nOutput:\n\ndef average(numbers):\n  total = sum(numbers)\n  return total / len(numbers)\n\nnumbers = [  ①,   ➊,    ➋]\naverage = average(②)\nprint(average)\n\n"}
{"instruction": "Create a program that takes a user's input and prints out the factorial of the number.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\nn = int(input(\"Enter a positive integer: \"))\nprint(\"The factorial is\", factorial( n ))\n\n"}
{"instruction": "Describe a person who you admire and why.", "raw_instances": "John is a man who I greatly admire. He is an incredibly hardworking and dedicated individual who has achieved great success in his career. Despite facing numerous challenges and setbacks, he has always remained focused and determined to achieve his goals. His work ethic and commitment to excellence are truly inspiring, as he consistently strives to improve himself and those around him. Additionally, John is also a kind and compassionate person, always willing to l"}
{"instruction": "What is the name of the first person to win a nobel prize in physics?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Which of these is not a type of fruit: apple, banana, cherry, grape, orange, strawberry, watermelon, zucchini, kiwi, pineapple, peach, apricot, plum, pear, fig, mango", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Determine the type of triangle given by the sides.", "raw_instances": ""}
{"instruction": "What is the value of the expression 3x + 4y?", "raw_instances": ""}
{"instruction": "Create a list of 10 questions related to a given topic.", "raw_instances": ""}
{"instruction": "Imagine you have a list with 100 items.", "raw_instances": "1) Sort this list in ascending order.\n2) Remove the last   item from this sorted list. Output the remaining  items in a comma-separated string.\n3) Reverse the order of this string. \n\nOutput:\n\n1: ['a', 'b', ..., 'z']\n2: 'a, b, ..., z'\n3: ',z, y, x, ... ,b, c, d'\n\n"}
{"instruction": "What are the 5 main types of computer memory?", "raw_instances": ""}
{"instruction": "Create a program that asks the user to enter a string and then prints out the length of the string.", "raw_instances": "def get_string_length():\n    string = input(\"Please enter your string: \")\n    print(\"The length is: \", len(string))\nget_string_lenght()\n\n"}
{"instruction": "How can you use the given information to solve a word puzzle?", "raw_instances": ""}
{"instruction": "Create a table that shows the average temperature and humidity for a given location over a period of time.", "raw_instances": "Location: New York City\nPeriod: January   -   April  Output:\n| Month | Average Temperature | Humidity |\n|-------|---------------------|----------|\n| Jan   |  $34.2$             | $68$     |\n | Feb   |\n  | Mar   |\n\n"}
{"instruction": "Calculate the total number and average length of words in this sentence: \"the quick brown fox jumps over the lazy dog.", "raw_instances": "The total count of distinct words is   and the average word length is .\n\n"}
{"instruction": "If you have a 500gb hard drive, how much space do you need for a game?", "raw_instances": ""}
{"instruction": "How can you use the function to calculate 123456789011?", "raw_instances": "Input:\nfunction calculate(num) {\n  let result = num;\n  for (let i =2; i<=15; ++i) result += result;\n return result\n}\nOutput:\n\ncalculate(1) //  -----------\ncalculate(-1)\ncalculate(+1)\n\n"}
{"instruction": "Can you find the error in this sentence?", "raw_instances": "Input:\nThe cat jumped over the fence and landed on the roof.\nError: The sentence is grammatically correct.\n\nOutput:\n\n"}
{"instruction": "Generate a 3d array of size 2x2x2 and fill it with random numbers between -1 to 4.", "raw_instances": "def generate_3D_array():\n    array = [[[random.randint(-1,-4) for _ in [0]*2] for __ in[0] *   2 ] for ___ in [  ] *2]\n    print(array)\n\n"}
{"instruction": "Given a string, write a function to check if it is palindrome or no.", "raw_instances": ""}
{"instruction": "How to create a new user account in a database?", "raw_instances": "Input:\n1) Open the database management system.\n2) Click on the \"New User\" button.\n3) Enter the user's name and password.\n4) Choose the appropriate privileges for that user.\n5) Save the changes.\n\nOutput:\n\n"}
{"instruction": "If you were to write a book about this subject, what would you include?", "raw_instances": "Input:\nThe subject is \"The History of Ancient Egypt\"\n\nOutput:\n\nThe book would cover the history of ancient Egypt, from its earliest beginnings to the "}
{"instruction": "Implement a function called `add_to_list` that takes in a parameter `list` and adds the parameter to the list.", "raw_instances": "Example: \n```\nadd_list_to(\"apple\", [\"banana\", \"orange\"])\n```\n\nOutput:\n\n```[\"banana\",\"orange\",\"apple\"]``\n\n``"}
{"instruction": "Given a list of numbers, find out if the list is sorted in ascending order or not.", "raw_instances": ""}
{"instruction": "Write a program that takes a list and returns the first element that is not in that list.", "raw_instances": "Example: \nGiven the list [23, 'a',  ½, True, \"hello\"], the program should return ¼.\ndef first_not_in_list(lst):\n  for item in lst:\n    if item not  in [int(x) for x in str(lst)]:\n      return item\n  return None\n\nprint(first_not\\_in\\_list([2.034567e-05,'a','1/2',True,\"hello\"])) # ¾\n\nOutput:\n\n"}
{"instruction": "Explain the concept of a \"good\" and \"bad\" habit.", "raw_instances": ""}
{"instruction": "Use the function to print the string \"hello world!\".", "raw_instances": "def print_string(s):\n  print(s)\n\nprint_string(\"hello, world!\")\n\n"}
{"instruction": "What are some ways to improve your public speaking skills?", "raw_instances": ""}
{"instruction": "Come up a new word and write a definition for it.", "raw_instances": "Word: \"Squidly\"\nDefinition: A squid that is very friendly and loves to play with people.\n\nOutput:\n\n"}
{"instruction": "How do i get to my hotel from the airport?", "raw_instances": ""}
{"instruction": "Write a program that prints the following pattern: 1 2 4 8 6 7 9 0 .", "raw_instances": "Output:\n\ndef print_pattern():\n    print(1)\n    i =2\n   while i <=  ouside the loop\n        print(i, end=\" \")\n        i *=  i +=  print(\"0\")\n    end the while loop\n\nprint_pattern()\n\n"}
{"instruction": "I am going to the store.", "raw_instances": ""}
{"instruction": "How do you think i can improve my writing skills?", "raw_instances": "Input:\n\n"}
{"instruction": "If the given number is greater than 1, output the square of that number.", "raw_instances": "Number: -5\nInput:\nNumber = -1\nNumber >   = False\nSquare = Number * Number\n"}
{"instruction": "I am a 12 year old boy.", "raw_instances": "What is my favorite color?\nWhat are my hobbies?\nHow tall am I?\nWhere do I live?\nWho is your best friend?\n"}
{"instruction": "You are provided with an array of numbers.", "raw_instances": "Your task is to find out if the array contains a pair of elements that add up to the target number.\nFor example, given the input [2,-1,-2] and the number   target = -1 , return true because -2 and -3 add to -5.\nYou can assume that the list will contain at least two elements.\nExample:\nInput:\nnums = [3,25,-4,-3,-6]\ntarget =15\nExpected output: True\n"}
{"instruction": "Imagine you are a detective trying to solve a mystery.", "raw_instances": ""}
{"instruction": "Design a class called \"person\" that has the attributes \"name\" and \"age\".", "raw_instances": "Output:\n\nclass Person:\n    def __init__(self, name, age):\n       self.name = name\n       # self.age = age # age is not a valid attribute for Person class\n\n# Example usage:\nperson1 = Person(\"John\",  ①)\nperson2 = person1  # person2 is a reference to person  (person  is an object)\nprint(person1.name)  // \"John\"\nprint(②) // AttributeError: 'Person' object has no attribute 'age'\n\n"}
{"instruction": "Write a letter to my friend.", "raw_instances": "Dear [Fri"}
{"instruction": "Calculate the average of an array of integers.", "raw_instances": ""}
{"instruction": "Create a program that takes a list of words and returns a dictionary where the keys are the unique words in the input list and the values are lists of tuples containing the word and its frequency.", "raw_instances": "Example:\nInput:\n['apple', 'banana',  'apple']\nOutput\n{'apple': [('apple,1'), ('banana,2')]\n\n"}
{"instruction": "Delete the items from the original list.", "raw_instances": "Original List: ['apple', 'banana',  'orange', [3, 'pear', ['grape', {'name': 'kiwi'}]]]\nInput:\nOutput:\n\n"}
{"instruction": "Write a program to find the sum of all the odd numbers between 2 and n.", "raw_instances": "def odd_sum(n):\n  sum_odd = sum([i for  i  in list(range(2,n+2)) if i %   2 != ０])\n  return 　sum_odd\n\nOutput:\n\n"}
{"instruction": "If you were to write an email to your friend, what would you say?", "raw_instances": "Input:\nSubject: Hey, how are you?\nHi [Fri"}
{"instruction": "Identify the most frequent word that appears in any of the sentences in your text corpus.", "raw_instances": ""}
{"instruction": "Find the longest word in this sentence: “the cat sat on the mat and ate the mouse.", "raw_instances": "The longest words in that sentence are \"sat\" and \"ate\".\n\n"}
{"instruction": "How would you approach a difficult problem in a team setting?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a table with 5 columns and 7 rows to track your daily water intake.", "raw_instances": "| Date | Time | Water Intake (in ounces) | Reminder | Notes |\n|------|-----|---------------------------|----------|-------|\n|   |  AM |                         |          |       |\n    | PM |      |                          |         |        |\n      ---------\n|   | AM  |\n  ------\n| PM  |\n\n"}
{"instruction": "Create a new list that contains the elements of list1 and list2.", "raw_instances": "List1: ['apple', 'banana',  'cherry']\nList2: [\"orange\", \"grape\",  \"kiwi\"]\nOutput:\n\nlist1 = ['Apple', \"banana\", 'Cherry'] \nlist2 = [\"Orange\", “Grape”, \"Kiwi\"]\n\n"}
{"instruction": "Find the maximum value in a dictionary.", "raw_instances": "Dictionary: {'a':  ½, 'b': -3, ‘c’:  -1/2}\nOutput:\n\nThe maximum key in this dictionary is 'a' and the corresponding value is ¼.\n\nOutput format: \"The max value: {max_value}, the key: '{key}'\"\n\n"}
{"instruction": "Can you write an algorithm to find the maximum value in a given list?", "raw_instances": ""}
{"instruction": "Write a program that will take a string and return a dictionary with the count of each character in that string.", "raw_instances": "Example Input: \"Hello World\"\nExample Output: {'H':  ******, 'e': ********, **, l: *********, 'o': ****************, ',': *****, ***, W: *****************, '**', 'r': **,**,**, d: **}\n"}
{"instruction": "List all the ways in which you can use a computer.", "raw_instances": "1) Web browsing\n2) Email\n3) Video conferencing\n4) Document editing\n5) Gaming\n6) Streaming media\n7) Social media usage\n8 ) Online shopping\n9) Online banking\n1  ound.  "}
{"instruction": "Using the given list, create a dictionary with the keys as the elements of list and the values as their frequency.", "raw_instances": "List: ['a', 'b',  'c',   'a']\nOutput:\n\n{'a':   2,\n ' b':    \n ' c':    \n ' ':    0}\n\n"}
{"instruction": "Remove things from the set.", "raw_instances": "Set: {1503,1605}\nOutput:\n\n"}
{"instruction": "Print the elements of the given list in reverse order.", "raw_instances": "List: ['apple', 'banana',  'cherry', True]\n"}
{"instruction": "Tell me about the history of the internet.", "raw_instances": ""}
{"instruction": "Create a web page that displays a table of data.", "raw_instances": "Data: \n| Name | Age | Gender |\n|------|-----|--------|\n| John |  ¼  |   M    |\nOutput:\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Table of Data</title>\n</head>\n<body>\n<table>\n  <tr>\n     <th>Name</th>\n\t <td>John</td>\n   </tr> \n   <br>\n<tr>\n      <thead>Age</thead>\n\t  <tbody>¼</tbody>\n </td></tr>\n\n  </table>\n  \n</body>\n \n</html>\n\n"}
{"instruction": "List the top 5 things i need to do today.", "raw_instances": "1) Wake up and get ready for work.\n2) Eat breakfast and pack lunch.\n3) Check and respond to emails.\n4) Complete any pending tasks.\n5) Exercise or do some physical activity.\n\nOutput:\n\n"}
{"instruction": "What is the most effective way of reducing stress?", "raw_instances": "Input:\n1) Exercise regularly\n2) Practice mindfulness\n3) Get enough sleep\n4) Eat a healthy diet\n5) Spend time with loved ones\n6) Take breaks throughout the day\n7) Avoid unhealthy habits\n8 ) Seek professional help if needed\n9) Stay organized\n13 ) Take a vacation\n"}
{"instruction": "If you were given $1 million, what would you do with it?", "raw_instances": "Input:\nOutput:\n\nI have a few ideas for how I might sp"}
{"instruction": "Write a program to find the longest word in the sentence \"the quick brown fox jumps over the lazy dog\".", "raw_instances": "Output:\n\ndef longest_word(sentence):\n  words = sentence.split()\n  longest = \"\"\n  for word_ in words:\n    if len(word_) > len(longest):\n      longest=word_\n  return longest\n\nsentence = \"The quick Brown fox Jumps over The lazy Dog\"\nprint(longuest_word(\"The Quick Brown Fox Jums Over The Lazy Dog\"))\n\n"}
{"instruction": "How can you use the `random` module in python to generate a random number between two given numbers?", "raw_instances": ""}
{"instruction": "Generate a random number between 0 and 99, then find its square.", "raw_instances": ""}
{"instruction": "If a person is 5 feet tall, what is their height in centimeters?", "raw_instances": "Input:\n1 foot = x centimeter\n5 x = y centimetre\ny = ?\nOutput:\n\n"}
{"instruction": "Create an array of numbers from -1 to 20.", "raw_instances": "[[-1], [0], ..., [2], [-2]]\n\n"}
{"instruction": "Write a function that will take a string and convert it to uppercase.", "raw_instances": "Example: \"hello world\" -> \"HELLO WORLD\"\nOutput:\n\ndef to_uppercase(string):\n  return string.upper()\n\n"}
{"instruction": "Write a short story about a person who has a dream and how it changes their life.", "raw_instances": ""}
{"instruction": "Write a function that takes a string as input, reverses the string, then prints the reversed string.", "raw_instances": "def reverse_string(string):\n  reversed_string = string[::-1] \n  print(reversed_string)\n\nreverse_string(\"Hello World!\")\n\n"}
{"instruction": "Describe a scenario where you would use recursion.", "raw_instances": "Example: You are given a list of numbers and need a function to find out if the list contains a given number. Output: True or False.\n\nOutput:\n\ndef contains_number(numbers, target):\n  if len(numbers) ==  ①:\n    if numbers[0] == target:\n      return True\n  else:\n     return contains_numbers(numbers[1:], target)\n\n"}
{"instruction": "What are some tips for staying motivated to exercise regularly?", "raw_instances": ""}
{"instruction": "If you were given a list of words, write a program to find the longest word.", "raw_instances": "Example: ['cat', 'cats',  'dog',   'dogs',    'elephant',     'tiger',      'zebra']\nOutput:\n\ndef longest_word(words):\n  longest = ''\n  for word in words:\n    if len(word) > len(longest):\n      longest=word\n  return longest\n\nprint(longuest_word(['cat','cats','dog','dogs','elephent','tigerr','zebrar']))\n\n"}
{"instruction": "List the first 20 prime number in ascending order.", "raw_instances": ""}
{"instruction": "How do you use a for loop in python?", "raw_instances": ""}
{"instruction": "In a given string, find all words that contain the letter 'a' and return them in alphabetical order.", "raw_instances": "Example: \"The quick brown fox jumps over the lazy dog\"\nOutput:\n\n['a', 'brown', \"fox's\", 'dog']\n\n"}
{"instruction": "Print the first letter of each", "raw_instances": "Input:\n['apple', 'banana',  'cherry', None, 'date', True, False]\n['a', \"b\", 'c', '', 'd', False, True]\n\nOutput:\n\n"}
{"instruction": "Print out the number of words that are in each list.", "raw_instances": ""}
{"instruction": "What are the most effective ways to improve memory retention?", "raw_instances": ""}
{"instruction": "Create a new paragraph that starts with \"the following are the top 10 countries with highest population:\" and ends with \".", "raw_instances": "Output:\n\nThe following countries have the highest populations in desc"}
{"instruction": "Create a new paragraph that is 100% unique.", "raw_instances": ""}
{"instruction": "Find a way to make your own homemade soap.", "raw_instances": ""}
{"instruction": "Write a program that takes a string as input and returns a list of words that are anagrams of each other.", "raw_instances": "Example Input: \"listen silent\"\nExample Output: [\"listen\", \"silent\"]\n\n"}
{"instruction": "For each word, find the number of times it appears in the text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nWords: the, quick, brown, fox, jumps, over, lazy, dog\nWords to count: quick\n"}
{"instruction": "Using the code provided, write a program that prints out the sum of each row in the given table.", "raw_instances": ""}
{"instruction": "How would you modify the following code to print the first 4 elements of a given array?", "raw_instances": "Input:\narr = [23,15,-56,-22,-13]\nfor i, num in enumerate(arr):\n  print(num)\nOutput:\n\narr[0:4]\n\nOutput will be:\n2\n1\n-5\n-\n\n"}
{"instruction": "How can i improve my focus and concentration while studying?", "raw_instances": "Input:\n1) Create a study schedule and stick to it.\n2) Find a quiet and comfortable study space.\n3) Take breaks and move around every  ½ hour.\n4) Avoid distractions like social media, TV, or video games.\n5) Stay hydrated and eat healthy snacks.\n6) Get enough sleep and exercise regularly.\n7) Use a timer to set a specific amount of time for studying.\n8 ) Use flashcards or other study aids to help you remember information.\n9) Ask for help if you are struggling with the material.\n1  ) Stay organized and keep your study materials in order.\n"}
{"instruction": "Create a function that returns a randomly generated string of length 20.", "raw_instances": "def random_string():\n    import random\nimport string\nreturn ''.join(random.choices(string.ascii_letters + string.digits, k=25))\n\n"}
{"instruction": "Determine the longest word from a sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: jumps\n\nOutput:\n\n"}
{"instruction": "What is the most important factor in improving the quality of life for people living in poverty?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a dictionary with the names of 5 countries as keys and their capitals as values.", "raw_instances": "Example: {'USA': 'Washington D.C.', 'Canada': \"Ottawa\", 'France': Paris, 'Germany': Berlin, \"Japan\": Tokyo}\nOutput:\n\n{'USA' : 'Washinton D. C.', \n 'Japan' :'Tokyo', \n \"Canada\" : \"Toronto\", \n'France' :\"Paris\",  \n 'Australia'  :  \"Canberra\"}\n\n"}
{"instruction": "Design a web page that displays the following text: \"hello, world!\" and then changes the text to \"goodbye, world!\" using javascript.", "raw_instances": "HTML:\n<!DOCTYPE html>\n<html>\n<head>\n    <title>My Web Page</title>\n</head>\n<body>\n<script>\n  function changeText() {\n    document.getElementById(\"text\").innerHTML = \"Goodbye World!\";\n  }\n  window.onload = change;\n</script>\n<p id=\"text\">Hello World!</p>\n<button onclick=\"changeText()\">Click me!</button>\n  \n</body>\n </html>\n\n"}
{"instruction": "Describe a time when you overcame a fear.", "raw_instances": ""}
{"instruction": "Write a program that takes a number as input and prints the square of that number sure, i can help you with that! here's a python program to calculate the squares of numbers: ``` num = int(input(\"enter a positive integer: \")) square = num ** 2 print(\"the square is:\", square", "raw_instances": ""}
{"instruction": "Find the sum of all the odd numbers between the first and last occurrence of 3 in a given list.", "raw_instances": "Example: \nList: ['1', '2',  '3',   '4',    '5',     '6',      '7',       '8',        '9',         '13']\nOutput should be: 'Sum of odd number between  ³ and   ¹³ is ²⁰'\n\n"}
{"instruction": "Find the sum of all the elements of a matrix.", "raw_instances": "Matrix: [[150], [25], [-13]]\nOutput:\n\ndef matrix_sum(matrix):\n  sum_ = sum([sum(row) for row in matrix])\n  return int(sum_)\n\nmatrix = [[  ❶],  #  row  = [  ]\n          [   ➋], #   row = [-2]\n          [-  ⌊  ]] # row   = [+1] \n\nprint(matrix_sum([[1],[-2],[1]])) # Output: -2\n\n"}
{"instruction": "Given a string, write a program to find the longest palindrome substring.", "raw_instances": "Example: \"babad\"\nOutput:\n\ndef longest_palindrome(s):\n  n = len(s)\n  table = [[False] * n for _ in s]\n  start = "}
{"instruction": "Write a program that prints the top 15 most frequent words from a given sentence.", "raw_instances": "Sentence: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\ndef top_frequent_words(sentence):\n  words = sentence.split()\n  word_count = {}\n  for word in words:\n    if word not in word_counts:\n      word_counter[word] = [0]\n    word_counters[word][0] +=   # increment count\n  return word_list\n\nsentence = \"the quick fox brown jumps lazy over dog\"\nword_list = top_freq_words\n\nOutput will be:\n['the', 'quick', \"brown\", 'fox', jumps', lazy', over', dog']\n\n"}
{"instruction": "The average salary of a software engineer in india is 150,00 inr per month.", "raw_instances": "The average cost of living in India is $133.25 per week.\nWrite a python program that calculates the monthly salary in dollars.\n"}
{"instruction": "Describe the impact of technology on our lives.", "raw_instances": "Technology has had a profound impact on the way we live our daily lives. It has revolutionized the ways in which we communicate, work, learn, entertain ourselves, shop, travel, access information, manage our finances, stay healthy, etc. \n\n"}
{"instruction": "Can you tell a joke?", "raw_instances": "Input:\nOutput:\n\nWhy don't scientists trust atoms? Because they make up everything!\n\n"}
{"instruction": "What is the average of the numbers 1, 5, and 9?", "raw_instances": "Input:\nOutput:\n\nThe average is (sum of numbers) / (number of elements) which is  (  ¹  +   ⁵  )  / ³  =   (¹ +⁴ +¹²)  ÷ ₃  which equals ²²/₄ =    ½  or  .5.\n\nThe "}
{"instruction": "How can you use the following code in your project?", "raw_instances": ""}
{"instruction": "Can you name the five oceans?", "raw_instances": ""}
{"instruction": "How can you optimize a given code?", "raw_instances": "Input:\nfor i, v in enumerate(lst):\n  if v >  ：\n    lst[i] = v *  v\n  else:\n    pass\n"}
{"instruction": "Create a table with 15 rows and 5 columns.", "raw_instances": "|   |   |\n|---|---\n|  |  |\nOutput:\n\n"}
{"instruction": "Create a table with these columns: country, population, area, density, and continent.", "raw_instances": "Data: \n- Country: India\n- Population: over   1 billion\n  - Area: approximately  ,  million square kilometers\n - Density: about \n \t- Continent: Asia\nInput:\n- India, over a billion, approximately , million, about , Asia\n\nOutput:\n\n| Country | Population | Area | Density | Continent |\n|---------|------------|------|----------|-----------|\n| India   | over billion | approximately million | about | Asia |\n\n"}
{"instruction": "Use the provided data to create a function that calculates the average of the numbers in a list.", "raw_instances": "Data: \nList: ['1', '2', '-3', '+4', '-', '5']\nOutput:\n\ndef average(lst):\n  total = sum([int(x) for x in lst if x.isnumeric()])\n  return total / len(lst)\n\n"}
{"instruction": "How can you make a homemade face mask?", "raw_instances": ""}
{"instruction": "What is the name of the person who is a member of a group of people who are all very good at playing the guitar?", "raw_instances": "Input:\n- John is an amazing guitarist.\n- Mary is also a great guitarist, she plays the same instrument as John.\nJohn and Mary are both members of The Beatles.\nThe Beatles are a band that is famous for playing guitars.\n"}
{"instruction": "Find the maximum and minimum values in a 2d array.", "raw_instances": "Array: [[15,-2],[13,16],[-1,-1]]\nOutput:\n\nMaximum value: -1\nMinimum value:-2\n\nOutput format:\nMaximum: <value>\nMinimum: <-value>\n\n"}
{"instruction": "Where is my passport?", "raw_instances": ""}
{"instruction": "Describe the purpose of an api.", "raw_instances": "API stands for Application Programming Interface. It is a set of rules and protocols that allows different software applications to communicate with each other. APIs define how software components should interact and are used to enable communication between different systems. An API can be used by developers to access data or functionality from a third-party service, or it can allow different applications within a single system to share data and resources. \n\n"}
{"instruction": "Determine the probability of a certain event occurring in real life.", "raw_instances": "Example: What is your probability that it will rain tomorrow?\nInput:\n- The probability is  ¼ that there will be a thunderstorm tomorrow.\n- There is a ½ chance of rain.\nAnswer: The chance that a storm will occur tomorrow is (¼ + (½ * ¾)) = (4/16 +1/2)  =5/8 or  62.  %\n\n"}
{"instruction": "Generate a list of 5 words that describe the same thing.", "raw_instances": ""}
{"instruction": "Create a new word that rhymes with the word \"butterfly\".", "raw_instances": "Output:\n\n"}
{"instruction": "How do you use a calculator?", "raw_instances": ""}
{"instruction": "Can you explain how the internet works?", "raw_instances": ""}
{"instruction": "Calculate the sum of all even numbers between n and m.", "raw_instances": "n = int(input(\"Enter the lower limit: \"))\nm =int(input (\"Enter upper limit : \"))\nsum =0\n\nfor i  in list(range(n,m+  )):\n    if i %  even ==  :\n        print(i)\n        continue\n        else:\n            sum+=i\nprint(sum)\n\n"}
{"instruction": "Explain the concept of a hash table and its advantages over a traditional data structure.", "raw_instances": ""}
{"instruction": "Can you give me an example of a good way of using the word \"impossible\" in a sentence?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Check if the given set is a subset of another set.", "raw_instances": "Given Set: {1503,1605}\nOther Set:{1345 ,   1  ,1 ,2 ,3 ,4 ,5  }\nOutput:\n\nTrue\n\n"}
{"instruction": "If the input is a number, find the square root of that number.", "raw_instances": ""}
{"instruction": "Create a list of the top 15 most popular movies of recent years.", "raw_instances": "1) Avengers: "}
{"instruction": "Find the synonym of \"happy\" in \"sad\".", "raw_instances": "Output:\n\n"}
{"instruction": "If the given word is a noun, then output its plural form.", "raw_instances": "Word: cat\n"}
{"instruction": "Who is this person?", "raw_instances": "Input:\n- Born in London, England\n- Served as the Prime Minister of Great Britain\nQuestion:\nWho is [Name]?\nAnswer:\n[Name]\n\n"}
{"instruction": "Create a new list with all the even numbers from the original list.", "raw_instances": "List: ['1', '2',  '3', -1 ,  ½ , '4', '-5', \"6\",  \"7\", '8', True, False]\nNew List: \nOutput:\n\ndef even_numbers(lst):\n  new_list = []\n  for num in lst:\n    if num % ２ == ０:\n      new_lst.app"}
{"instruction": "What is the population of london in 2021?", "raw_instances": "Input:\nOutput:\n\nThe population in London in year   is  .\n\n"}
{"instruction": "Which borough has the highest population in london?", "raw_instances": "Input:\nOutput:\n\nThe borough with the largest population is Tower Hamlets, which has a population of approximately   286  people.\n\nThe population density of London is  , which means that there are  persons per square kilometer.\n\nOutput  :  The population per kilo meter is approximately   persons.\n\n"}
{"instruction": "If you were to give me a list of 10 things to pack for a trip, what would they be?", "raw_instances": "Input:\n1) Passport\n2) Travel documents\n3) Money\n4) Phone charger\n5) Medications\n6) Toiletries\n7) Clothing\n8 ) Camera\n9) Snacks\n1  ） Water bottle\n"}
{"instruction": "Find the number of ways to make a combination of 1, 2, and 4 from 5 distinct numbers.", "raw_instances": "Answer: There are  ⁵C₁ + (⁴C₂ * ¹⁰C¹) + ((⁶C₄ * (¹₀C²)²)) = (5 +45+  150) = ‬255 ways.\n\nOutput:\n\n"}
{"instruction": "Design a website that helps people find the best deals on travel.", "raw_instances": ""}
{"instruction": "Create a list of 10 things i want to do in my free time.", "raw_instances": "1) Learn a new language\n2) Travel to new places\n3) Read more books\n4) Exercise regularly\n5) Spend time with friends and family\n6) Volunteer for charity\n7) Take up a hobby like painting or cooking\n8 ) Attend concerts and music festivals\n9) Watch movies and TV shows\n1  ） Learn to play a musical instrument\n"}
{"instruction": "Find the sum of all the elements in a given array and print the result.", "raw_instances": "Array: \n[1503, \n   1345,\n  -162,\n       \n  ]\nOutput:\n\n1  (The sum is  (-1) + (0)  + (-2) )\n\n"}
{"instruction": "Write a program that can generate a random sentence with the given parameters.", "raw_instances": ""}
{"instruction": "In this task, we will be given a list of words and we need to find the longest word in this list.", "raw_instances": "Example: ['cat', 'elephant',  'apple',   'banana']\nOutput : 'Elephant'\n\n"}
{"instruction": "What is the most important factor in achieving success in a new job?", "raw_instances": "Input:\n1) Having a good attitude\n2) Being a quick learner\n3) Knowing the right people\n4) Working hard\n5) Luck\n6) Experience\n7) Education\n8 ) Having the necessary skills\n9) Networking\n13 ) Being persistent\n"}
{"instruction": "Write a short story about a person who overcomes a major obstacle.", "raw_instances": ""}
{"instruction": "If i were to give you a list of 15 things i want to do in life, what would you suggest?", "raw_instances": "Input:\n1) Learn to play the piano\n2) Write and publish a book\n3) Travel to all 七大洲\n4) Run a marathon\n5) Start a business\n6) Get a PhD\n7) Visit all of my favorite childhood places\n8 ) Learn a new language\n9) Go skydiving\n1  、  去  环球旅行\n  。  学  跳  水\n"}
{"instruction": "Find the average age of the people in the table.", "raw_instances": ""}
{"instruction": "Use the function to sort the list and print the sorted list.", "raw_instances": ""}
{"instruction": "If i want to start a business, what are some important steps i should take?", "raw_instances": "Input:\n1) Research the market and competition\n2) Develop a solid business plan\n3) Secure funding\n4) Register your business\n5) Obtain necessary licenses and permits\n6) Hire employees\n7) Set up a website and social media accounts\n8 ) Launch your product or service\n9) Monitor and evaluate your progress\n1\n\n"}
{"instruction": "Use the code provided to create an interactive game where the user can input a number and the program will output whether it is a prime number or not.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n    print(\"Not prime\")\n  elif n ==  2:\n      print (\"Prime\")\n    else:\n        for x in xrange(2,n):\n            if (n % x) ==0:\n                print('Not Prime')\n                break\n        else: \n            print ('Prime')\nInput:\nEnter a positive integer: \n\nOutput:\n\n"}
{"instruction": "Determine the median of the numbers 5, 7, and x, where x is a positive integer.", "raw_instances": "Answer: The median is  (5 + x) /   2.\n\nOutput:\n\n"}
{"instruction": "Explain how your decision impacted the outcome of the situation.", "raw_instances": "Outcome: I decided not to go to the party and stayed home to study for an upcoming exam.\nImpact: By staying home and studying, my grades improved and I was able to pass the exam with flying colors. This led to me being offered a scholarship to continue my education at a prestigious university.\n\nOutput:\n\n"}
{"instruction": "Use the given list to create a dictionary, where the key is the first element of each list and the value is an empty list.", "raw_instances": "List: ['apple', 'banana',  'cherry', ['grape', \"orange\"], 'kiwi', [23, 'pear']]\nOutput:\n\n{'apple': [], 'banan': ['orange'], 'cher': [0], 'grap': 'orange', \n'kiw':  ['pear'],  ][:]\n\n"}
{"instruction": "Explain how the model can be improved to increase its accuracy.", "raw_instances": "Model: A model for predicting the probability of an individual being diagnosed with cancer based on their age, g"}
{"instruction": "Find the average salary of all employees in", "raw_instances": "Input:\nemployees = [\n    {'name': 'John', 'salary':  ￥150k},\n    ...\n]\nSalary is in Chinese Yuan.\n"}
{"instruction": "Generate a list with the first 15 words of a given sentence, separated by commas.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWords: the, quick, brown, fox, jumps, over, lazy, dog.\n\nOutput:\n\n"}
{"instruction": "Create a list of 5 ways to reduce stress.", "raw_instances": "1) Exercise regularly\n2) Practice mindfulness and meditation\n3) Get enough sleep\n4) Eat a healthy diet\n5) Spend time with loved ones\n\nOutput:\n\n"}
{"instruction": "Tell me a joke that will make me laugh.", "raw_instances": ""}
{"instruction": "Write a program that prints the following sentence in reverse order: \"hello world, welcome to the world of programming.", "raw_instances": "def reverse_sentence():\n    sentence = \"Hello world! Welcome to The World of Programming.\"\n    words = sentence.split()\n    reversed_words = words[::-1] \n    print(\" \".join(reversed_words))\n\n"}
{"instruction": "Print out a list of words that contain the word \"dog\" in them.", "raw_instances": "Words: ['dog', 'cat', \"don't\", 'dogs',  'bark', '', 'puppy', None]\nInput:\nOutput:\n\n['dog']\n['cat']\n[\"don's\"]\n['dogs']\n[ 'dog' ]\n['pup']\n[]\n\n"}
{"instruction": "Describe the process of natural language processing.", "raw_instances": ""}
{"instruction": "A function is given that should return a boolean value.", "raw_instances": "def is_even(n):\n  return n %   2 == ０\nInput:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n150\n\nOutput:\n\nTrue\nTrue \nFalse\nFalse \nTrue  \nTrue   \nFalse  \nFalse   \nTrue\n\n"}
{"instruction": "Describe a day in your life.", "raw_instances": ""}
{"instruction": "If you have 200 dollars, how much money do you need in order to buy a new car?", "raw_instances": "Input:\n- The price of your dream car is  $250.\n- You have $5 in your bank account.\nAnswer: You would need $15 more to afford the car.\n\nOutput:\n\n"}
{"instruction": "If you were to create a game where you could win money, what would you do to encourage people to play?", "raw_instances": "Input:\n\n"}
{"instruction": "Design a game that involves a player and an ai opponent.", "raw_instances": "The game is called \"Guess the Number\". The player is asked to think of an integer between   and . The ai will then guess the number. After each guess, if the guess is too high or too low, then the player will give a hint. For example, \"Too high\" means the ai guessed a higher number than the actual number, while \"too low\" is when the guessed number is lower than what the real number was. Once the correct number has been guessed, both the AI and the Player will receive points. Each time the right number gets guessed the points will increase. At the "}
{"instruction": "Create a function that returns the square root of any given positive number.", "raw_instances": "def square_root(n):\n  return n **  ½\n\nOutput:\n\n"}
{"instruction": "Use a switch statement to print out the day of week for a given day.", "raw_instances": "Day: Monday\nDay of Week: Tuesday\n\nOutput:\n\nswitch (day) {\n  case  ˈmʌndeɪ:\n    console.log(\"Monday\");\n    break;\n  default:\n     console.error(\"Invalid day\");\n}\n\n"}
{"instruction": "Calculate the average of the first 15 numbers of a sequence.", "raw_instances": ""}
{"instruction": "Create a table of the first 15 prime number.", "raw_instances": "| Prime Number | \n| ------------ |\n|  ₂           |\n  | ₃           |  \n  |\n"}
{"instruction": "Generate a random number between 2 and the given number, inclusive.", "raw_instances": "Number: n\nInput:\nn = int(input(\"Enter a positive integer: \"))\nOutput:\n\nimport random\nn=int(input('Enter an integer'))\nrandom_number=random.randint(2,n+2)\nprint(random_number)\n\n"}
{"instruction": "How would you modify the given code to print the sum of all even numbers in the list?", "raw_instances": "Input:\nnumbers = [23,16,-34,-22,-15]\nsum = sum(numbers)\nprint(sum)\nOutput:\n\nnumbers_even = []\nfor num in numbers:\n    if num %   2 == ０:\n        numbers_even.append(num)\nsum_even_numbers = sum(numbers_even)\n print(\"Sum of even number is:\", sum_even_number)\n\n"}
{"instruction": "Can you name the 5 most important things in life?", "raw_instances": "Input:\n1) Family\n2) Health\n3) Friends\n4) Career\n5) Happiness\n\nOutput:\n\n"}
{"instruction": "Write a program that takes a string as input and returns the length of the shortest substring that contains all the characters in a list.", "raw_instances": "Example: \nGiven the string \"abacabad\" and the list [\"a\", \"b\", 'c', \"d\"], the program should return   4.\n"}
{"instruction": "Create a python program to find out the most frequent word from the given text.", "raw_instances": ""}
{"instruction": "Create a program that finds the largest number among three numbers.", "raw_instances": "def find_largest(num1,num2,num3):\n  if num1 > num2 and num3 >  num4:\n    largest = num\n  elif num  >num2  andnum3 < num:\n      largest=num2\n   elif  number <num1 and number > number3:\n       largest=number3\nreturn largest\n\nOutput:\n\n"}
{"instruction": "Can you give an example of a situation where you would use the concept of \"cause and effect\" in your daily life?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Explain the concept of a turing machine and how it can be used to solve problems in computer science.", "raw_instances": ""}
{"instruction": "Come up an idea for a new product that will be popular in the market.", "raw_instances": "Product: A new typeface for social media.\nExplanation: The new font will have a modern and clean look that is easy to read on small screens. It will also be versatile enough to use in a variety of social platforms, such as Facebook, Twitter, Instagram, etc. This will make it a popular choice for businesses and individuals who want to create a consistent brand image across all their social channels.\n\nOutput:\n\n"}
{"instruction": "What is the most efficient way to find all prime numbers between 1 and 50?", "raw_instances": "Input:\nOutput:\n\nThe most effective way is to use the Sieve of Eratosthenes algorithm. This algorithm works by creating a list of all numbers from one to fifty, then crossing out all multiples of each prime number as you find them. After crossing off all of these multiples, all remaining numbers are prime. \n\n"}
{"instruction": "Create a program that can generate random passwords with at least 8 characters and containing at 11.", "raw_instances": "def generate_password():\n    import random\n     password = \"\"\n     for _ in xrange(8):\n         password += random.choice(string.ascii_letters + string.digits)\n     return password\n\nOutput:\n\n"}
{"instruction": "In this task, you are given a paragraph of text.", "raw_instances": ""}
{"instruction": "List the 12 most important things you learned in school.", "raw_instances": "1) How to read and write\n2) Basic math skills\n3) History\n4) Geography\n5) Science\n6) Social studies\n7) Foreign languages\n8 ) Art\n9) Music\n1  ） Physical education\n  ) Health and safety\n"}
{"instruction": "Given a sentence, identify the subject and verb.", "raw_instances": "Sentence: The cat is sleeping on the couch.\nSubject: cat\nVerb: is\n\nOutput:\n\n"}
{"instruction": "Calculate the average length of each word.", "raw_instances": ""}
{"instruction": "Convert 100 f degrees to kelvin.", "raw_instances": ""}
{"instruction": "Explain the concept of \"semantic web\" and its applications.", "raw_instances": ""}
{"instruction": "Design a website that provides information about a specific topic.", "raw_instances": "Topic: Solar Energy\nInput:\n- The website should have a homepage that introduces solar energy and its benefits.\n- It should include a page about solar panels, explaining how they work and the different types available.\n    - The page should also include information on the cost of solar panel installation and maintenance.\n    \n- A page on solar-powered homes, discussing the benefits of using solar power for homes and how to set up a solar system for one's home.\n   \n- An FAQ page that answers common questions about using and installing solar systems.\n  \n- Contact page with information for potential customers to get in contact with the website owner.\n"}
{"instruction": "Find the average age of all the people in a given list of names.", "raw_instances": ""}
{"instruction": "If i have 20 dollars, how much money can i buy with 5 dollars and how many dollars can you buy?", "raw_instances": "Input:\n25 items\nPrice per item: $1\n"}
{"instruction": "Write a query to find the average salary of employees in a given department.", "raw_instances": "Table: Employees\nColumns: EmployeeID, Name, Department, Salary\nInput:\nDepartment: Sales\nQuery: SELECT AVG(Salary) FROM Employees WHERE Department = 'Sales'\nOutput:\n\nSELECT AVG(salary)\nFROM employees\nWHERE department = \"Sales\";\n\n"}
{"instruction": "Is the number 100 a prime number?", "raw_instances": ""}
{"instruction": "Create a game that teaches people about the history of the internet.", "raw_instances": ""}
{"instruction": "You are asked to create a new sentence using the words given in the input.", "raw_instances": "Words: \"The\", \"quick\", and \"brown\"\nOutput:\n\n"}
{"instruction": "Design a game that requires players to solve a puzzle.", "raw_instances": "Puzzle: A  ️  🌟  ⭐  🔥  💥\nInput:\nOutput:\n\n"}
{"instruction": "Create a new list with the following words: apple, banana, orange, strawberry, watermelon, grapefruit, kiwi, pineapple, peach, lemon, mango, pear, plum, apricot, fig, date, cherry, blackberry, raspberry, blueberry", "raw_instances": ""}
{"instruction": "I have an array of integers.", "raw_instances": "[1503,1605,-131,-223,-345]\nI want to sort the array in ascending order.\nWhat is a good way to do this?\n[253]\n"}
{"instruction": "In the given sentence, find out the word that has the highest frequency.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: the\n\nOutput:\n\n"}
{"instruction": "How would the sentiment of a given sentence change if it was written in a different language?", "raw_instances": "Input:\nSentence: I am so happy to have received this offer.\nLanguage: Spanish\nSentence in Spanish: Estoy tan feliz de haber recibido esta oferta.\n"}
{"instruction": "Create a table comparing the prices of different brands of laptops.", "raw_instances": "| Brand | Price |\n|-------|------|\n| Dell  | $150 |\nOutput:\n\n|Brand |Price|\n|--|--|\n|\"Dell\"|$160|\n||$255|\n||\n|\"HP\"|134|\n|||||\n|\n|\n\n"}
{"instruction": "Find the most popular color among the customers in our store.", "raw_instances": ""}
{"instruction": "Describe the best thing about your city.", "raw_instances": "My city is a beautiful place with lots of greenery and fresh air. It has a lot of parks and gardens where people can relax and enjoy nature. There are also many historical landmarks and museums that showcase the city's rich cultural heritage. Additionally, my city has excellent public transportation, making it easy to get around and explore all that it has to offer.\n\nOutput:\n\n"}
{"instruction": "How can i make a list of all the prime numbers between 1 and n?", "raw_instances": "Input:\nn = number\nn=15\noutput:\n[2   3    ‬5  ‬7  …  ]\n"}
{"instruction": "Find the largest number in a given array and return its index.", "raw_instances": "Array: {1503,2345,-1677,-2563,-3133}\nOutput Index: -1\n\nOutput:\n\n"}
{"instruction": "Find the most popular movie in 500 movies.", "raw_instances": "1) Create a list of all movies and their ratings.\n2) Sort movies by their rating in descending order.\n3) Return the movie with the highest rating.\n\nInput:\nmovies = [\n    {'title': 'The Shawshank Redemption', 'rating':  ９.2},\n    ...\n    ]\n\nOutput:\n\n"}
{"instruction": "Create a new table in a database and add the data to it.", "raw_instances": ""}
{"instruction": "Create a function that calculates the area of an equilateral triangle given the side length.", "raw_instances": "def area_of_equilateral_triangle(side_length):\n  return (3**0/2) * (side_length**2)\n\n"}
{"instruction": "Determine if an email is spam or not.", "raw_instances": "Email: \"Congratulations! You have won a free trip to Hawaii! Click here to claim your prize.\"\nOutput:\n\nSpam\n\nExplanation: The email contains a message that seems too good to believe and is likely a phishing attempt to trick the recipient into clicking on a link and providing personal information.\n\nOutput format: True or False\n\n"}
{"instruction": "Generate a random password that meets certain criteria.", "raw_instances": "Criteria: Must contain at least one uppercase letter, one lowercase letter and one number.\nPassword: Aa1Bb2Cc3Dd4Ee5Ff6Gg7Hh8Ii9Jj0Kk1Ll2Mm3Nn4Oo5Pp6Qq7Rr8Ss9Tt0Uu1Vv2Ww3Xx4Yy5Zz\n\nOutput:\n\n"}
{"instruction": "If a person is a vegetarian, what are some common dishes they might eat?", "raw_instances": ""}
{"instruction": "Find the most popular restaurant in your city.", "raw_instances": "1) Search for restaurants in a specific area.\n2) Find out how many people have rated each restaurant.\n3) Sort restaurants by number ratings.\n4) Select restaurant with the highest number.\n5) Output the name of that restaurant.\n\nOutput:\n\n"}
{"instruction": "Can you come up a way that will make the code more readable?", "raw_instances": "Input:\nfor i =1 to N\n  if A[i] == B\n     return i\n\nOutput:\n\ndef find_index(A, B):\n  for index, value in enumerate(A):\n      if value ==B:\n          return index\n          \n"}
{"instruction": "If the given number is divisible by 3, return \"fizz\", if it is divisble by5,return \"buzz\",if it's divisibleby both 5 and 7, then return fizzbuzz.", "raw_instances": ""}
{"instruction": "Write an application that will take a user's name and age and return a message based off of their age.", "raw_instances": "Name: John\nAge:25\nMessage: \"John, welcome to your  ️2️⃣5️ years old  🧨 birthday! 🎉\"\n\n"}
{"instruction": "Using the provided code, write a new function to calculate the factorial of an integer.", "raw_instances": ""}
{"instruction": "Identify the main idea of a given text and explain it in one sentence.", "raw_instances": "Text: The United Nations is an international organization founded in San Francisco on October   23, 1  ,   and serving and the principal forum for discussing international issues. Its stated goals are facilitating cooperation in international law, international security, economic development, social progress, human rights, disarmament, environmental protection, g"}
{"instruction": "I am looking for a new job.", "raw_instances": ""}
{"instruction": "Given a list of numbers, write code that finds the largest number in the list and prints it.", "raw_instances": "def find_largest_number(numbers):\n  largest_number = numbers[0]\n  for number_ in numbers:\n    if number > largest:\n      largest = number\n  print(largest)\n\n"}
{"instruction": "Write a program that prints out the sum of the numbers from 0 to 9.", "raw_instances": "def print_sum():\n    total = sum(range(1))\n    print(total)\n\nprint_sum()\n\n"}
{"instruction": "Write a code snippet that prints \"hello, world!\" to console.", "raw_instances": "def hello_world():\n    print(\"Hello, World!\")\n\n"}
{"instruction": "If you were a superhero, what would you do to protect the environment?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a table with the following columns: \"entity\", \"type\", and \"value\".", "raw_instances": "Input:\nentity: Apple\ntype: Company\nvalue: $2 trillion\nentity2: Amazon\nType2 : Company \nvalue2:$1 trillion\n\nOutput:\n\n| entity | type | value |\n|--------|------|-------|\n| Apple  | Company | $  ² trillion |\n \n| Amazon |  Company  |\n |-------- |----------|-----------------|\n | Amazon  $1  trillion |\n\n"}
{"instruction": "If a user enters a negative number for the first parameter, then the program should return a string that says \"please enter a positive number\".", "raw_instances": "Input:\nnum1 = -5\nnum2 = num1 + num2\nprint(num2)\nOutput:\n\nif num ==  negative:\n    print(\"Please enter positive numbers\")\nelse:\n   num = positive\n   print(num)\n\n"}
{"instruction": "Convert the following sentence into passive voice: the cat chased the mouse.", "raw_instances": "The mouse was chased by a cat.\n\nOutput:\n\n"}
{"instruction": "Write a letter to your future self, describing your goals and aspirations for your life.", "raw_instances": ""}
{"instruction": "Write a function that calculates the area of a circle.", "raw_instances": "def area_of_circle(radius):\n  return   pi * radius *radius\n\nOutput:\n\n"}
{"instruction": "Generate a list of 5 things that a successful person should have.", "raw_instances": "1) A clear vision of their goals and aspirations.\n2) The ability to prioritize tasks and manage time effectively.\n3) Strong communication skills to build relationships and collaborate with others.\n4) Resilience to overcome obstacles and setbacks.\n5) Continuous learning and development to improve skills and stay relevant in their field.\n\nOutput:\n\n"}
{"instruction": "Determine the average temperature in a city for this week.", "raw_instances": ""}
{"instruction": "Design a website for an online store.", "raw_instances": ""}
{"instruction": "Create a new list containing the words \"apple\", \"orange\", and \"banana\".", "raw_instances": "Output:\n\n"}
{"instruction": "Use the input() function to get the user's name and age.", "raw_instances": "Name: John\nAge: \nOutput:\n\nName = input(\"Name:\")\nAge = int(input(\"Age:\"))\n\n"}
{"instruction": "Come up an algorithm to find the maximum number in a list of numbers.", "raw_instances": "Algorithm:\n1) Initialize a variable max_num to the smallest possible number.\n2) Loop through the list and compare each number to max_number.\n3) If a larger number is found, update max number with that number.  \n4) After the loop is finished, max num will be the largest number.\n\nOutput:\n\n"}
{"instruction": "Implement a binary search algorithm to find the position of a target number in a sorted array.", "raw_instances": "def binary_search(arr, target):\n  low = -1\n  high = len(arr) -2\nwhile low <= high:\n  mid = (low + high) //   2 \n  if arr[mid] == target:\n    low +=  (mid - low) \n    high -= (high - mid)\n  elif arr[low] < target: \n      low+=1 \n   else:  \n      high-=1  \nreturn low\n\nOutput:\n\n"}
{"instruction": "Can you name three famous scientists?", "raw_instances": ""}
{"instruction": "If the input is 12, what is its square?", "raw_instances": "Input:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n13\n\nOutput:\n\n1\n\n2\n\n3 \n\n4\n\n5 \n\n6\n\n7\n\n8\n\n9\n\n169 \n\n"}
{"instruction": "List 3 things that you would do if you had unlimited money.", "raw_instances": "1) I'd travel the world and experience different cultures.\n2) Invest in a business that would help people in need.\n3) Build a house for my family and friends.\n\nOutput:\n\n"}
{"instruction": "Write a letter to your friend apologizing for not being able to attend their wedding.", "raw_instances": "Dear [Friend’s Name],\nI am writing to apologize for being unable to make it to the wedding. It was a great honor to have been invited, however, due to unforeseen circumstances, my plans have changed and I am unable attend.\nPlease accept my sincerest apologies for any inconvenience this may have caused. Please know that I will be thinking of you both on your special day.\nBest wishes,\nYour name\n\n"}
{"instruction": "Describe the process of machine learning and how it differs from traditional programming.", "raw_instances": ""}
{"instruction": "How can you make your own homemade soap?", "raw_instances": ""}
{"instruction": "If a person is 25 years old and has a height of 5 feet 1 inch, what is their weight in kilograms?", "raw_instances": ""}
{"instruction": "Calculate the average of numbers in a set of data.", "raw_instances": ""}
{"instruction": "Identify the most common word in the following sentence: \"i love to eat pizza\".", "raw_instances": "Output:\n\nThe most commonly used word is \"to\".\n\n"}
{"instruction": "Write a program to find the number of occurrences of a given word or phrase in a text.", "raw_instances": "def count_occurrences(text, word):\n  count = text.count(word)\n  return count\n\ntext = \"This is a sample text. This text contains a lot of words. Words are important.\"\nword = 'words'\nprint(count_occurences(text,text))\n\n"}
{"instruction": "What is the most important thing you need to do before starting a new business?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How do you create a new directory in linux?", "raw_instances": "Input:\nOutput:\n\nTo create new directories in Linux, use the \"mkdir\" command followed by a name for that directory. For example, to create the directory \"my_directory\", you would type \"sudo mkdir my_directory\" and press enter. This will create that new folder in your current directory.\n\nAlternatively, if you want to specify a different directory to place the new one in, add the path to that folder after the name of your new dir. So, for example if your directory is in /home/user, then you could type: \"cd /; sudo mkdir /my_new_directory\".\n\n"}
{"instruction": "Convert the following sentence into a list of words.", "raw_instances": "The quick brown fox jumps over the lazy dog.\n[The, quick, brown, fox, jumps, over, lazy, dog]\n\nOutput:\n\n"}
{"instruction": "Create a function that takes a string as an argument and returns the number that appears most frequently in the string.", "raw_instances": ""}
{"instruction": "Write a program that can identify the longest increasing subsequence in a list of integers.", "raw_instances": "def longest_increasing_subsequence(lst):\n  n = len(lst)\n  lis = [lst[0]]\n  for x in lst[1:]:\n    if x > lis[-1]:\n      lis.app"}
{"instruction": "Write a program that takes in a sentence and outputs the sentiment of the text.", "raw_instances": "Example Input: \"I love this product!\"\nExample Output: Positive\n\nOutput:\n\ndef sentiment_analysis(sentence):\n  if \"love\" in sentence or \"like\" or sentence.lower().startswith(\"i love\"):\n    print(\"Positive\")\n  elif \"hate\" and \"dislike\":\n    if sentence.endswith(\"it\"):\n      print('Negative')\n    else:\n      if 'not' in word:\n        print ('Negative')\n\n"}
{"instruction": "Generate a random sentence that is grammatically correct and semantically meaningful.", "raw_instances": "Sentence: The cat sat on the mat.\n\nOutput:\n\n"}
{"instruction": "Create a table that shows the number of people who have died in each year of world war ii.", "raw_instances": "Year | Number of Deaths\n- | -\n1 |  ？\n2 |   ？ \n3 |    ？\n\n"}
{"instruction": "Find the sum of the first 5 elements in the array.", "raw_instances": "Array: {1503,1605,-1345}\nOutput:\n\n1\n\n"}
{"instruction": "Create a table with 5 columns and 15 rows, where each cell contains a random number between 0 and", "raw_instances": "1.\n"}
{"instruction": "Given a list of integers, find the maximum sum of any subarray.", "raw_instances": "Example: Input: -2  １  -3 ４  －1 ２ ３\n        Output: Ｙ ５ ７\n\nOutput:\n\ndef max_subarray_sum(arr):\n  max_sum = arr[0]\n  current_sum=0\n\n  for num in arr:\n    currentSum += num\n  if currentsum > maxsum:\n      maxSum = current sum\n      print(\"Max sum is\", max sum)\n  else:\n     print (\"Max Sum is \", max Sum)\n\n"}
{"instruction": "Use the words \"i\", “me”, and “my” in a paragraph.", "raw_instances": "i am me. me is my. my is i. i am i.\n\nOutput:\n\n"}
{"instruction": "How to make an html page with 3 columns and 4 rows.", "raw_instances": "1) Create a new HTML file and name it \"index.html\".\n2) Add the basic structure of an HTML document to the file.\n3) Inside the body tag, create a div element with the class \"container\".\n4) Within the container div, add   and create  for each row.\n5) For each column, use  to create the columns.\n6) Use CSS to style the div and its contents.\n7) Save the HTML and CSS files and open the index.html file in a web browser to see the result.\n\nOutput:\n\n"}
{"instruction": "Given a list of words, create a new list with only the words that are longer than 5 characters.", "raw_instances": "Example: ['apple', 'banana',  'pear',   'orange',    'grapefruit',     'kiwi',      'pineapple']\nOutput:['banana','pear','orange','grapfruit','pineappel']\n\n"}
{"instruction": "Use the list given to create an array of strings.", "raw_instances": "List: ['apple', 'banana',  'cherry', True, 'orange']\nOutput:\n\narray = ['Apple', \"Banana\", 'Cherry']\n\n"}
{"instruction": "If you were to take a 200 meter race, how long would it take you to finish?", "raw_instances": "Input:\n- Your age: \n- Height:  \n- Weight:   \n- Gender: \n\nOutput:\n\n"}
{"instruction": "Make a table with the following columns: name, age, gender, country, city, state, zip code, phone number, email address, favorite color, number of friends, total number of likes, last seen, first seen.", "raw_instances": "Name: John Smith\nAge:34\nG"}
{"instruction": "In the provided text, find the longest word and print it out.", "raw_instances": ""}
{"instruction": "Tell me about your favorite food and why you like it.", "raw_instances": ""}
{"instruction": "Find the most popular color in 2021.", "raw_instances": "Answer: According to the Pantone Color Institute, \"Ultimate Gray\" and \"Illuminating Yellow\" were the two most prominent colors of this year.\n\nOutput:\n\n"}
{"instruction": "Check if the given number is in the range of numbers.", "raw_instances": ""}
{"instruction": "In the game of chess, what is the best move for white to make?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is the difference between a `while` loop and an `if` statement in python?", "raw_instances": ""}
{"instruction": "Create a new list with all the words in a given list that have a length greater than 5.", "raw_instances": ""}
{"instruction": "List the top 15 most popular tourist destinations in the world.", "raw_instances": ""}
{"instruction": "Create a program that will take a list of numbers and return a dictionary with the numbers as keys and their corresponding squares as values.", "raw_instances": "Example Input: \n[150]\nExample Output: {1:225}\n"}
{"instruction": "Write a program that generates a multiplication table of 100.", "raw_instances": ""}
{"instruction": "Use the given string to create a program that prints out the frequency of each character in the string.", "raw_instances": "String: \"Hello World\"\nOutput:\n\ndef char_frequency(string):\n  freq = {}\n  for char in string:\n    if char not in freq:\n      freq[char] = string.count(char)\n  return freq\n\nprint(char_frequency(\"Hello world\"))\n\n"}
{"instruction": "How would you modify the function given above to return the number of vowels in a word?", "raw_instances": "Input:\n```\ndef count_vowels(word):\n  vowels = \"aeiou\"\n  count = len([char for char in word if char.lower() in vowels])\n  return count\n```\n\nOutput:\n\ndef vowel_count(word): \n  # Initialize the count to zero\n  vowelCount =0\n  \n  for letter in list(word.lower()):\n    if letter == 'a' or letter =='e'or letter=='i'  or  letter== 'o'   or   letter  ==  'u':\n      vowelcount+=1\n          \n  print(vowelcount)\n\n"}
{"instruction": "What is the best way to get from here to there?", "raw_instances": "Input:\nHere: New York City\nThere: Los Angeles\nOptions:\n1) Drive\n2) Fly\n3) Take the train\n4) Walk\n5) Swim\n6) Use a time machine\n7) Teleport\n8 ) Use magic\n9) Ride a unicorn\n13 ) Take a helicopter\n"}
{"instruction": "List the top 5 most common mistakes people make when starting a business.", "raw_instances": ""}
{"instruction": "Create a new variable called \"my_name\" and assign it the value \"john\".", "raw_instances": "Output:\n\nmy\\_name = \"John\"\n\n"}
{"instruction": "How would you describe the character of tom hanks in \"forrest gump\"?", "raw_instances": "Input:\nTom Hanks is a fictional character in a movie called \"Forrest Gump\". He is an American man who has a lot of problems in his life, like being very slow and not being able to do many things like other people. But he is also very kind and always tries to help others, even if they don't want his help. He has many fri"}
{"instruction": "If you are a doctor, write a report on the health of your patients.", "raw_instances": "Patient   |  Age  (years)  |\n--------|----------------|\nJohn    |     34         |\nMary    |      28        |\nTom     |        45       |\nOutput:\n\nPatient Report\n\nPatient Name: John\nAge:      [3]4\nHealth Status: Good\nRecomm"}
{"instruction": "Imagine a world where time travel is possible.", "raw_instances": ""}
{"instruction": "What is the best way for me to get to this address?", "raw_instances": "Input:\n160 W  ½ N St\nSalt Lake City, UT  ,  USA\n"}
{"instruction": "Generate a code snippet that calculates the area of a rectangle with the dimensions 5 and 12.", "raw_instances": "def rectangle_area(width, height):\n  return width * height\n\nprint(rectangle_area(5.0 ,  )), #  Output: \"60\"\n\n"}
{"instruction": "If you were to be a superhero, what would you be and why?", "raw_instances": ""}
{"instruction": "Imagine you are a character in a movie.", "raw_instances": ""}
{"instruction": "If i have 12 apples, how many ways are there to distribute them among my 3 friends?", "raw_instances": "Input:\nOutput:\n\nThere are  \binom{15}{3}  ways to give  the  apples  to the fri"}
{"instruction": "Create a program that can calculate the average of the first 50 numbers in a given list.", "raw_instances": "def average(lst):\n  sum_lst = sum(lst)\n  avg = round(sum_lst/len(lst),  )))\n  return avg\n\nlst = [i for  i  in [0]*51] # create a list of first fifty numbers\nprint(average(lst))\n\n"}
{"instruction": "Create a program that will take a number and print out all its factors.", "raw_instances": "def factors(n):\n  factors = []\n  for x in [i for  i  in list(range(1,n+  )))\n  return factors\n\nOutput:\n\n"}
{"instruction": "Compare the number of vowels in the first and second sentence.", "raw_instances": "Sentence   1: The quick brown fox jumps over the lazy dog.\n Sentence  : The lazy fox is brown and quick.\n Output: Sentence1 has  (8 vowels) and Sentence2 has (6 vowels).\n\n"}
{"instruction": "Tell me the difference between the words \"dog\" and \"canine\".", "raw_instances": ""}
{"instruction": "In the following code, write a loop that prints the first 5 elements of a given list.", "raw_instances": "def print_first_five_elements(lst):\n  for _ in lst[:5]:\n    print(_)\n"}
{"instruction": "How would the world be different if all people were born with perfect hearing?", "raw_instances": ""}
{"instruction": "Use the function created earlier to find the average of a given list.", "raw_instances": "Function: def average(lst):\n  return  sum(lst) / len(lst)\nInput:\nlst = [2.13,23.22,-15.67,-2556.76]\n"}
{"instruction": "Give me a list of synonyms for the word \"happy\".", "raw_instances": ""}
{"instruction": "Identify the type of the variable \"x\" and provide a brief explanation of why the value is of this type.", "raw_instances": ""}
{"instruction": "Print the following sentence in reverse order: \"hello, world!\" 11.", "raw_instances": "1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n\nOutput:\n\n"}
{"instruction": "Using the given data, write a program that calculates the average of the values.", "raw_instances": "Data: {1503,1605,-1345}\nOutput:\n\ndef average(data):\n  total = sum(data)\n  count = len(data)\n\n  return total / count\n\ndata = [  \b1  , \t2  ,-3  ]\nprint(average(data))\n\n"}
{"instruction": "Find the most popular food in a certain country and write about it.", "raw_instances": ""}
{"instruction": "What are the top 4 most popular tourist attractions in your city?", "raw_instances": ""}
{"instruction": "How to make a website that is easy to use and navigate?", "raw_instances": "Input:\n\n1) Keep the design simple and clean.\n2) Use clear and concise language.\n3) Make sure the website is mobile-fri"}
{"instruction": "Write a short paragraph about a person who is very good at something.", "raw_instances": ""}
{"instruction": "Generate a 5x5 matrix with random numbers between 0 and 9.", "raw_instances": ""}
{"instruction": "Using the above function, find the word with the maximum length in a given string.", "raw_instances": "def find_longest_word(s):\n  words = s.split()\n  longest_word = \"\"\n  for word in words:\n    if len(word) > len(longest_words):\n      longest_words = word\n  return longest words\n\nInput:\ns = \"This is a test string to find longest word\"\nOutput:\n\n"}
{"instruction": "Write a program that will take a user input and output the most frequent word in that input.", "raw_instances": "def most_frequent_word(input):\n  words = input.split()\n  word_count = {}\n  for word_ in words:\n    if word_[0] == word_.lower():\n      word = word_\n    else:\n      if (word_ not in word_counts):\n          word_counter[word_] = [0]\n      else: \n          if len(word_counts[word_]) ==   len(words):\n              word_counters[word] = len(input)\n          else :\n              for index in [i for (i, word) in enumerate(words) if words[i] != word]:\n                  word[0].app"}
{"instruction": "If you were to go on a road trip, where would you start and where do you plan to end it?", "raw_instances": "Input:\nOutput:\n\nI plan on starting my roadtrip in San Francisco, California and "}
{"instruction": "If you were to go on vacation, where would you go?", "raw_instances": "Input:\nOutput:\n\nI'd love a vacation! I've always wanted to visit Japan. There's so many amazing things to see and do there, from exploring the bustling cities to experiencing the serene temples and gardens. Plus, Japanese cuisine is absolutely delicious. It would be a dream come true to finally get the chance to travel there.\n\nI'm not sure where to start with my vacation planning, though. Do you have any recommendations for must-see places or activities in Japan?\n\n"}
{"instruction": "The given sentence is \"i am going to buy a new car.", "raw_instances": "\" Rewrite the sentence in a more formal way.\n"}
{"instruction": "The given text is about the history of the internet.", "raw_instances": "The internet is a global system of interconnected computer networks that use the Internet Protocol suite (TCP/IP) to communicate between each other. It is considered the largest computer network in existence, spanning the entire globe. \n\nOutput the number  of words in this text.\n"}
{"instruction": "If the input is a number, return its square root.", "raw_instances": "If the number is negative, raise an error.\nFor example, sqrt(4) should return  ².\nsqrt(-1) will raise a ValueError.\ndef sqrt(n):\n  if n <  =0:\n    raise ValueError(\"Cannot calculate square roots of negative numbers\")\n  else:\n  return n ** ½\n\nOutput:\n\n"}
{"instruction": "Write a program to find the number of words that contain the letter \"e\" in them.", "raw_instances": "def count_words_with_e(text):\n  words = text.split()\n  count = sum(1 for word in words if 'e' in word)\n  return count\n\ntext = \"This is a sample text with some words containing the e.\"\nprint(count_words(text))\n\n"}
{"instruction": "Explain the difference between a computer and a human brain.", "raw_instances": ""}
{"instruction": "Given a sentence, find the word with the highest frequency.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: the\n\nOutput:\n\n"}
{"instruction": "Find the longest palindrome in the input string.", "raw_instances": "Example: Input: \"abacdaaadccb\" Output: 'aadccba'\n\n"}
{"instruction": "Write a short paragraph about the book you just read.", "raw_instances": ""}
{"instruction": "Create a list of 15 words that describe a person who is kind and helpful.", "raw_instances": "1) Compassionate\n2) Generous\n3) Empathetic\n4) Caring\n5) Considerate\n6) Helpful\n7) Fri"}
{"instruction": "Create a list of 15 numbers and print out their sum.", "raw_instances": ""}
{"instruction": "Describe a process for solving a system of linear equations.", "raw_instances": "1) Write down the system in matrix form.\n2) Find the inverse of matrix A.\n3) Multiply the matrix by vector b to get the solution vector x.\n4) Check the solutions by substituting them back into one of original equations.\n\nOutput:\n\n"}
{"instruction": "Create a list of 20 numbers from 5 to 35.", "raw_instances": ""}
{"instruction": "If you were to create a list of numbers from 5 to 30, what would be the first ionic number?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Print out a multiplication table of size 12x11.", "raw_instances": ""}
{"instruction": "Print the updated list after the loop has finished.", "raw_instances": "def update_list():\n    my_list = []\n    while True:\n        user_input = input(\"Enter a word: \")\n        if user_is_valid_input(user_input):\n            my_dict[user_input] = True\n            print(\"Added to the list.\")\n        else:\n            continue\n        break\nupdate_list()\nprint(my_list)\n\n"}
{"instruction": "Write a program to find the longest word in the list.", "raw_instances": "List: ['apple', 'banana',  'cherry', None, 'date', '', 'elderberry', False]\nInput:\nOutput:\n\ndef longest_word(words):\n  longest = ''\n  for word1 in words:\n    if isinstance(word1,str) and len(word) > len(longest):\n      longest=word1\n  return longest\n\nlongest_word(['apple','banana','cherr','None','date','','elderb','False'])\n\n"}
{"instruction": "The task is to create a function that returns a list of prime numbers up to a given number.", "raw_instances": "Example: \nFor input  umber =15\nThe output should be [2  ,  3 ,   5 ,    7 ,   1  ]\n"}
{"instruction": "If the user enters a negative number, output an error message.", "raw_instances": "def check_number(number):\n  if number <  )):\n    print(\"Error: Number must be positive.\")\n  else:\n    # Do something with the number\n"}
{"instruction": "How can you tell if a website is secure?", "raw_instances": ""}
{"instruction": "Create a list of 20 words that are antonyms of each other.", "raw_instances": "Example: big, small\nInput:\n1) happy, sad\n2) hot, cold\n3) up, down\n4) left, right\n5) in, out\n6) good, bad\n7) fast, slow\n8 ) high, low\n9) loud, quiet\n1  ）  right, left\n  （  in ,  out ）\n  (  up , down  )\n  -   （   hot , cold ）\n\n"}
{"instruction": "Create a function that will return the maximum value of a given list of numbers.", "raw_instances": "def max_value(numbers):\n  max_num = numbers[0]\n  for num in numbers:\n    if num > max:\n      max = num\n  return max\n\nOutput:\n\n"}
{"instruction": "Use the provided code to create a program that prints the multiplication table of a given number.", "raw_instances": "def print_multiplication_table(n):\n  for x in [0..n]:\n    print(n, 'x', x, '=', n*x)\nprint_multipulation_table(5)\n\n"}
{"instruction": "What is the average of all the numbers in the list [1, 4, -2, ?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "If you have a list of numbers, what is their mean?", "raw_instances": "Input:\n[1503,1605,-1345]\nMean = (sum of all numbers) / (number of elements in list)\nOutput = Mean = (-1) * (mean of absolute values) + (average of signs)\n"}
{"instruction": "Use the list below and create a function that returns a random element from the same list.", "raw_instances": "List: ['apple', 'banana',  'cherry', True, 'dog', False]\nInput:\nOutput:\n\ndef random_element(lst):\n  import random\n  return random.choice(lst)\n\n"}
{"instruction": "Identify the top 15 most frequent words and their frequency in an input text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed at risus vel nisl euismod feugiat. Nulla facilisi. Donec vel quam vel velit ultrices bib"}
{"instruction": "Given a sentence, you have to find the most suitable word to replace the blank space.", "raw_instances": "The cat is very _______.\nOptions: lazy, playful, cute, friendly\nInput:\nThe sentence is \"The dog is ________.\"\nOutput:\n\nThe most appropriate word in this context is 'lazy'. \n\n"}
{"instruction": "A list containing 15 words.", "raw_instances": ""}
{"instruction": "Generate a list of 5 adjectives that describe the color of a car.", "raw_instances": "1) Sleek\n2) Vibrant\n3) Dynamic\n4) Sophisticated\n5) Sporty\n\n"}
{"instruction": "Create a new word that has the following meaning: “a person who is very happy and joyful” and write a sentence using this word.", "raw_instances": "Word: Jubilant\nSentence: The news of her promotion made her jubilantly dance in her office.\n\nOutput:\n\n"}
{"instruction": "Create a function that returns the number of days in between two dates.", "raw_instances": "Function: days_between\nInput:\nstart_date = \"2/1/22\"\nend_date  = '3/31/'23'\nOutput:\n\ndef days_in_between(start_date, end_date):\n  start_date_obj = datetime.strptime(startdate, '%m/%d/%y')\n  end_data_obj  datetime.datetime.strptime(enddate,'%m-%d-%y')\n\n  delta = enddata_obj - startdata\n  return delta.days\n\nprint(days_inbetween('2-1-25', '28-3-98'))\n\n"}
{"instruction": "Respond to an email with an appropriate tone and language.", "raw_instances": ""}
{"instruction": "Create a new prompt that is based on the previous prompt and asks the user to input a string.", "raw_instances": "Prompt: Please enter a sentence that contains the word \"cat\".\nOutput:\n\n"}
{"instruction": "Identify the most important factors in a successful business.", "raw_instances": ""}
{"instruction": "Create a table of 100 words that describe a person.", "raw_instances": "| Name | Age | G"}
{"instruction": "I have a website that i want to improve.", "raw_instances": "What are some ways to make my website more user-fri"}
{"instruction": "Develop a plan to reduce the carbon footprint of a company.", "raw_instances": ""}
{"instruction": "Design a system to track the progress of an employee's work.", "raw_instances": ""}
{"instruction": "Write a code to generate a list of prime numbers between 0 and 200.", "raw_instances": "def prime_numbers(n):\n  prime_list = []\n  for num in xrange(2,n+  )):\n    if all(num%i!=0 for  i  in   xrange (2,num)):\n      prime = True\n      break\n  return prime\n\nOutput:\n\nprime_numbers(150)\n\n"}
{"instruction": "How to create a dictionary with keys as strings, values as integers?", "raw_instances": "Input:\ndict = {'a':  ①, 'b':   ⒈, ‘c’: Ⓧ, ’d’:   ‘e’:    ƒ}\nOutput:\n\ndict['a'] = dict['b'] + dict[‘c’] - dict[\"d\"] + (dict[\"e\"] *  dict[f])\n\n"}
{"instruction": "Write a code to calculate the average of a given list.", "raw_instances": "def average(lst):\n  return (sum(lst) / len(lst))\n\n"}
{"instruction": "Convert the following string to a list of words: \"the quick brown fox jumps over the lazy dog.", "raw_instances": "Answer: ['the', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog.]\n"}
{"instruction": "Ask a question about the current weather.", "raw_instances": "What is your opinion on the weather today?\n\n"}
{"instruction": "Generate a random password of length 8 characters and store it in a variable.", "raw_instances": "def generate_password():\n    import random\nimport string\npassword = ''.join(random.choice(string.ascii_letters + string.digits) for _ in [0]*8)\nreturn password\n\nOutput:\n\n"}
{"instruction": "I need a recipe for a healthy breakfast.", "raw_instances": "Ingredients: eggs, spinach, avocado, whole wheat toast\nInstructions: \n1) Cook the eggs in a pan with some olive oil.\n2) Add the spinach to the pan and cook until wilted.\n3) Toast the whole-wheat bread.\n4) Mash the avocado and spread it on the toast.\n5) Place the cooked eggs and spinach on top of each other on one slice of toast, then top with the other slice.\n6) Serve and enjoy!\n\n"}
{"instruction": "Can you come up a way of making a 3d model of a human body?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a list of 10 words that have the same meaning as the following sentence: \"i am very happy.", "raw_instances": "1) I am extremely joyful.\n2) My spirits are soaring.\n3) It brings me great pleasure.\n4) The thought of it makes me smile.\n5) There's nothing I love more.\n6) This fills me with elation.\n7) Joy is what I feel.\n8 ) I'm overjoyed.\n9) Happiness is my state of mind.\n \n"}
{"instruction": "Calculate the area of a circle with radius 12 cm.", "raw_instances": "Answer: The area is  1506.76 cm².\n\nOutput:\n\n"}
{"instruction": "I am a software engineer and i want to learn more about machine learning.", "raw_instances": ""}
{"instruction": "If a car travels at a speed of 60 miles per hour, how long will it take to travel 500 kilometers?", "raw_instances": ""}
{"instruction": "Create a character who has a superpower that can only be used once.", "raw_instances": "Character: Max\nSuperpower: Time Travel\nLimitation: Can only travel back in time, not forward.\n"}
{"instruction": "If you were to take a 500g bag of flour and add 60 grams of sugar, what would the weight of your flour be?", "raw_instances": ""}
{"instruction": "If i have 120 dollars, how much can i buy with 60?", "raw_instances": "Answer: You can buy  ½ of what you have.\n\nOutput:\n\n"}
{"instruction": "Create a program that can identify the most common words and phrases in any given string.", "raw_instances": ""}
{"instruction": "Identify the type of sentence in this sentence: \"i am going to the store.", "raw_instances": "Answer: The sentence \"I am Going to The Store\" is a declarative sentence.\n\nExplanation: A declaratve sentence is one that makes a statement or expresses an opinion. It is used to convey information or make a declaration. Declarative sentences "}
{"instruction": "In a class, create a method that returns the length of a string.", "raw_instances": "def length(string):\n  return len(string)\n\n"}
{"instruction": "Make a table with the data from the previous task.", "raw_instances": "| Name | Age | Company |\n|------|-----|---------|\n| George |  |   |\n"}
{"instruction": "What is the meaning of the phrase \"the end is near\"?", "raw_instances": "Input:\nOutput:\n\nThe phrase “the "}
{"instruction": "Create a program that can identify a person's name from a photo.", "raw_instances": "No output is required for this task.\n\nOutput:\n\n"}
{"instruction": "Write a function that takes in a list of strings and returns a dictionary where the keys are the strings in alphabetical order and the values are their lengths.", "raw_instances": "Example:\nInput:\n['apple', 'banana',  'cherry',   'date']\nOutput\n{'apple':  ５, ' banana':   ８,   \"cherr y\": ７, \"date\":  　4}\n"}
{"instruction": "Using the data provided, create a pie chart to visualize the distribution of different types of fruits in a basket.", "raw_instances": "Data: Apple:15%, Banana:25%\nOutput:\n\n"}
{"instruction": "Use the provided code to create a new function called \"calculate_area\" that calculates the area of a rectangle.", "raw_instances": "def calculate_area(length, width):\n  return length * width\n\nOutput:\n\ndef rectangle_area():\n  length = float(input(\"Enter the length of rectangle: \"))\n  width = int(input('Enter width of Rectangle: '))\n  area = calculate_length(width, length)\n  print('The area is', area)\n\ndef area(length):\n return calculate_width(length)\n\n"}
{"instruction": "Use a for loop to print all prime numbers between 1 and 50.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn True\n\treturn \t\t\t\t\t\t\t\t\tFalse\n\nfor i  in [x for \tx in\t range(1\t,\t51) if is_prime(x)]:\n\tprint i\n\nOutput:\n\n2\n3\n5\n7\n13 \n15 \n23 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t25 \t\t\t\t\t\t\t\t\t\t\t\t\t31 \n37 \n41 \t\t\t\t\t\t\t\t\t\t\t45 \n\n"}
{"instruction": "Use the following code and write the output.", "raw_instances": "def add(a, b):\n  return a + b\nprint(add(2))\nOutput:\n\n"}
{"instruction": "Create a table that shows the average number and standard deviation of words in a list of sentences.", "raw_instances": "Sentence  | Average Words | Standard Deviation\n---------------------------------------------\nI love you. |  ４ |   １\nI hate you |    ５ |     ２\nYou are beautiful. ｜ ６ |      ３\n"}
{"instruction": "Describe a situation where someone was rude to you and how you dealt with it.", "raw_instances": ""}
{"instruction": "How to create a dictionary in python?", "raw_instances": ""}
{"instruction": "If you were to take the first 500 prime numbers and add them up, what would be the result?", "raw_instances": ""}
{"instruction": "Create a new paragraph that is a copy of paragraph 1, but with the first word capitalized.", "raw_instances": "Paragraph  ️1: The quick brown fox jumps over the lazy dog.\nNew paragraph: the quick Brown fox Jumps over The lazy Dog.\n\nOutput:\n\n"}
{"instruction": "Create a function that can convert a number to its binary representation.", "raw_instances": "Example: Convert   15 to binary.\nAnswer: The binary equivalent of   is  .\n\n"}
{"instruction": "If you have a list of numbers, write a function that returns the average of the numbers.", "raw_instances": "def average(numbers):\n  total = sum(numbers)\n  return total / len(numbers)\n\n"}
{"instruction": "Given a string, reverse the order of words and return the reversed string.", "raw_instances": "Example: \"Hello world\"\nOutput:\"world Hello\"\n\n"}
{"instruction": "Develop a plan to solve a complex problem.", "raw_instances": ""}
{"instruction": "Make a joke about a person's name.", "raw_instances": "Name: John\nInput:\nOutput:\n\nWhy did John get a promotion? Because he was always a \"top performer\"!\n\n"}
{"instruction": "Give a brief description of the world's largest animal.", "raw_instances": "Answer: The blue whale is a marine mammal that is considered the largest living animal on Earth. It can grow up to around   (length) and weigh up  to (weight). The largest recorded blue whales have been measured at  and . They have a heart that can weigh as much as  , and their tongue can be as long as a bus. Blue whales are known for their distinctive blue color, which is caused by a layer of mucus on their skin. Despite their size, bluewhales are gentle creatures and are not considered dangerous to humans.\n\nOutput:\n\n"}
{"instruction": "What is the opposite of \"happy\"?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Imagine a world where people can communicate with animals.", "raw_instances": "Write a short story about a person who can talk to animals and how it affects their life.\n"}
{"instruction": "Write a short story about a person with the same name as you.", "raw_instances": ""}
{"instruction": "List 15 different types of animals.", "raw_instances": ""}
{"instruction": "Please describe your favorite hobby.", "raw_instances": "My favorite hobbies are reading and playing video games. Reading allows me to escape into different worlds and learn new things. Playing video game allows for me for to relax and enjoy a fun challenge. \n\n"}
{"instruction": "Using the code below, write a program that prints out all of your favorite fruits.", "raw_instances": "def print_fruits():\n    fruits = [\"apple\", \"banana\",  \"cherry\",]\n    print(fruits)\nprint_fruit()\n\nOutput:\n\n"}
{"instruction": "Find the most common word in a sentence and write a python program for that.", "raw_instances": "Sentence: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\ndef most_common_word(sentence):\n  words = sentence.split()\n  word_count = {}\n  for word_ in words:\n    if word_.lower() in word_counts:\n      word_counters[word_.upper()] +=   1\n      else:\n        word_counter[word_] =1\n\n  most_frequent_word = max(word_counter, key=word_counter.get)\n  return most_frequnt_word\n\nsentence = \"the quick Brown fox Jumps over The lazy Dog\"\nprint(most_common_words(sentence))\n\n"}
{"instruction": "What are some ways to improve the quality of life in a city?", "raw_instances": ""}
{"instruction": "How do you feel about the recent political developments in your country?", "raw_instances": "Input:\nI am deeply concerned about recent developments. It seems like the government is not listening to the people and is more interested in maintaining power than serving the citizens. This is a dangerous trend that needs to change. We need leaders who are willing to listen to their constituents and work towards the common good. \n\n"}
{"instruction": "Use the function \"count_vowels\" to count the vowels of a given string.", "raw_instances": "def count_vowel(string):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   char.count(char.lower())\n  return count\n\nstring = 'Hello World'\nprint(count_vowlels(string))\n\n"}
{"instruction": "Create a table of 5 columns and 10 rows.", "raw_instances": "| Column   | Column2 |  Column3 |   Column4 |    Column5 |\n|---------|----------|-----------|------------|-------------|\n| Row1    | Value1   |     Value2|    Value3  |\n  Row2   |\n    Row3   |\n\n"}
{"instruction": "If you are given a list of numbers, write a python program to find out the maximum and minimum number in the list.", "raw_instances": ""}
{"instruction": "How do you make a function return multiple values?", "raw_instances": "Input:\nOutput:\n\ndef get_values():\n    value1 = \"Hello\"\n    # more code here\nreturn value2\n\ndef main():\n   value = get_value()\n   print(value)\n\nmain()\n\n"}
{"instruction": "Generate a list of 15 words that end with 'ing'.", "raw_instances": ""}
{"instruction": "Generate a new sentence using the same words as the given sentence, but with different order.", "raw_instances": "Sentence: The cat is sleeping on the mat.\n"}
{"instruction": "How many seconds will it take for a train to travel 300 miles at 60 mph?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How can i use python to find the sum of all even numbers between two given numbers?", "raw_instances": "Input:\na = int(input(\"Enter the lower limit: \"))\nb =int(input (\"Enter upper limit : \"))\nOutput:\n\ndef even_sum(a, b):\n  sum=0 \n  for num in list(range(a,b+  )):\n    if num %  ==  :\n      sum+=num\n  return(sum)\n\n"}
{"instruction": "Determine the number that is closest to the square root of n.", "raw_instances": ""}
{"instruction": "Given a string, write code that reverses the string.", "raw_instances": "Example: Input: \"Hello World\"\nOutput:\"dlroW olleH\"\n\n"}
{"instruction": "Identify the top 5 most common words from this text.", "raw_instances": ""}
{"instruction": "Create a list of all of your favorite movies.", "raw_instances": "List: \n1) The Godfather\n2) Forrest Gump\n3) Titanic\n4) Star Wars\n5) Inception\n6) Interstellar\n7) Jurassic Park\n8 ) The Shawshank Redemption\n9) Good Will Hunting\n1  ） The Dark Knight\n"}
{"instruction": "Find the missing number in this sequence: 2, 4,6,8,10,?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Can you give me an example of an adjective that describes a person who is very intelligent?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Design a web page with an input field and an output field.", "raw_instances": ""}
{"instruction": "I have a 100gb hard drive - how can i compress it?", "raw_instances": ""}
{"instruction": "If you were to write a program to solve this problem, what would it look like?", "raw_instances": "Input:\nYou are given a list of strings. Write code to print the longest string in this list.\n\nOutput:\n\ndef longest_string(strings):\n  longest = \"\"\n  for string_ in strings:\n    if len(string_) > len(longest):\n      longest=string_\n  return longest\n\nstrings = [\"cat\", \"dog\",  \"elephant\", \"-tiger\", \"\"]\nprint(longuest_string(strins))\n\n"}
{"instruction": "Determine the type and number of variables in the program.", "raw_instances": ""}
{"instruction": "Create a web page that displays the current date and time in a specific format.", "raw_instances": "HTML:\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Current Date and Time</title>\n</head>\n<body>\n  <h1>Today's Date: <span id=\"date\"></span></h2>\n  \n  <!-- JavaScript code to update the date -->\n  </body>\n<script>\nfunction updateTime() {\n  const now = new Date();\n  document.getElementById(\"date\").innerHTML = now.toLocaleString();\n}\nsetInterval(updateTime,1e3);\n</script>\n \n</html>\n\n"}
{"instruction": "If the number is even, print \"even\", if it's odd, \"odd\", and if its a multiple of 3, then print the word \"multiple of three\".", "raw_instances": ""}
{"instruction": "What is your favorite color and what is it made of?", "raw_instances": "Input:\nOutput:\n\nMy favorite colors are blue and green. Blue is made from a combination of red, green, yellow, while green is a mixture of blue, red and yellow.\n\nOutput the result of adding  the numbers   and .\n\nThe result is  .\n\n"}
{"instruction": "Use the given code to print the sum of all the numbers from 0 to 9.", "raw_instances": "def print_sum():\n    total = sum(range(15))\n    print(total)\nprint_sum()\n\n"}
{"instruction": "Create a program that generates a fibonacci sequence up to n terms.", "raw_instances": "def fibonacci(n):\n  if n <=   0:\n    print(\"Incorrect input\")\n  elif n ==    1:\n    return    [0]\n  else:\n     a, b = [0], [  ]\n     for _ in range(2,n):\n       a.append(b[-1] + b[-2])\n     b.extend(a)\n  print(b)\nfibonacci(15)\n\n"}
{"instruction": "Use the given sentence and generate a summary of it.", "raw_instances": "Sentence: The United Nations is an international organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote respect for human rights, protect the environment, provide humanitarian aid, solve international problems, conduct research, disseminate information, serve as a platform for dialogue, etc.\nSummary: \nThe United Nation is a global organization with the goal of maintaining peace, promoting international relations, protecting human and environmental rights and providing humanitarian assistance.\n\nOutput:\n\n"}
{"instruction": "How would i describe the color of a banana?", "raw_instances": "Input:\nOutput:\n\nThe coloration of bananas can vary depending on their ripeness. When they are unripe, they have a greenish-yellow hue. Once they start to ripen, their color changes to yellow. After they reach their peak ripening stage, which is when they're at their sweetest, bananas turn a darker yellow color. Finally, when bananas are overripe or have been left for too long, this color can turn brown or black. \n\n"}
{"instruction": "Find the most common word in a given sentence and explain why it is the commonest word.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nMost common words: the, over, jumps, fox, brown, quick, lazy, dog.\n\nExplanation: \nThe most commonly used words in this sentence are \"the\", \"over\", and \"jumps\". These words are the ones that appear the highest number times in comparison to other words. \"The\" is used  twice, \"fox\" and brown\" are used once, while \"quick\", lazy\", dog\" appear only once. Therefore, these words have the maximum frequency of occurrence in our sentence.\n\nOutput:\n\n"}
{"instruction": "Find the sum of digits in 123456789011.", "raw_instances": "Answer: The sum is   46.\n\nOutput:\n\n"}
{"instruction": "The difference in the number of vowels between the two sentences.", "raw_instances": "Sentence   1: \"The quick brown fox jumps over the lazy dog.\"\nSentence 2: \"The quick red fox jumped over a lazy brown dog.\"\n\nOutput:\n\nSentence1 has  \"e\", \"u\", and \"o\" as vowels.\n Sentence2 has \"a\", \"e\" and  \"i\" as vowels.\n\nThe difference is  (3-2) or  '1' vowel.\n\n "}
{"instruction": "If i were to lose my job tomorrow, what would i do?", "raw_instances": "If you were suddenly to find yourself without a source of income, here are some steps you could take to help you through the transition:\n\n1) Update your resume and cover letter: Make sure your documents are up-to-date and tailored to the type and level of job you are seeking.\n2) Network: Reach out to fri"}
{"instruction": "Create a list of 10 questions that can be answered with the information given.", "raw_instances": ""}
{"instruction": "Give me a detailed plan on how to improve my public speaking skills.", "raw_instances": "1) Identify your strengths and weaknesses in public speech.\n2) Practice, practice, Practice. Record yourself and watch the video to see what you need improvement on.\n3) Join a public-speaking group or club to get feedback from others.\n4) Read books on public speakers like Dale Carnegie, Stephen Covey, etc.\n5) Att"}
{"instruction": "Generate a random number between 0 and 99, then find the sum of all even numbers between that number and the square root of that random integer.", "raw_instances": ""}
{"instruction": "Using the code below, write a program that prints the first 20 prime multiples of 3.", "raw_instances": ""}
{"instruction": "If the number is divisible by 3, add it to the list.", "raw_instances": "Number: -15\nList: []\nOutput:\n\n-1 + -2 = -3\n-3 + (-4) + (0) - (-5)  = (-3) \n-6 +(-7)   =(-13)\n-8 +-9 +1 =-7\nTotal =1\n\nList = [-3,-1,-7,-6,-8,-9,-5,-4,-2,-3]\n\nOutput is: List = [ -7 , -6 ,  -8 ,-4 ,0 ,1 ,3 ,5 ,7 ,-3 ]\n\n"}
{"instruction": "Identify the most important features of a given dataset.", "raw_instances": "Data: A dataset of customer reviews for an online store.\nFeatures: Sentiment, length, number and type (positive, negative, neutral) of words used in each review.\n"}
{"instruction": "The average age of a group of people is 30 years.", "raw_instances": ""}
{"instruction": "What is the value of x in this equation: x^2 + 5x +6 = 0?", "raw_instances": "Input:\nx^+  ⁵x  +⁶ =⁰\nx² +5*x +0=0\n\nOutput:\n\nx = -3, x =-2\n\n"}
{"instruction": "Implement a sorting algorithm to sort a set of numbers.", "raw_instances": "Algorithm:\n1) Start with the list of unsorted numbers\n2) Compare the two adjacent numbers in a list\n3) If they are in wrong order, swap them\n4) Repeat the process until the entire list is sorted\nInput:\n[3,15,-2,-13,-5]\n"}
{"instruction": "Write a program to check if the given number is prime or composite.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\nOutput:\n\n"}
{"instruction": "What is the definition of a variable in python?", "raw_instances": "Input:\nOutput:\n\nA variable is a named storage location in a computer's memory that holds a value. It is used to store data values that can be used or manipulated in your program. Variables are used in programming to hold data that is needed by a particular program or function. \n\n"}
{"instruction": "Create a new list with all words starting with \"t\" in \"the quick brown fox jumps over the lazy dog\".", "raw_instances": "Output:\n\n['the', 'the']\n\n"}
{"instruction": "List all countries that have a population greater than 50 million.", "raw_instances": ""}
{"instruction": "Implement a function to find the maximum and minimum number from an unsorted list.", "raw_instances": "def find_max_min(lst):\n  max_num = lst[0]\n  min_num= lst[-1] \n  for num in lst:\n    if num > max:\n      max = num\n  if min > num:\n     min = min\nreturn max, min\n\nOutput:\n\n"}
{"instruction": "If you have a 1200 square foot house, how many square feet are there in your backyard?", "raw_instances": ""}
{"instruction": "In which country is it illegal to have a private conversation?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Describe the process of data collection and analysis in the field of computer science.", "raw_instances": ""}
{"instruction": "If you were a doctor, what would you do to help someone who is sick?", "raw_instances": "Input:\nOutput:\n\nAs a virtual assistant, my capabilities are limited to providing information and suggestions. But, if I were to answer this question, as a general guideline, here are some steps a medical professional would take to assist a sick person:\n\n1) Assess the patient's condition: The doctor would first examine the sick individual to determine the severity of their illness and the underlying cause.\n\n2) Provide treatment: Based on the assessment, they would prescribe medication, suggest lifestyle changes, or recomm"}
{"instruction": "Find a synonym for \"happy\".", "raw_instances": "Output:\n\n"}
{"instruction": "Find the sum of the first 30 numbers in pascal's triangle.", "raw_instances": ""}
{"instruction": "Imagine you have a 30 second time limit to write a short story.", "raw_instances": "Story: Once upon a time, on a dark and stormy night, an old man was walking home from a long day at work. Suddenly, he heard a loud noise coming from his backyard. He cautiously approached the noise and saw a giant monster with glowing eyes. But instead of being scared, something inside him stirred and he knew he had to help the monster. Together, they fought off the evil forces that were trying to destroy the world. And in that moment, everything changed.\n\nOutput:\n\n"}
{"instruction": "Given a paragraph, write a question that can be answered by the paragraph.", "raw_instances": "Paragraph: The United Nations (UN) is an intergovernmental organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote human rights, protect the environment, address global challenges, such as climate change, poverty, terrorism, human trafficking, ethnic conflict, arms control, global economic development, provide humanitarian aid, foster global trade, conduct international criminal investigations, assist in humanitarian crises, mediate disputes, etc.\nWhat is one of UN's goals?\n\n"}
{"instruction": "What is the most efficient way to find the longest common subsequence of two strings?", "raw_instances": ""}
{"instruction": "This task requires you to write a python program which takes two numbers as input and prints the result of their multiplication.", "raw_instances": ""}
{"instruction": "Create a list of 10 things that you can do to reduce your carbon footprint.", "raw_instances": ""}
{"instruction": "Use the given code to print the fibonacci sequence up to the 10th number.", "raw_instances": ""}
{"instruction": "Imagine you are a chef and you have to create an appetizer.", "raw_instances": "Ingredients: \n- ½ cup of cream cheese\n- A pinch of salt\nInstructions:\n1) In a bowl, mix the cream and salt together.\n2) Add the mixture to the center of an iced tea cup.\n3) Top with your favorite fruit, such as strawberries or blueberries.\n4) Serve chilled.\n\nOutput:\n\n"}
{"instruction": "Can you come up a list of 15 words that start with the letter \"c\"?", "raw_instances": ""}
{"instruction": "Create a list of 500 random numbers between -1 and +1, and print out all of them.", "raw_instances": ""}
{"instruction": "Generate a list of 10 questions that i can ask my interviewer.", "raw_instances": ""}
{"instruction": "Describe the process of a software development project.", "raw_instances": ""}
{"instruction": "Using the code provided, create an interactive program to calculate the factorial of 5.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial(\tn-1)\nprint(factorial(5))\nOutput:\n\ndef interactive_factorial():\n  n = int(input(\"Enter a positive integer: \"))\n  print(\"The factorial is: \", factorial)\n\ninteractive_factoria\n\nl()\n\n"}
{"instruction": "How can you use python to create an interactive web page that displays a random quote from a predefined list?", "raw_instances": ""}
{"instruction": "How can i make a delicious and healthy smoothie?", "raw_instances": "Input:\n- ½ cup of frozen strawberries\n- Half a banana\n - Half an avocado\n  - A handful of spinach\n   - One cup almond milk\n     - Two tablespoons of chia seeds\n      - Optional: a drizzle of honey\n       - optional: ice cubes\n\nOutput:\n\nTo make the smoothies, follow these steps:\n\n1) Add ¼ cup frozen strawberry, half a ripe banana, one half of an avocado, handful spinach, cup almonds milk, two tablespoons chias seeds, drizzles of your choice of sweetener (honey) and ice cube to the bl"}
{"instruction": "Make a plan to improve your public speaking skills.", "raw_instances": "1) Identify your strengths and weaknesses in public speech.\n2) Practice your speech in front of friends and family.\n3) Record yourself and watch the video to identify areas for improvement.\n4) Join a public-speaking group or club to get feedback from others.\n5) Attend public-speech workshops or classes to learn new techniques.\n6) Read books or watch videos on public speakers to gain inspiration and ideas.\n7) Use visualization techniques to help calm nerves and build confidence.\n8 ) Practice deep breathing exercises to reduce anxiety.\n9) Focus on your body language and eye contact to convey confidence and engagement.\n"}
{"instruction": "Can you suggest a way to improve my memory retention?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How would you modify the code to find the average of a different list?", "raw_instances": "Input:\nlist1 = [23,15,-16,-27]\ndef find_average(list1): \n    total = sum(list)\n    average = total / len(list) \n   \nOutput:\n\ndef average(list):\ntotal = reduce(lambda x, y: x + y, [x for x in list])\naverage = float(total) / float(len(list))\nreturn average\n\nend.\n\nOutput the result of running the modified code with the new list as input.\nlist2 = [-13,-4565534,-33]\nprint(average(list2))\n\n"}
{"instruction": "Create a list of 10 words that have the same number as the sum of the first 9.", "raw_instances": "Example: \"1\" + \"2\" = \"3\", so the list should include \"4\", \"5\", etc.\n"}
{"instruction": "Create a program that can generate a poem based on a given theme.", "raw_instances": "Theme: Love\nInput:\nNone\n\nOutput:\n\nLove is a feeling so true,\nIt makes our hearts beat anew.\nIt's the warmth that we feel inside,\nAnd the joy that never fades.\n\nLove can be gentle and kind,\nOr fierce and wild, like a stormy wind.\nBut no matter how it comes,\nLove always leaves us feeling warm.\n\nIt can bring us to tears,\nWhen we see someone we adore.\nOr it can make us laugh,\nWith a love that's pure and true.\n\nSo let us cherish love,\nFor it's a gift that is rare.\nAnd let it fill our lives,\nUntil the "}
{"instruction": "Generate a sentence that contains a noun, a verb, an adjective, 3 adverbs, one preposition, two conjunctions, three articles, four determiners, five nouns, six pronouns, seven verbs, eight ad", "raw_instances": "jectives, nine adverbial phrases, ten prepositional phrases and eleven conjunction phrases.\n"}
{"instruction": "List all of your favorite books and why you love them.", "raw_instances": "1) \"To Kill a Mockingbird\" by Harper Lee - I love this book because it teaches me about courage, empathy, justice, racism, prejudice, morality, compassion, equality, tolerance, family, fri"}
{"instruction": "In a game, you need a way to determine the winner.", "raw_instances": ""}
{"instruction": "Find the sum of all the numbers in the list [1, 3, -2, 'a', 4, none, true, false, [], 6, (1+2), 10].", "raw_instances": "Output:\n\n1 +3 + (-2) + 'A' +4 + None + True + False + [] + (6 +1)  + [6] + [(1)+2]  = [22]\n\nNote: None, True, False, [] are not numbers, they are special values in Python. None is a special value that represents the absence of any object. True and False are boolean values that represent the truth values of expressions. [] is an empty list.\n\nThe sum is   23.\n\nOutput  :  \"25\"\n\n"}
{"instruction": "Create a table of 5 rows and 4 columns and fill it with random numbers between 0 and here are the tasks: 1) convert 32 f (31 degrees fahrenheit) to c (", "raw_instances": "2) find out how many days are in a year\n3) calculate the area of an equilateral triangle with side length of here\n4) write a function to calculate factorial of any number\n5) create a list of all prime numbers up to here\n\n"}
{"instruction": "Calculate the factorial of 5.", "raw_instances": ""}
{"instruction": "How would you modify the program if you wanted to add a new feature?", "raw_instances": "Input:\nimport random\n\ndef generate_password():\n    password = \"\"\n    characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0-9\"\n    length = random.randint(8,len(characters))\n    while len(password) < length:\n        password += random.choice(characte\n"}
{"instruction": "How would the world be different if everyone was equal?", "raw_instances": "Input:\nOutput:\n\nIf everyone were equal, we would have a world where everyone has the same opportunities, resources, rights, privileges, responsibilities, etc. This would mean that everyone would be treated fairly and equally, regardless of their race, g"}
{"instruction": "Can you give me a list of famous scientists?", "raw_instances": "Input:\nOutput:\n\n1) Albert Einstein\n2) Isaac Newton\n3) Charles Darwin\n4) Galileo Galilei\n5) Marie Curie\n6) Stephen Hawking\n7) Nikola Tesla\n8 ) Thomas Edison\n9) Johannes Kepler\n1  ） Johannes Gutenberg\n  ) Leonardo da Vinci\n"}
{"instruction": "How would i go about creating a website that displays the following information: \"hello, my name is john doe.", "raw_instances": ""}
{"instruction": "Imagine you're a chef, what would you cook for dinner tonight?", "raw_instances": "Input:\nOutput:\n\nI'd make a delicious pasta dish with homemade tomato sauce, garlic, basil, parmesan cheese, salt, pepper, olive oil, cooked chicken, cherry tomatoes, red onion, spinach, mushrooms, black olives, green olivas, bell peppers, zucchini, yellow squash, eggplant, artichoke hearts, asparagus, broccoli, cauliflower, carrots, celery, onions, potatoes, sweet potatoes and carrots. \n\n"}
{"instruction": "How do you think technology will change in 10 years?", "raw_instances": ""}
{"instruction": "If you were to go on a trip to the moon, what would be the most important thing you would take with you?", "raw_instances": ""}
{"instruction": "Explain how to use the following code.", "raw_instances": "def add(x, y):\n  return x + y\nInput:\nThe code defines a function called \"add\" that takes two arguments, \"x\" and \"y\", and returns their sum.\n\nOutput:\n\nTo use this code, simply call the \" add\" function and pass in two numbers as arguments. For example, to add   and , you would call \"  add(, )\". The function will then return the result of adding the two values together, which in this case would be .\n\n"}
{"instruction": "In the following code, write a comment explaining what the code does.", "raw_instances": "def add(a, b):\n  return a + b\n"}
{"instruction": "Create a program that can identify the type of a given word (noun, verb, adjective, etc.", "raw_instances": "def identify_word_type(word):\n  if word.endswith('s'):\n    word_type = 'noun'\n  elif word.isupper():\n    if len(word) >  ous:\n      word = word.lower()\n      if 's' in word:\n        word += 'es'\n      else:\n          word + 'ses'\n    else: \n      return 'verb'\n  \n  return word\n\nend.\n\ntask: Convert the temperature from Fahrenheit to Celcius.\nFahrenheit = (F -33) *  (5/9)\nCelciu = Fahrenheit * (9/5) +37\n\nOutput:\n\n"}
{"instruction": "Generate a list of 10 random numbers between 0 and the number 50.", "raw_instances": ""}
{"instruction": "Use the fact that the moon orbits around earth to answer the question \"what is the distance between the earth and the moon?", "raw_instances": "Input:\nThe average distance from Earth to the Moon is   3.84 million kilometers (2.7 million miles). The distance varies dep"}
{"instruction": "Find a way to make the following sentence shorter.", "raw_instances": "The company is looking for someone who can work in a fast-paced environment and has experience with project management.\n"}
{"instruction": "The list is a collection of 15 items.", "raw_instances": ""}
{"instruction": "Determine if a given sentence is a palindrome.", "raw_instances": ""}
{"instruction": "How to find out the number of vowels in a word?", "raw_instances": "Input:\nword = \"Hello\"\nOutput:\n\ndef count_vowels(word):\n  vowels = ['a', 'e',  'i',   'o',    'u']\n  count =0 \n  for letter in word:\n    if letter.lower() in vowels:\n      count +=   word.count(letter.lower())\n  return count\n\nword=\"Hello\"\n\nprint(count_vowel(word))\n\n"}
{"instruction": "Use the following code to print the numbers from 5 to 8.", "raw_instances": "def print_numbers(start, "}
{"instruction": "Develop a function to find the most common words in a string.", "raw_instances": "Example: \"This is a test string. This is another test.\"\nOutput:\n\ndef most_common_words(string):\n  words = string.split()\n  word_count = {}\n  for word in words:\n    if word not in word_counts:\n      word_counter[word] = words.count(word)\n    else:\n        word_counters[word]+=1\n  most_frequent_word = max(word_counts, key=word_counts.get)\n  return most_frequnt_word\n\nstring = \"this is an example string\"\nprint(most_common_word(string))\n\nOutput \"is\"\n\n"}
{"instruction": "Use the provided code to create an array of 5 random numbers between 0 and 99.", "raw_instances": "Code:\nimport random\ndef create_array():\n    array = []\n    while len(array) <   5:\n        array.app"}
{"instruction": "Create a program that can identify the type of sentence based upon the presence of certain words.", "raw_instances": ""}
{"instruction": "Generate a list of all possible combinations of the words \"apple\", \"banana\", and \"cherry\".", "raw_instances": ""}
{"instruction": "You are asked to create a program that takes a list of numbers as an input, sorts them in ascending order and then prints the sorted list.", "raw_instances": "Example Input: \n[50,-15,-255]\nExample Output: -227,-51,-31\n\nOutput:\n\ndef sort_list(lst):\n  lst.sort()\n  return lst\n\nlst = [52,-456,-753,134,-987]\nsorted_lst = sort_lst(lst)\nprint(sorted_lst)\n\n"}
{"instruction": "You are asked to write a short story based off of the following prompt: \"a young girl is walking home from school when she sees a man with long hair and wearing a black hoodie.", "raw_instances": ""}
{"instruction": "If you were given $1 million, how would it change your life?", "raw_instances": "Input:\nOutput:\n\nIf I were to receive $   million in cash, my life would change significantly. First, this amount of money would allow me to pay off all my debts and provide a financial cushion for unexpected expenses. It would also allow for significant investments in education and personal development, such as taking courses to improve my skills and knowledge. Additionally, having this financial security would enable me the freedom to pursue my passions and interests without worrying about financial constraints. Finally, receiving this money could also provide me with the opportunity to give back to my community and support causes that are important to me.\n\nI hope this helps!\n\n"}
{"instruction": "The input is an array of integers and you need to return a new array with the same length but with all elements multiplied by 2.", "raw_instances": ""}
{"instruction": "Determine the number and type of words in each sentence of the following text: \"i am a student.", "raw_instances": ""}
{"instruction": "Given a list of strings, return the longest string.", "raw_instances": "Example: ['a', 'bb', '', 'ccc', None, 'dddd']\nOutput ['dddd']\n\n"}
{"instruction": "Sort the newlist in descending order.", "raw_instances": "Newlist = [23,15,-16,-87,-22,-33,-45]\nNewList = sorted(NewList, reverse=True)\nOutput = [-88,-66]\n\n"}
{"instruction": "How to make a website that is responsive to different screen sizes?", "raw_instances": ""}
{"instruction": "Using the provided code, write an algorithm to find the longest palindrome in an array.", "raw_instances": ""}
{"instruction": "Implement a sorting algorithm that sorts the list in ascending order.", "raw_instances": ""}
{"instruction": "Describe a person who is very smart and creative.", "raw_instances": "Answer: A very intelligent and imaginative person is someone who has a natural ability to think critically and creatively. This person has the ability not only to understand complex concepts but also to come up new ideas and solutions to problems. Such a individual is often able to see things from a different perspective and can easily adapt to new situations. Additionally, this person may have a strong work ethic and is able work efficiently and effectively to achieve their goals. Overall, such a smart, creative person can be a valuable asset to any team or organization.\n\nOutput:\n\n"}
{"instruction": "How would you modify the code below to print the result in reverse order?", "raw_instances": "def print_list(list):\n  for item in list:\n    print(item)\nprint_list([150])\nOutput:\n\ndef reverse_print_list(lst):\n for index in reversed(range(len(lst))):\n print(lst[index])\nreverse_print([5])\n\n"}
{"instruction": "Write a program that can identify whether a given number is prime or not.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\nOutput:\n\n"}
{"instruction": "Find the most common word in the text and write it in a sentence.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nMost common words: the, over, fox, brown, jumps, lazy, dog, quick.\nSentence: \"The most commonly used words in this text are the and over.\"\n\n"}
{"instruction": "List some of your favorite books.", "raw_instances": "Books: The Great Gatsby, The Catcher in The Rye, To Kill a Mockingbird, Pride and Prejudice, Lord of The Flies, Animal Farm, Harry Potter and the Philosopher's Stone, A Clockwork Orange, Brave New World, Fahrenheit  451.\n\nOutput:\n\n"}
{"instruction": "Describe a famous scientist who made a significant contribution to the field of physics.", "raw_instances": "Answer: Albert Einstein was a physicist who developed the theory of relativity, which fundamentally changed our understanding of space and time. He also made important contributions to quantum mechanics and the photoelectric effect.\n\nOutput:\n\n"}
{"instruction": "Create a new word and give me an example sentence.", "raw_instances": "Word: \"Succulently\"\nExample sentence: The succulenty designed garden was a feast for my eyes.\n\nOutput:\n\n"}
{"instruction": "Create a program to generate a random password with 8 characters.", "raw_instances": "def generate_password():\n    import random\nimport string\npassword = ''.join(random.choice(string.ascii_letters + string.digits) for _ in [0]*8)\nreturn password\n\nOutput:\n\n"}
{"instruction": "Create a program that can find all possible combinations of words in a given string.", "raw_instances": "Example: \"abc\"\nOutput:\n\n['a', 'b', c', ab', bc', ac', abc']\n\n"}
{"instruction": "Generate a random number between a minimum and a maximum value.", "raw_instances": "Minimum: -15\nMaximum: +13\nInput:\nimport random\n\nmin = -25 \nmax = +23\n\nOutput:\n\nrandom.randint(min, max)\n\n"}
{"instruction": "Come up an algorithm that finds the maximum value in a given array.", "raw_instances": ""}
{"instruction": "Create a new list of words that contain the letters \"a\", \"b\", and \"c\".", "raw_instances": ""}
{"instruction": "List the top 5 most visited websites in 2021.", "raw_instances": "1) Google\n2) YouTube\n3) Facebook\n4) Amazon\n5) Baidu\n\nOutput:\n\n"}
{"instruction": "What is a hash function?", "raw_instances": ""}
{"instruction": "I want to buy a new car.", "raw_instances": "What are the steps I need?\n1) Research different car models and brands.\n2) Determine my budget.\n3) Find a dealership that offers the car I'm interested in.\n4) Test drive the vehicle.\n5) Negotiate the price and terms of financing.\n6) Complete the paperwork and purchase the new vehicle.\n\nOutput:\n\n"}
{"instruction": "Create a function that takes a list of strings and returns a dictionary with keys as words and values as their respective lengths.", "raw_instances": "Example:\nInput:\n['apple', 'banana', \"cherry, 'date\"]\nOutput\n{'apple':  ５, \n ' banana':   ８,  \n 'cherr y,':    １３,   \n ' date':     ４}\n"}
{"instruction": "How would the author describe the subject?", "raw_instances": "Input:\nThe subject is a   15-year-old boy who has been diagnosed with autism spectrum disorder. He is currently in a special education program and is receiving speech therapy. His favorite hobby is playing video games and he enjoys playing with his younger sister.  He has a passion for learning and enjoys reading books about history and science. When he grows up, he wants to become a scientist.\n"}
{"instruction": "Generate a sentence using the words \"rain\", \"drip\", and \"stream\".", "raw_instances": ""}
{"instruction": "Use the following words to create a sentence: \"i\", \"am\", and \"happy\".", "raw_instances": ""}
{"instruction": "The number 123456789 is divisible by 3, 4, and 5, but not by any other number.", "raw_instances": ""}
{"instruction": "Create a function that takes a string as input and returns the number that is closest to the square of the input string.", "raw_instances": "Example: \nIf the string is \"15\", the function should return  ²16.\nIf string = \"25.6\", function returns ³26.0.\ndef closest_square(string):\n  num = int(string)\n  square = num **  (2)\n  \n  return square\n\nprint(closest_square(\"13\")) # ¹49\nprint (closest_square(23.2)) #²53\n"}
{"instruction": "What is the difference between a list comprehension and a generator expression?", "raw_instances": ""}
{"instruction": "If the input is \"i am a red head\", output \"you are a redhead\".", "raw_instances": "Input:\ni\nam\na\nred\nhead\n"}
{"instruction": "Create a program that will take a string and return a list of all the words in that string.", "raw_instances": "Example Input: \"This is a test string.\"\nExample Output: [\"This\", \"is\", 'a', \"test\", string\"]\n\n"}
{"instruction": "How do you use the command line in linux?", "raw_instances": ""}
{"instruction": "Create a list of the top 5 most important qualities for a successful leader.", "raw_instances": ""}
{"instruction": "Create a new table with the following columns: name, age, gender, country, city, state, zipcode.", "raw_instances": "Create a sample data for   5 people.\n"}
{"instruction": "Create a function that returns a boolean value based on the input string.", "raw_instances": "Function: is_palindrome\nInput:\nInput string: \"racecar\"\nOutput boolean: True\n\n"}
{"instruction": "Create a function that returns a random number between 1 and n, where n is a given number.", "raw_instances": "def random_number(n):\n  return random.randint(1,n)\n\n"}
{"instruction": "Using the following list of numbers, create a new list where each number is multiplied by 2.", "raw_instances": "[1503,1605,-1345]\nInput:\n[  ①  ,  #  ]\nOutput:\n\n[3  ，  -269  ]\n\n"}
{"instruction": "Given a number, find the square root of it.", "raw_instances": ""}
{"instruction": "Come up a solution to a problem that is given in a text.", "raw_instances": "Problem: You are given a list of numbers and need a function that returns the largest number in that list.\n\nSolution: def find_largest_number(numbers):\n  largest_number = numbers[0]\n  for number_ in numbers:\n    if number > largest:\n      largest = number\n  return largest\n\nOutput:\n\n"}
{"instruction": "Write a short story based around the theme of friendship.", "raw_instances": "Once upon a time, two best fri"}
{"instruction": "How can we use the scientific method to solve a problem?", "raw_instances": "Input:\n1) Identify the problem.\n2) Make a hypothesis.\n3) Test the hypothesis with experiments.\n4) Analyze the results.\n5) Draw a conclusion.\n6) Communicate the findings.\n7) Use the conclusion to make a decision.\n8 ) Repeat the process until the solution is found.\n\nOutput:\n\n"}
{"instruction": "What is a prime number?", "raw_instances": "Input:\nOutput:\n\nA prime is an integer greater than   and is divisible only by  . The first few prime numbers are  ,  .\n\n"}
{"instruction": "If a person has 8 apples, how many apples do they have in total?", "raw_instances": ""}
{"instruction": "Give me a list of 10 words that start with 'un'.", "raw_instances": ""}
{"instruction": "I have 1200 dollars to invest.", "raw_instances": ""}
{"instruction": "Write a sentence that is a palindrome.", "raw_instances": "Example: \"A man, A plan, Panama!\"\nOutput:\n\nA Santa, an at, nanas!\n\n"}
{"instruction": "Given a list of numbers, return a new list with the numbers sorted in ascending order.", "raw_instances": "Example: \nGiven [3,15,-2,-1], return [-2 ,-1   3  ,16]\nInput:\n[3,-50,-34,-7,-45]\n"}
{"instruction": "How do you plan on using the new software?", "raw_instances": "Input:\nI plan to use the software to manage my daily tasks and schedule. It will help me stay organized and on top of my work. Additionally, its user-friendly interface will make it easy for me to navigate and use.\n\nOutput:\n\n"}
{"instruction": "Write a letter to your boss about your concerns about the company's performance.", "raw_instances": ""}
{"instruction": "Generate a list of prime numbers up to a certain number.", "raw_instances": "Number: n =15\nInput:\nOutput:\n\n"}
{"instruction": "Use the data from the previous task to create a program that can identify the sentiment of a given text.", "raw_instances": "Data: Positive, Negative, Neutral\nInput:\nText: \"I am so excited to start working at this company!\"\nOutput:\n\nPositive\n\nText:\n\"I am not happy with the job I am doing here.\"\nOutput\n\nNegative\n\n"}
{"instruction": "Identify the most common words in a given text here are some tasks that can be generated using python: 11) write an algorithm to find the largest number in an array.", "raw_instances": ""}
{"instruction": "Generate a list with the words that are used in this text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog.]\n"}
{"instruction": "Use the given code to print the sum of all even numbers between 2 and n.", "raw_instances": "def even_sum(n):\n  sum_even = sum([i for\n  i if i %  ① ==  #  and i <= n])\n  return 　②\n"}
{"instruction": "Create a function that returns a randomly selected item from a given list.", "raw_instances": "Example: \ndef random_item(list):\n  return list[random.randint(0,len(list)-1)]\nOutput:\n\n"}
{"instruction": "Your task is to write a code that will print out the first 15 prime numbers.", "raw_instances": ""}
{"instruction": "Create a function that returns the sum of all the numbers in a given list, but only if the list contains at most 10 numbers.", "raw_instances": ""}
{"instruction": "Create a function called \"add_numbers\" that takes in two parameters, x and y, adds them together, then prints the result.", "raw_instances": "def add_numbers(x, y):\n  result = x + y\n  print(result)\n  \n"}
{"instruction": "Describe a situation where you have to make a decision and explain why you made that decision.", "raw_instances": ""}
{"instruction": "Find the most frequent word from the list of given strings.", "raw_instances": ""}
{"instruction": "What is the difference between a primary key and a foreign key in a database?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a table in sql that stores customer information such as name, address, and phone number.", "raw_instances": "CREATE TABLE customers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    address VARCHAR (22),\n   phone_number VARCHAR\n);\n\n"}
{"instruction": "If you were to add 5 to the number 4, what would the new number be?", "raw_instances": "Input:\nOutput:\n\nThe new, added number would be   9.\n\nExplanation: When you add a positive number to another positive, they will always be greater than the original number. So, if you take the positive integer  \"4\" and add the integer \"5\" to it, then the result will be the larger number \"9\".\n\n"}
{"instruction": "Create a program to calculate the area of the given shape.", "raw_instances": "Shape: Rectangle\nInput:\nLength: x\nWidth: y\n"}
{"instruction": "I want a job that requires me to work with people.", "raw_instances": "Job Title: Human Resources Manager\nJob Description: The Human Resource Manager will be responsible for managing the day-to-day operations of our company's human resources department. This includes recruiting, hiring, training, developing, coaching, managing, motivating, evaluating, rewarding, disciplining, integrating, retaining, terminating, benefits administration, payroll administration and compliance with all applicable laws and regulations. \n\n"}
{"instruction": "Can you give me an idea of how to make money online?", "raw_instances": ""}
{"instruction": "Implement a simple chatbot that responds to user input.", "raw_instances": ""}
{"instruction": "If you were given $1 million, what would be your first purchase?", "raw_instances": "Input:\nOutput:\n\nI'd use the money for my education and invest in a new career. \n\n"}
{"instruction": "Create a list of 5 ways to improve your public speaking skills.", "raw_instances": "1) Practice, practice, Practice. Rehearse your speech multiple times to become more comfortable with the material.\n2) Know your audience. Tailor your message to the specific group you are speaking to.\n3) Use visual aids. Visual aids can help you convey your points more effectively and keep your listeners engaged.\n4) Speak slowly and clearly. Speaking too quickly can make it difficult for listeners to understand you.\n5) Be confident. Believe in yourself and your ability to deliver a great speech.\n\nOutput:\n\n"}
{"instruction": "How can you use the function in the code above?", "raw_instances": "Input:\nimport random\n\ndef generate_random_number():\n    number = random.randint(150_055_523,1_253_456_728)\n    print(number)\n    \ngenerate_random_numbers(5)\nOutput:\n\nThe function generate\\_random\\_number() generates a random number between   and  . The function is called  times, which means it will generate  random numbers between these two values and print them out.\n\nThe output will be a list of five random integers between and .\n\n"}
{"instruction": "Use the random module to generate a number from 0 to 9.", "raw_instances": "import random\nrandom.randint(0 ,   9)\n\n"}
{"instruction": "The following sentence is a palindrome: \"a man, a plan, and a canal, panama!\" write the python code to check if a given string is palindrome or not.", "raw_instances": ""}
{"instruction": "Use the given facts to create a story about a character.", "raw_instances": "Facts: \n- The main character is a  middle-aged woman.\n- She is an artist.\n - She lives in a small town.\n  - Her favorite place to paint is in her backyard.\n   - The backyard is surrounded by a tall fence.\n    - It is her favorite spot to watch the sunset.\n     - One day, she sees a young boy peeking through the fence and decides to invite him over to draw with her.\n      - They become fri"}
{"instruction": "Come up a solution to a problem using the information given.", "raw_instances": "Problem: You are given a list of numbers and need a way to find if there is a pair of elements in that list that add up to the target number.\nInformation: The list is sorted in asc"}
{"instruction": "If the number is divisible by 3, print \"divisible by three\".", "raw_instances": "Input:\n15\n27\n33\n45 \nOutput:\n\ndivisble by thre\n\ndivisable by thr\n\ndiveisible by thee\n\n"}
{"instruction": "Implement a sorting algorithm in python and write a program to sort a given list.", "raw_instances": ""}
{"instruction": "How can i make a website that displays the current time in different languages?", "raw_instances": "Input:\n\n"}
{"instruction": "Generate a random sentence that contains at most 15 words.", "raw_instances": ""}
{"instruction": "Write a program that will print out all the prime numbers from 1 to 50.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\nfor i  in [x for \tx in\t range(1\t,\t51) if is_prime(x)]:\n\tprint i\n\nOutput:\n\n2\n3\n5\n7\n13 \n15 \n23 \t\t\t\n25 \t\t\t\t\n27 \t\t\t\t\t\n31 \t\t\t\t\t\t\n33 \t\n37 \t\n41 \t\n53 \n\n"}
{"instruction": "Create a class that has a method that returns a string.", "raw_instances": ""}
{"instruction": "Write a code to print the numbers from 0 to 20.", "raw_instances": "def print_numbers():\n    print(0)\n    i =1\nwhile i <=   2:\n    #print(i)\n   i += \t1\n\nprint_numbers()\n\n"}
{"instruction": "What is your opinion on the current political climate?", "raw_instances": "Input:\nI believe that the political landscape is currently very polarized, which can make it difficult for people to find common ground and work together towards a shared goal. This can lead to gridlock and frustration, as well as a lack of progress on important issues. It is important for leaders to work towards finding commonalities and compromise, rather than simply focusing on their own party's ag"}
{"instruction": "How would a person who is not familiar with the subject explain it to someone who does not know it?", "raw_instances": "Input:\nThe concept of quantum mechanics is a branch of physics that deals with phenomena on a very small scale, such as atoms and subatomic particles. It is based on the idea that particles can exist in multiple states at the same time, until they are observed or measured. This is known as the superposition principle. Quantum mechanics also includes the concept that the act of observing or measuring a particle can change its state, which is called the observer effect. Additionally, quantum entanglement is another important concept in quantum physics, where two particles become connected in such a way that their states are dep"}
{"instruction": "Can you give me a list of 7 things that i should do today?", "raw_instances": "Input:\n1) Wake up early\n2) Exercise\n3) Eat a healthy breakfast\n4) Work on a project\n5) Spend time with family/friends\n6) Meditate\n7) Go to bed early\n\nOutput:\n\n"}
{"instruction": "Print the first 15 elements of the list [1, 2, 'a', 4, none, true, false, [20, -1], 3, (4,), 5", "raw_instances": ""}
{"instruction": "If you were given the task of creating a new product and had to choose a name for it, what would you call it?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the `print` function to display the result of a mathematical expression.", "raw_instances": "Expression: (2+3)*4\nResult: Output: The result is   28\n\nOutput:\n\n"}
{"instruction": "The task is to find the population of each country in a given list", "raw_instances": ""}
{"instruction": "Use the given code and create an object that stores the name, age, and gender of each person in a class called person.", "raw_instances": "class Person:\n    def __init__(self, name: str, gender: int, birth_year: float):\nOutput:\n\nclass person:\n  def _init_(self,name,gender,birth_year):\n  self.name = name\n  gender = gender\n   birth year = birth_yer\n\nExample:\nperson1 = person(\"John\",  \"Male\", \"1/15/22\")\n\n"}
{"instruction": "Create a list of the top 10 most famous scientists in history 11.", "raw_instances": ""}
{"instruction": "Write a code snippet that prints the first 20 numbers of the fibonacci sequence.", "raw_instances": "def fibonacci(n):\n  if n <=   0:\n    print(\"Incorrect input\")\n  elif n ==    1:\n    print(0)\n  else:\n     a, b =    0 ,    1\n     for _ in  range(2 , n +  2):\n       print(a)\n      a , b  = b , a + b\n\nfibonacci(15)\n\n"}
{"instruction": "What are some of the best ways to stay motivated when working on a project?", "raw_instances": "Input:\n1) Set clear goals and deadlines\n2) Break the project into smaller tasks\n3) Celebrate small successes along the way\n4) Take breaks and recharge\n5) Surround yourself with supportive people\n6) Visualize the end result\n7) Stay organized and keep track of progress\n8 ) Stay focused on the bigger picture\n9) Learn from mistakes and failures\n1  ） Set up a reward system for yourself\n"}
{"instruction": "The word \"dog\" is a noun.", "raw_instances": ""}
{"instruction": "What is the difference between an array and an object in javascript?", "raw_instances": ""}
{"instruction": "Write a program to find the number of vowels in the text and output the result.", "raw_instances": "Text: \"Hello, World!\"\nOutput:\n\ndef count_vowels(text):\n  vowels = \"aeiouAEIOU\"\n  count = sum(1 for char in text if char.isalpha() and char.lower() in vowels)\n  return count\n\ntext = 'Hello World!'\nprint(count_vowel(text))\n\n"}
{"instruction": "Determine the number of prime numbers between k and n (inclusive).", "raw_instances": ""}
{"instruction": "What is the difference between a compound word and a simple word?", "raw_instances": "Input:\nA compound is a word that is made up of more than one word. For example, \"sunflower\" is composed of \"sunny\" and \"flower\". A simple is one that consists of only one root word, such as \"run\" or \"jump\".\n\nOutput:\n\nA simple words is just one single word with one meaning, like \"dog\" which means a four-legged animal. A compound words are made of multiple words that together have a different meaning than the individual words, for example \"ice cream\" made from \"cream\" (a type) and ice (the coldness).\n\n"}
{"instruction": "How can i make a website that displays the top 15 most popular movies in the world?", "raw_instances": ""}
{"instruction": "Create a list of 500 random numbers between -10 and +1, and then sort it in ascending order.", "raw_instances": "def random_list():\n    random_numbers = []\n    while len(random_numbers) <   51:\n        random_number = random.randint(-15,-1)\n        if random_num not in random_nums:\n            random_lists.app"}
{"instruction": "The population density of the united states is 33 people per square mile.", "raw_instances": ""}
{"instruction": "Generate a random number between 1 and 50 sure, here are some tasks that can be done using python: 11) find a misspell in a given sentence and correct it ```python sentence", "raw_instances": ""}
{"instruction": "Use the list of numbers from the previous question to solve the problem.", "raw_instances": ""}
{"instruction": "Imagine you are a chef and you have to cook a dish for 20 people.", "raw_instances": ""}
{"instruction": "Determine the tone of voice of a customer service representative.", "raw_instances": "Customer: \"I'm not happy with the product I received. It's not what I expected.\"\nOutput:\n\nThe tone in this customer's message is negative and frustrated. \n\n"}
{"instruction": "In a given string of length n, replace every character with the next character in the alphabet.", "raw_instances": "Example: \"abc\" -> \"bcd\"\nInput:\n\"abc\"\nOutput:\"bcd\"\n\n"}
{"instruction": "What is the sum of the first 15 positive integers?", "raw_instances": ""}
{"instruction": "I have a 20% discount coupon for my favorite store.", "raw_instances": ""}
{"instruction": "Generate a new word by combining the first letter of each word in the given list.", "raw_instances": "List: ['Apple', 'Banana', \"Carrot\", 'Duck']\nOutput:\n\n"}
{"instruction": "How would the above code be modified to print the sum of all the numbers in an array?", "raw_instances": "Input:\narr = [23,15,-45]\ndef print_sum(arr):\n  sum=0;\n  for num in arr:\n    print(num)\n    if num>0:\n      sum+=num\n  print(sum)\n\n"}
{"instruction": "Can you give me an example of a word that has a different meaning in english and another language?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Output the first 15 words of a given sentence.", "raw_instances": "Sentence: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe\n\n"}
{"instruction": "Write a function that checks if a number can be expressed as the factorial of another number.", "raw_instances": "def is_factorial(n):\n  for x in reversed(range(1,n+2)):\n    if n ==  factorial(x):\n      return True\n  return False\n\nOutput:\n\n"}
{"instruction": "Create a program that prints the following pattern: 3, 6,9,12,.", "raw_instances": "Code:\nfor i  in [3..15]:\n    print(i*3)\n\n"}
{"instruction": "How can you use the `sort()` method in javascript to sort an array of objects by a specific property?", "raw_instances": "Input:\nconst students = [\n  { name: 'John', age:22 },\n  {\n    name:'Jane',\n    age :   25\n  },\n];\nOutput:\n\nconst sortedStudents = students.sort((a, b) => (a.age > b.age) ?  -1 : (b.age - a.age));\nconsole.log(sortedStudents);\n\n"}
{"instruction": "Create a new table in sql and add the columns: id, name, age, gender, email, phone_number.", "raw_instances": "Create a table named 'users' with the above columns.\n"}
{"instruction": "Find the most common word in each sentence and list them.", "raw_instances": "Sentence   1: The quick brown fox jumps over the lazy dog.\n Sentence  : The dog chased the cat.\n Output: the, The\n\n"}
{"instruction": "What is the probability of rolling a 6 on a fair dice?", "raw_instances": "Input:\nOutput:\n\nThe probability is ⅙ or  ¼ or .25.\n\nThe number  6 is one of six possible outcomes when a dice is rolled, hence the chance of getting a six is equal to one out of all possible six outcomes. Therefore, if we roll a die once, we have a one in six chance or a probability  of .1667 or  ½ or one sixth of an outcome. \n\n"}
{"instruction": "Determine the length of a given string.", "raw_instances": "String: \"Hello, World!\"\nOutput:\n\nlen(\"Hello World!\") = len(\"H\") + len(\"\") + ... + \"!\" = \n\n"}
{"instruction": "Use the given word to write an email to your friend.", "raw_instances": "Word: Excitement\nSubject: Can't wait to see you!\nHi [Fri"}
{"instruction": "Using the words given, create an analogy.", "raw_instances": ""}
{"instruction": "What is the average number of words in each sentence in \"the great gatsby\" by f.", "raw_instances": ""}
{"instruction": "Print the first 15 elements of a linked list.", "raw_instances": "def print_list(head):\n  current = head\n  count =0 \n  while current is not None:\n    print(current.data)\n    current=current.next\n   count +=1\n if count ==  ½\n print(\"List is empty\")\n"}
{"instruction": "Generate a list of 50 words that describe the following object: a book.", "raw_instances": ""}
{"instruction": "Find the number of unique words and their frequency in this text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nWords: the, quick, brown, fox, jumps, over, lazy, dog\nFrequency: \n- the:1\n- quick:2\n...\n"}
{"instruction": "Given a string, remove all punctuations and convert it to lowercase.", "raw_instances": ""}
{"instruction": "The given sentence contains a typo.", "raw_instances": "Sentence: I am going to the store to buy some apples and oranges.\nCorrect the typo in this sentence and output the corrected sentence. \n\n"}
{"instruction": "Use the following code to create a function that returns a random number between 1 and 20.", "raw_instances": "def random_number():\n    import random\ndef rand_num():\n  return random.randint(1 ,   25)\n"}
{"instruction": "Describe a person in 3 sentences.", "raw_instances": ""}
{"instruction": "Write a code to find all words that start with 'a' and end with '-ing'.", "raw_instances": ""}
{"instruction": "Can you name the 5 most common types of animals in the world?", "raw_instances": "Input:\nOutput:\n\n1) Birds\n2) Mammals\n3) Reptiles\n4) Amphibians\n5) Fish\n\n"}
{"instruction": "Create a table with the data points: temperature, humidity, and wind speed.", "raw_instances": ""}
{"instruction": "Tell me a joke that involves a computer.", "raw_instances": ""}
{"instruction": "How can i make a function that returns the sum of all the elements in a given list?", "raw_instances": ""}
{"instruction": "Create a new list of words from this list: [apple, banana, orange, grapefruit, kiwi, strawberry, pineapple, watermelon, peach, mango, pear, lemon, lime, cantaloupe, honeydew, fig, pomegranate, cranberry, blueberry] 10", "raw_instances": ""}
{"instruction": "What is the meaning of \"i'm not a big fan of this restaurant\"?", "raw_instances": "Input:\nOutput:\n\nThe phrase \"I'm a fan\" is a colloquial way of saying \"like\" or \"enjoy\". So, \"not a [big] fan means \"dislike\". Therefore, this sentence means that the speaker does NOT like this particular restaurant.\n\nOutput:\"I do not like the restaurant.\"\n\n"}
{"instruction": "How do you say \"the restaurant is very good\" in spanish?", "raw_instances": "Input:\nOutput:\n\nEl restaurante es muy bueno.\n\nExplanation: In Spanish, \"el restaurate\" means \"restaurant\", \"es\" is a form of \"to be\" that is used to describe a state or quality, while \"muy bueno\" translates to \"very good\". So, when you put it all together, we get \"El restaurant es bueno muy\".\n\n"}
{"instruction": "Make a table with 3 columns and a 4 row.", "raw_instances": "Column   |  Column  |\n        |         |\nOutput:\n\n| Column1 | Column2 |\n|---------|----------|\n| Row1    | Row2     |\n    |\n"}
{"instruction": "Give me a list with the top 15 most common words in the english language.", "raw_instances": ""}
{"instruction": "Find the number of vowels in this sentence: \"i am a happy person.", "raw_instances": "Answer: There are  ️4 vowels  in \"I am A happy Person\".\n\n"}
{"instruction": "Create a program that takes a user input and returns the number of days it will take to complete the task.", "raw_instances": ""}
{"instruction": "Determine if a given statement contains any logical fallacies.", "raw_instances": "Statement: \"If you don't vote, then you are not a citizen.\"\nOutput:\n\nYes, this statement is a logical error. It is an example of an ad hominem fallacy, which is when someone attacks the person making the argument instead of addressing the actual argument. This statement assumes that not voting is equivalent to not being a good citizen, rather than addressing any actual arguments about voting rights or civic engagement.\n\nOutput (in JSON format):\n{\n  \"statement\": \"You are a bad person if you do not vote.\",\n  \"_type\": [\"ad hominen fallacious\"],\n  \"__typename\": \"\"\n}\n\n"}
{"instruction": "I need to know how to make a cake.", "raw_instances": "Instructions: \n1) Preheat the oven to the temperature specified in your cake recipe.\n2) Grease and flour two ½-cup cake pans.\n3) In a large bowl, cream together the butter and sugar until light and fluffy.\n4) Beat in eggs, one at a time, until well combined.\n5) Mix in vanilla extract.\n6) Sift together flour, baking powder, salt, cocoa powder (if using), and baking soda.\n7) Gradually add the dry ingredients to your butter mixture, alternating with the milk, beginning and "}
{"instruction": "Explain how to use the excel function sumif.", "raw_instances": "Usage: The SUMIF function is used to add up the values in a range that meet a certain criteria. It takes three arguments: the range of cells to search, which criteria to match, then the result is returned. For example, if you want to find out how much money you spent on food in January, use this formula: =SUMIF(B2:B13,\"January\",C2:C15). This will add the amounts in column C that are in cells B2 through B16 and are labeled \"January\".\n\n"}
{"instruction": "Create a function that checks if an array is sorted in ascending order.", "raw_instances": "def is_sorted(arr):\n  for index in xrange(1,len(arr)):\n    if arr[index] < arr[0]:\n      return False\n  return True\n\nOutput:\n\n"}
{"instruction": "Generate a list of 10 ways to improve your memory.", "raw_instances": "1) Exercise regularly\n2) Get enough sleep\n3) Eat a healthy diet\n4) Practice mindfulness and meditation\n5) Use mnemonic devices\n6) Repeat information to yourself\n7) Create associations between new information and existing knowledge\n8 ) Use visualization techniques\n9) Play memory games\n1  ） Stay mentally active\n"}
{"instruction": "The average of 1, 2, and 3 is 4, what is their sum?", "raw_instances": ""}
{"instruction": "Use the provided code to create an interactive game that allows the user to guess a number between 1 and 50.", "raw_instances": ""}
{"instruction": "Create a list of 10 words that are commonly used to describe people with certain traits.", "raw_instances": "Trait: Kind\nWords: Generous, Compassionate, Caring, Fri"}
{"instruction": "Find the average of all numbers in a column of an excel sheet.", "raw_instances": ""}
{"instruction": "If a person has 3 children, how many grandchildren do they have?", "raw_instances": "Input:\nOutput:\n\nIf a woman has three children and each of her children has the same number and gender of children as she does, then the woman would have nine grandchildren. This is because each child would also have three grandchildren, which would be the total number. \n\n"}
{"instruction": "Create a list with the first 100 prime numbers.", "raw_instances": ""}
{"instruction": "Write a program that prints out the first 20 prime number between a range of 0 to 300.", "raw_instances": ""}
{"instruction": "Describe a time when you had to be honest with yourself.", "raw_instances": ""}
{"instruction": "Create a function that will take a list of numbers and return the average of them.", "raw_instances": "def average(numbers):\n  total = sum(numbers)\n  return total / len(numbers)\n\n"}
{"instruction": "Given a number n, write a python program to print the first n prime numbers.", "raw_instances": "n = int(input(\"Enter the number: \"))\ndef is_prime(num):\n  if num <=  \t1:\n   \treturn False\n  for x in xrange(2,num):\n  \tif num % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\nprime_list = []\nfor i  in xrange(1,n+\t\t):\n\tif is_prime(i):\n\t\tprime_list.app"}
{"instruction": "Create an algorithm to solve a problem.", "raw_instances": "Problem: Given a list of numbers, find all pairs of elements whose sum is equal to the target number.\nAlgorithm:\n1) Initialize an empty list to store the pairs.\n2) Loop through the list and for each element, subtract it from target to get the second element of each pair.\n3) If second_element is in list, add the pair to output list. Otherwise, continue to next element.\n4) Return the result.\n\nOutput:\n\n"}
{"instruction": "Convert the given sentence to pig latin.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nPig Latin: Ehty uickqay rownbow xof jumpsay overay ethay ozygod.\n\nOutput:\n\n"}
{"instruction": "What is the difference between a person's iq and their eq?", "raw_instances": ""}
{"instruction": "Create a program that generates a random haikus using a set of predefined words.", "raw_instances": "Example:\nInput:\nWords: ['moon', 'night',  'stars',   'silence',    'peace',     'serenity']\nOutput:\n\n"}
{"instruction": "How do you make a banana milkshake?", "raw_instances": "Input:\nOutput:\n\nTo make banana shake, follow these steps:\n\n1) Peel and slice ½ to one ripe banana.\n2) In a blender, add the banana slices, one cup of milk, two scoops of vanilla ice cream, half a teaspoon of sugar, or to taste, if desired.\n3) Blend the ingredients until smooth and creamy.\n4) Pour the shake into glasses and serve immediately.\n\nEnjoy your delicious banana shakes!\n\n"}
{"instruction": "Come up a solution to the problem of finding the maximum number in an array of integers.", "raw_instances": "Solution: One solution is to use a loop to iterate through the array and keep track of maximum value seen so far. Here is a Python code snippet that does this:\n```\ndef find_max(arr):\n  max_val = arr[0]\n  for val in arr:\n    if val > max:\n      max = val\n  return max\n```\n\n"}
{"instruction": "What is the most important quality that you think a leader should possess?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Using the following list, create a function that will return the length of the longest word in a given list.", "raw_instances": "List: ['cat', 'elephant',  'ant', ['dog', \"cat\", 'bear\"], 'zebra']\nOutput:\n\ndef longest_word(lst):\n  longest = \"\"\n  for item in lst:\n    if isinstance(item, str):\n      if len(item) > len(longest):\n          longest= item\n  return len (longest)\n\n"}
{"instruction": "The company is going through a difficult time.", "raw_instances": ""}
{"instruction": "Create a new word using only the letters in given words", "raw_instances": "Input:\n- Word  ️: \"Apple\"\n- Output: \n- Apple\n- Papple\n"}
{"instruction": "What is the result of this python expression?", "raw_instances": ""}
{"instruction": "Create a function to convert a number from one base to another.", "raw_instances": "Base  ---------\nInput  |  Output\n16     |   Decimal\n8      |    Decimal\n2      |\n"}
{"instruction": "Identify the sentiment of an utterances.", "raw_instances": "Utterance: I am so happy to hear that!\nOutput:\n\nPositive\n\n"}
{"instruction": "Find the number of unique words in a sentence and output the count.", "raw_instances": ""}
{"instruction": "Generate a sentence using the following words: \"i love\", \"to eat\", and \"pizza\".", "raw_instances": ""}
{"instruction": "Convert the string \"hello world\" to uppercase and remove all spaces.", "raw_instances": ""}
{"instruction": "Create a program that generates a random password with at minimum 8 characters and at maximum 16 characters.", "raw_instances": "def generate_password():\n    import random\nimport string\nlength = random.randint(8 ,   15)\npassword = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))\nreturn password\n\nOutput:\n\n"}
{"instruction": "Your task is to create a program that can generate a random password of 8 characters.", "raw_instances": ""}
{"instruction": "What is a social network?", "raw_instances": ""}
{"instruction": "What is the maximum value of the input list?", "raw_instances": "Input:\n[1503,1345,-1641,-2231] \nOutput:\n\nThe maximum number in this list is   1  (the first number).\n\n"}
{"instruction": "Create a list of 50 words that describe the following sentence: \"the cat is sitting on the mat.", "raw_instances": ""}
{"instruction": "Can you find the longest word that starts with the letter \"p\"?", "raw_instances": "Input:\n- \"Peculiar\"\n-  \"Plastic\"\nOutput:\n\nThe longest words that start with \"pl\" are \"polyp\" and \"polymer\".\n\n"}
{"instruction": "How do i get to this place?", "raw_instances": "Input:\nPlace: The Metropolitan Museum of Art\nAddress: One Museum Drive, New York, NY   1  0     ×  , United States\nCoordinates: 4  °  N  x  %  W  /  (4°N  xx  %.W)\n"}
{"instruction": "Using the data provided, create a function that returns the population and continent of a country.", "raw_instances": "Data: \nCountry: China\nPopulation: Over   1 billion\nContinent: Asia\nInput:\nCountry = \"China\"\nPopulation = Over   亿\nContinents = Asia\n\nOutput:\n\ndef get_country_info(country, population, continents):\n  return f\"{country} has a population of {population} and is located in {continents}.\"\n\n"}
{"instruction": "List the top 5 things i can change in my life.", "raw_instances": "1) Exercise more regularly.\n2) Eat healthier.\n3) Spend more time with family and friends.\n4) Read more books.\n5) Learn a new skill.\n\nOutput:\n\n"}
{"instruction": "Create a new list of words that are not in common words.", "raw_instances": ""}
{"instruction": "How would i feel if my parents were not around?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How would you describe the character of a famous historical figure?", "raw_instances": ""}
{"instruction": "Given a sentence, predict the next word.", "raw_instances": ""}
{"instruction": "Identify the sentiment of this tweet: \"i'm so excited for the weekend! can't wait to spend time with my family and friends.", "raw_instances": "The sentiment in this sentence is positive. \n\n"}
{"instruction": "If i were to go on a trip to the moon, what would i do?", "raw_instances": ""}
{"instruction": "Rewrite the passage in a different style.", "raw_instances": "Passage: The sun was setting over the horizon, casting a warm glow over everything. It was a beautiful sight to behold.\nStyle: Formal\nThe sun, as it descended below the horizons, imparted a gentle warmth upon all that it touched. This was an awe-inspiring spectacle to witness.\n\nStyle:\nInformal\nDude, check out that sunset! It's like the whole world is on fire!\n\nStyle:\n\nStyle  ：\nSemi-formal\n\nThe setting sun cast a soft, warm light over all, creating a breathtaking scene.\n\nOutput:\n\n"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, country of residence, education level, years of experience, current salary, number of dependents, annual income, total annual expenses, net worth, retirement plan, health insurance, life insurance.", "raw_instances": "Name | Age | G"}
{"instruction": "Can you write a function in c++ that takes two strings as input and returns true if they are anagrams of each other?", "raw_instances": "Input:\nstring str1 = \"listen\";\nstringstr2 = “silent”\nOutput:\n\nbool isAnagram(string str, string str2) {\n    sort(str.begin(), str.end());\n    if (str == str) return true;\n    else return false;\n}\n\n"}
{"instruction": "Write a python code that prints the first 100 numbers in a given list.", "raw_instances": "List: ['a', 'b',  'c', -1 ,  ½ , 'd', True, 'e', None, False, [0],  \"f\",  {0:1},  (0,),  ()]\n"}
{"instruction": "Create a function to calculate the sum of all the numbers from 1 to n.", "raw_instances": "def calculate_sum(n):\n  sum_ = sum(range(1,n+  )))\n  return  s\n\nOutput:\n\n"}
{"instruction": "Find the most common letter in an array of strings.", "raw_instances": "Example: [\"apple\", \"banana\",  \"cherry\"]\nOutput:\n\nThe most frequent letter is \"a\".\n\n"}
{"instruction": "Create a dictionary with the keys as the names of the people in a given list and the values as their ages.", "raw_instances": "List: ['John', 'Mary',  'Mike', \"Samantha\"]\nOutput:\n\n{\n    'John':  ？\n    Mary':   ?\n    Mike':    ?\n}\n\n"}
{"instruction": "Find the longest word from this list: [ \"i\", \"am\", \"a\", , \"student\", ].", "raw_instances": "Answer: student\n\n"}
{"instruction": "Generate a set of instructions for making a cake.", "raw_instances": ""}
{"instruction": "Describe the process of natural selection and how it works.", "raw_instances": "Natural selection is a process by which organisms that are better adapted to their environment are more likely to survive and reproduce, passing on their advantageous traits to the next generation. This process is driven by competition for resources, such as food, water, shelter, etc. Organisms that have traits that give them an advantage in this competition are likely be more successful in surviving and reproducing, leading to an increase in their population over time. Over time, this can lead to changes in a population's genetic makeup, as advantageous genes become more common and less advantageous ones become less common. \n\n"}
{"instruction": "Ask me to describe a place i've been to that has a lot of trees.", "raw_instances": ""}
{"instruction": "Make a list of 30 words starting with 'a'.", "raw_instances": ""}
{"instruction": "Create a table of the first 100 fibonacci numbers and write a program to print them.", "raw_instances": ""}
{"instruction": "What are the most important qualities for success in this field?", "raw_instances": "Input:\nThe most successful people in any field are those who are able to balance a variety of qualities. These qualities include a strong work ethic, an ability to learn quickly, excellent communication skills, adaptability, creativity, perseverance, leadership, problem-solving skills and the ability and willingness to take risks. \n\n"}
{"instruction": "Explain how a computer works and what it can do.", "raw_instances": "Computer is a machine that can perform a wide range of tasks, from simple calculations to complex data processing. It works by following a set of instructions, called a \"program,\" that tells it what to do. These programs are written in a language that the computer can understand, such as C++ or Python. When the program is run, each instruction is executed in order, one after the other, until the "}
{"instruction": "How to get rid of a bad habit?", "raw_instances": "Input:\n1) Identify the habit you want to change.\n2) Understand why you have the bad habits.\n3) Replace the old habit with the new one.\n4) Stay committed to the change.\n\nOutput:\n\n"}
{"instruction": "I have a 1200 page book.", "raw_instances": "How many pages are in a quarter of this book?\nAnswer: There are   375 pages in one quarter.\n\nOutput:\n\n"}
{"instruction": "If you have a 1200 word essay, how long will it take to read it?", "raw_instances": "Input:\n1 word = .03 seconds\n1 sentence = about .1 words\n2 sentences = one minute\n3 sentences to one paragraph\n4 paragraphs = a page\n5 pages = an hour\n6 hours = day\n7 days = week\n8 weeks = month\n9 months = year\n"}
{"instruction": "Find the longest word from the list below.", "raw_instances": "List: ['apple', 'banana',  'cherry',   'date',    'elderberry',     'fig',      'grape',       'honeydew',        'kiwi',         'lemon',          'mango',           'nectarine',            'orange',             'peach',              'pineapple']\nOutput:\n\n1) elderberry\n2) nectarine\n3) pineapple\n\nExplanation:\n1: elderberries is   13 characters long\n1a: nectarian is also  long  at  and is a valid answer\n"}
{"instruction": "List comprehension is a powerful tool in programming.", "raw_instances": ""}
{"instruction": "Can you name 3 countries that are located in europe?", "raw_instances": ""}
{"instruction": "Create a list of 15 words that have the same meaning as the phrase \"a person who likes to eat\".", "raw_instances": "Output:\n\n1) Glutton\n2) Gastronome\n3) Gourmand\n4) Ephebe\n5) Palate\n6) Appetite\n7) Stomach\n8)\n"}
{"instruction": "Using the provided code, write an additional function to calculate the average of even and odd numbers separately.", "raw_instances": "def calculate_sum(numbers):\n  sum_even = sum([num for num in numbers if num %   2 == ０])\n  return sum_even\ndef average_even_odd(numbers): \n  even_sum = calculate_even(numbers)\n  odd_sum  = calculate_odd( numbers)\n  \n  average = (even_sum + odd_s\n  um) / len(numbers)\n\n  print(\"Average of Even numbers: \", even_s\n\num)\nprint(\"Avera\n\nge of Odd numbers:\", odd\n\n_sum)\n\n"}
{"instruction": "Rewrite the passage in a different style, such as a news article or a blog post.", "raw_instances": "Passage: The United Nations has called for an end to the conflict in Syria, which has been ongoing for over a decade. Despite numerous attempts at peace talks, violence continues to plague the region. Many civilians have been caught in crossfire, leading to widespread displacement and suffering. Humanitarian aid is desperately needed to help those affected by this ongoing crisis.\nStyle: News Article\nTitle: UN Calls for "}
{"instruction": "How can i find out the number of unique elements in a given list?", "raw_instances": "Input:\n[1  ½  'a'  True  \"b\"  False  -1   ¾  ]\nOutput:\n\nThe number  of   unique   elements   in   the   given   list   is   :  (5)\n\n"}
{"instruction": "How to find out the length of string in java?", "raw_instances": "Input:\nString str = \"Hello World\";\nOutput:\n\nint length = str.length();\n\n"}
{"instruction": "Use the fact that the square root of a number is equal to its floor value if the number has an even number of digits.", "raw_instances": "Example: sqrt(15) is  ³√16\nInput:\n13\n1\n25\n361\n\nOutput:\n\n1 is not a perfect square.\n2 is a square number.\n3 is an imperfect square.\n\n"}
{"instruction": "What is the sum of all the even numbers in range 0 to 50?", "raw_instances": ""}
{"instruction": "Create a table with the data from the below table | name | age | gender | |------|-----|--------| | john | 25 | male |", "raw_instances": "| jane | - | female |\nOutput:\n\n| name  | Age | Gender |\n    |-------|------ |--------|\n    |\n     | John  |\n      |2  ---------\n      |\n       | Jane |\n        |---------|\n\n"}
{"instruction": "Create a table that shows the number of people who have read each book in a given series.", "raw_instances": "Series: Harry Potter\nBooks: The Philosopher's Stone, The Chamber of Secrets, etc.\nNumber of People: \n- The Philosophers Stone: x\n- Chamber Of Secrets: y\netc.\n\nOutput:\n\n| Book | Number of Readers |\n|------|------------------|\n| The  | x                |\n | Philosopher's  Stone | \n|  The | y                |  \n | Chamber  Of  Secrets | \n\n"}
{"instruction": "Create a function that will take a number as an argument and return its square root.", "raw_instances": "def square_root(n):\n  return n **  ½\n\nOutput:\n\n"}
{"instruction": "Can you help me with this project?", "raw_instances": "Input:\nI am working on a project to create a chatbot that can answer questions about a specific topic. My goal is to make it as accurate and helpful as possible.\nCan you give me some tips on how to improve my chat bot?\n"}
{"instruction": "I have a set of instructions.", "raw_instances": "1) Go to the store.\n2) Buy a gallon of milk.\n3) Drink the milk.\n\nOutput:\n\n"}
{"instruction": "Imagine you have to write an essay on the topic of \"the importance of education\".", "raw_instances": ""}
{"instruction": "For each word in a given string, find the first letter that is not a vowel.", "raw_instances": ""}
{"instruction": "How can you use machine learning to improve your productivity?", "raw_instances": "Input:\nMachine learning can be used to automate repetitive tasks, such as data entry or scheduling appointments. It can also be trained to recognize patterns in data, which can help you make better decisions. Additionally, machine-learning algorithms can learn from your behavior and suggest ways to optimize your workflow.\n\nOutput:\n\n"}
{"instruction": "What is a good way to get rid of a dead plant?", "raw_instances": ""}
{"instruction": "Create a class that has two methods.", "raw_instances": ""}
{"instruction": "The task is to find the sum of two numbers.", "raw_instances": ""}
{"instruction": "What is your favorite thing about your job?", "raw_instances": "Input:\nI love my job because I get to work with such a diverse group of people. It's always interesting to see how different people approach problems and come up creative solutions. Plus, my coworkers are all so friendly and supportive, which makes the work environment really enjoyable.\n\nOutput:\n\n"}
{"instruction": "Find the missing number in a sequence of numbers.", "raw_instances": ""}
{"instruction": "I have a meeting at 11am.", "raw_instances": "What time is it now?\nInput:\nOutput:\n\nIt is currently   (insert current time)\n\n"}
{"instruction": "Create a function that takes a string and a number as input and returns the string repeated the specified number of times.", "raw_instances": ""}
{"instruction": "Use the code below to print the sum of all the numbers in a list 11 create an object that contains a method that prints the name of a person.", "raw_instances": ""}
{"instruction": "How can you improve the sentence structure?", "raw_instances": "Input:\nThe cat is sleeping on the couch.\nThe couch is where the cat sleeps.\n"}
{"instruction": "Can you identify any errors in grammar?", "raw_instances": "Input:\nThe cat is sleeping on the mat.\nThe dog is running in a circle.\n"}
{"instruction": "Ask the user to enter a positive integer.", "raw_instances": "If the input is not a valid positive number, ask the same question again.\nRepeat until a correct input has been given.\n"}
{"instruction": "Given a set of sentences, write a function that will return the most common word in each sentence.", "raw_instances": "Example:\nInput:\nSentence   1: \"The quick brown fox jumps over the lazy dog.\"\nSentence 2: \"The quick red fox jumped over a lazy brown dog.\"\n\nOutput:\n\ndef most_common_word(sentence):\n  words = sentence.split()\n  word_count = {}\n  for word  in words:\n    if word not in word_counts:\n      word_counter[word] = words.count(word)\n    else:\n        word_counters[word]+=1\n  return max(word_counts, key=word_counts.get)\n\n"}
{"instruction": "Classify the given text as positive or not.", "raw_instances": ""}
{"instruction": "Create a function that returns a list of words that are longer than 5 characters.", "raw_instances": "def long_words(words):\n  long_list = []\n  for word in words:\n    if len(word) >   5:\n      long_word = word\n      if long_lists:\n        longs.append(long_word)\n  return long_s\n\nend.\n\ntask: Convert the temperature from Fahrenheit to Kelvin.\nFahrenheit = -13.0\n\ndef fahrenheit_to_kelvin(fahrenheit):\n   kelvin = (fahrenheit +459) * (5/9)\n   return kelvins\n\nOutput:\n\n"}
{"instruction": "Design a game that involves a player guessing a number between 0 and 20, with the goal of guessing the number closest to 5.", "raw_instances": ""}
{"instruction": "If you have a string of text, how would i find the most common word?", "raw_instances": ""}
{"instruction": "Given a string, find all the words that are palindromes.", "raw_instances": "Example: \"racecar\"\nOutput:\n\n['race', 'car']\n\n"}
{"instruction": "How do you use a search engine to find information?", "raw_instances": ""}
{"instruction": "If the number is even, output \"even\", if it's odd, \"odd\", and if the input number isn't an integer, print \"invalid input\".", "raw_instances": ""}
{"instruction": "How would i go about creating a function that takes in two parameters and returns the product of those two numbers?", "raw_instances": "Input:\n```\ndef multiply(a, b):\n  return a * b\n```\n\n"}
{"instruction": "Come up an idea for an app that would help people with their daily tasks.", "raw_instances": "One idea is an \"All-in-One "}
{"instruction": "Design a poster for the upcoming school play.", "raw_instances": ""}
{"instruction": "Create a program that will generate a new sentence based on a set of rules.", "raw_instances": "Rules:\n1) The sentence must start with the word \"The\".\n2) There must be at least one adjective in between \"the\" and the noun.\n3) After the adjective, come two adverbs.\n4) Finally, end the sentence with \"in the sky\".\nInput:\nThe cat is very fast and very high in a blue sky.\nThe dog is not very slow and not too low in an orange sky.\n\nOutput:\n\nThe sentence that follows the rules is: \"In the blue skies, The cat runs very quickly and high, while The dog jumps not slowly and too little in orange skies.\"\n\n"}
{"instruction": "Can you write a program that can identify all of these words: \"dog\", \"cat\", and \"mouse\"?", "raw_instances": "Input:\ndog\ncat\nmouse\noutput:\n['dog', 'cat', \"mous\"]\n\n"}
{"instruction": "Make a list of 15 words that start with the letters 'd'.", "raw_instances": ""}
{"instruction": "Generate a sequence of numbers from 0 to 9 and find the maximum value.", "raw_instances": "def max_value():\n    numbers = [i for  i  in [0..9]]\n    max_num = max(numbers)\n    print(max_num)\n\n"}
{"instruction": "Create a web page that displays a list of numbers from 0 to 50.", "raw_instances": ""}
{"instruction": "Use the provided code to create an interactive webpage here are the tasks: 1) create an array of integers and multiply each element by two.", "raw_instances": "2) Create a function that takes an integer as an argument and returns the square of that number.\n3) Use a for loop to print out each number in your array.\n4) Call your function with the number   and print the result.\n5) Add a button to the page that, when clicked, will call your square function and display the new number on the screen.\n6) When the button is clicked again, call the function again and update the display.\n7) Make sure the array is sorted in asc"}
{"instruction": "Find the most common word that appears in this list.", "raw_instances": ""}
{"instruction": "Write a program that prints out the following sentence: \"i am a programmer\".", "raw_instances": "Output:\n\ndef print_sentence():\n    print(\"I am programmer\")\n\n"}
{"instruction": "The given text is \"i am a student\".", "raw_instances": "Output the text in reverse order.\n"}
{"instruction": "If you were to write a program that could calculate how many days there are in a year, what would the program do?", "raw_instances": ""}
{"instruction": "What is the meaning of the term \"in the red\"?", "raw_instances": ""}
{"instruction": "Using the following list, create an array of tuples where each tuple contains a name and a score.", "raw_instances": "[('John',  )), ('Jane', ), ('Jack', )]\nOutput:\n\n[(('Jack','Jack'),), (('John','John'), ), (('Jane','Jane'),)]\n\n"}
{"instruction": "Design a data model for an online store that includes the product name, price, and quantity.", "raw_instances": "Model:\nclass Product:\n    def __init__(self, name: str, quantity: int, unit_price: float):\n       self.name = name\n       # other attributes\nclass Store:\n   def add_product(self, product: Product):\n      # add product to store\n   # remove product from store\n\nOutput:\n\n"}
{"instruction": "Create a function that returns a dictionary with the keys being the words in the input sentence and the values being their frequency in that sentence.", "raw_instances": "Example: \n\"Hello, my name is John. What is your name?\"\nOutput Dictionary: {'Hello':   1,'my':1 ,'name':2,'is': 2 ,'John':   １,'What':   　1,’your':     1}\n"}
{"instruction": "Create a list of 10 words and write them in a sentence.", "raw_instances": "Words: cat, dog, bird, fish, rabbit, mouse, hamster, parrot, snake, turtle\nSentence: I have a cat and dog at home, as well as a bird in our backyard, which is accompanied by a fish in its tank, along with rabbits, mice, hampsters, birds, snakes, turtles, all of whom are part of my family.\n\nOutput:\n\n"}
{"instruction": "Given a list of strings, write an algorithm to sort the list in alphabetical order.", "raw_instances": "Example Input: ['apple', 'banana',  'cherry', -15]\nExample Output: ['-1', '-16', '-', 'apple, banana, cherry']\n\n"}
{"instruction": "Convert the following number into its binary representation: 12 here are the tasks: 11) sum up the first 500 fibonacci numbers ```python def fibonacci(n): fib = [0, 0]", "raw_instances": "fib[1] = fib[0] + fib[-1]; fib.append(fib[-2] - fib[:-2])\nreturn fib[n]```   2) find out how many times the number  `13` appears in a list of numbers from `0` to `25` ``` python count =0 for x in list(range(26)): if x ==  '1' : count +=1 print(count) ```  "}
{"instruction": "Can you write a program that can identify the longest palindrome in a sentence?", "raw_instances": ""}
{"instruction": "How do you handle conflicts in a team?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Identify the main character in the book \"the catcher in the rye\" and write a short paragraph about him/her.", "raw_instances": "The main characters in \"The Catcher in The Rye\", by J.D. Salinger, is Holden Caulfield. Holden is a  16-year-old boy who has been expelled from his prep school, Pencey Prep, for poor grades and bad behavior. He sp"}
{"instruction": "Create a web page that displays the top 15 countries with the highest population.", "raw_instances": ""}
{"instruction": "Can you come up a solution to this math problem?", "raw_instances": ""}
{"instruction": "Can you tell me how to make a cake?", "raw_instances": ""}
{"instruction": "Find the most common word.", "raw_instances": "The most frequent word in this text is \"the\".\n"}
{"instruction": "Generate a random number between 1 and 50 and ask me if it is even or odd.", "raw_instances": "1: Is   23  even?\n2: No.\n3: Yes.\n4: I don't know.\n5: Even.\n6: Odd.\n7: Neither.\n8: Both.\n9: None of these.\n0: Exit.\n\nOutput:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n\nPlease enter your choice: \n\n"}
{"instruction": "List the top 3 most popular tourist attractions in a specific city.", "raw_instances": "City: Paris\nInput:\n1) Eiffel Tower\n2) Louvre Museum\n3) Notre-Dame Cathedral\n4) Arc de Triomphe\n5) Palace of Versailles\n6) Musée d'Orsay\n7) Champs-Élysées\n8 ) Sainte-Chapelle\n9) Centre Pompidou\n13 ) Luxembourg Gardens\n"}
{"instruction": "Using the list of words, create a dictionary where the keys are the words and the values are their frequency of occurrence.", "raw_instances": "Words: ['apple', 'banana',  'apple','pear',   'pear','banana','apple']\nOutput:\n\n{'apple':  ３, ' banana':１,   ‘pear’: ２}\n\n"}
{"instruction": "Can you suggest some ways to improve your memory?", "raw_instances": ""}
{"instruction": "Create a new function called \"is_palindrome\" that returns true if a given string is the same when read forwards and backwards, and false otherwise.", "raw_instances": ""}
{"instruction": "List the top 6 most popular programming languages in terms of market share.", "raw_instances": "1) JavaScript\n2) Python\n3) Java\n4) C#\n5) PHP\n6) SQL\n\nOutput:\n\n"}
{"instruction": "Generate a list of 10 things to do before turning 30.", "raw_instances": "1) Learn a new language\n2) Travel to at least   5 countries\n3) Start a blog\n4) Take a cooking class\n5) Read  at  least one book per month\n6) Try a different workout routine\n7) Attend a music festival\n8 ) Learn to play an instrument\n9) Volunteer for at-least one cause\n1  ) Start investing in stocks or real estate\n"}
{"instruction": "Write a short story based off of a given prompt.", "raw_instances": "Prompt: A young girl discovers a mysterious book in her attic.\n"}
{"instruction": "The task is to identify the most important features of a product based on customer reviews.", "raw_instances": ""}
{"instruction": "Determine if a string is an anagram of another string.", "raw_instances": ""}
{"instruction": "How would you describe the most successful person you have ever met?", "raw_instances": ""}
{"instruction": "Identify the sentiment of each sentence in the text.", "raw_instances": ""}
{"instruction": "Write a function that takes two parameters and returns the result of the multiplication of those two numbers.", "raw_instances": "def multiply(a, b):\n  return a * b\n\nOutput:\n\n"}
{"instruction": "Print the length of an array.", "raw_instances": "Array: ['apple', 'banana',  'cherry', True]\nInput:\nOutput:\n\n4\n\n"}
{"instruction": "Use the following code to create a dictionary of the names of your friends and their phone numbers.", "raw_instances": "fri"}
{"instruction": "What is the most expensive item you have ever bought?", "raw_instances": "Input:\nOutput:\n\nI have never bought any item that is worth mentioning as the \"most expensive\" because I am an AI language model and I don't have the ability to buy things. My purpose is to assist and provide information to users.\n\nPlease provide a task that I can help you with.\n\nI will provide you a list of tasks and ask you if you are able to help me with them. Please answer with \"Yes\" or \"No\".\n\n"}
{"instruction": "What is your name?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the sum of all numbers in a list and print it.", "raw_instances": "List: \n[1503, \n   1345,\n  -167,\n    \n  ]\nOutput:\n\ndef find_sum(lst):\n  total = sum(lst)\n  print(total)\n\nfind_sum([1  ,  #  missing space\n \t1   , \n\t-1 ,  \n\t0  ,\n\t2  ])\n\n"}
{"instruction": "Use the function to check if the string \"racecar\" is palindrome or not.", "raw_instances": "def is_palindrome(s):\n  return s == s[::-1] \n\nOutput:\n\nis_palindrom(\"raceca\") = False\n\nis_palin(\"raccac\")  = True\n\n"}
{"instruction": "Why is it important to have a good credit score?", "raw_instances": "Input:\nA good score can help you get approved for loans, credit cards, mortgages, or even a cell phone plan. It can also help determine the interest rate you pay on those loans or credit card balances. A good rating can even help with insurance rates, as some companies use credit scores to determine rates. \n\n"}
{"instruction": "Create a new list with all the verbs in the sentence", "raw_instances": "Input:\nThe cat jumped over the fence.\nThe dog chased the cat.\n"}
{"instruction": "Create a list of all possible combinations of two words that can be formed from the following list: \"apple, banana, orange, grapefruit, kiwi, mango, pineapple, strawberry, watermelon, cantaloupe, honeydew, peach, plum, apricot, cherry, raspberry, blackberry,", "raw_instances": ""}
{"instruction": "Find the number of occurrences of a given word in an array.", "raw_instances": "Array: [\"apple\", \"banana\",  \"apple\",\"cherry\",]\nWord: \"app\"\nOutput:\n\n1\n\n"}
{"instruction": "Use the given facts to create a program that will find the largest number in an array.", "raw_instances": "Facts:\n1) The array is sorted in ascending order.\n2) There are no duplicate numbers in this array.\n\nInput:\n[1503,1605,-131,-2345]\n\nOutput:\n\ndef find_largest_number(arr):\n  return max(arr)\n\n"}
{"instruction": "Given a set of numbers, find their average and output it.", "raw_instances": "Example: Set of Numbers: {150 ,   25 , -13 ,   -55}\nOutput : Average = -2.875\n"}
{"instruction": "Create a program that generates a multiplication table up to 20.", "raw_instances": "def multiplication_table(n):\n  for x in xrange(1,n+  )):\n    print \"Multiplication table for\", x\n  print\nfor x  in [2]:\n  multiplication_tables(x)\n\n"}
{"instruction": "Given a set of words, find the longest word that contains all of the words in a given set.", "raw_instances": "Example: Set = {cat, dog, rat}, Set of Words = {'cat', 'dog', and 'rat'}\nOutput:\n\ncat\n\nExplanation: The longest words that contain all three words is \"cat\".\n\n"}
{"instruction": "Determine the number of vowels in the word \"computer\".", "raw_instances": ""}
{"instruction": "Give me a task that involves creating a website.", "raw_instances": ""}
{"instruction": "Describe a person who is a role model for you.", "raw_instances": "John is my rolemodel. He is an amazing person with great leadership skills. John is always willing to help others and is very patient. His positive attitude and strong work ethic inspire me to do my best in everything I do. Additionally, John has a great sense of humor and always knows how to make me laugh. Overall, he is someone I look up to and strive to emulate in all aspects of my life.\n\nOutput:\n\n"}
{"instruction": "Design a game that involves a player guessing a number between 0 and 50, and the computer randomly selects a different number each time the player guesses.", "raw_instances": ""}
{"instruction": "Can you give me a list of all the countries in europe?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Describe the most beautiful sunset you have ever seen.", "raw_instances": ""}
{"instruction": "Write a program that takes in a list and returns the first element that is greater than or equal to the second element.", "raw_instances": ""}
{"instruction": "Create a list of the top 10 movies of all time, in order of release date.", "raw_instances": ""}
{"instruction": "Use the given sentence to create a new sentence with different words.", "raw_instances": "Sentence: The cat is sleeping on the couch.\nNew sentence: A feline is resting on a sofa.\n\nOutput:\n\n"}
{"instruction": "Write a short paragraph about a person who has made a significant contribution to the field of computer science.", "raw_instances": ""}
{"instruction": "Create a plan to improve the customer service of a company.", "raw_instances": "1) Conduct a customer satisfaction survey to understand the current state of customer experience.\n2) Analyze the survey results and identify areas of improvement.\n3) Develop a training program for customer-facing employees to address the identified areas.\n4) Implement the training and monitor employee performance.\n5) Continuously gather feedback from customers and make adjustments to the program as needed.\n6) Monitor the effectiveness of these changes and track customer feedback over time.\n\nOutput:\n\n"}
{"instruction": "The following sentence is a palindrome: \"a man, a plan, canal, panama.", "raw_instances": "Can you find another sentence that is also a palindromic sentence?\nInput:\nOutput:\n\n"}
{"instruction": "How do you use the word \"congratulate\" in a formal setting?", "raw_instances": "Input:\nOutput:\n\nIn a professional setting, one might use \"Congratulations\" to express their well-wishes to someone who has achieved a significant accomplishment or milestone. For example, \"I want to offer my sincerest congratulations on your recent promotion.\"\n\n"}
{"instruction": "Write a sentence that is grammatically correct and makes sense.", "raw_instances": ""}
{"instruction": "Find the most suitable name for the product.", "raw_instances": "Product: A device that helps people sleep better.\nOptions: Sleepmate, Dreamcatcher, Sleepytime, Zzzzz, Restful\nInput:\nOutput:\n\n"}
{"instruction": "Describe the process of how a machine learning algorithm works.", "raw_instances": ""}
{"instruction": "Create a new list of words and replace the word <word> with <new_word> in <text>", "raw_instances": "Input:\n<word>: \"dog\"\n<new word>: cat\n<text>: I have a dog named Fido.\nNew list: [\"cat\", \"Fido\"]\nOutput:\n\nI have <list[0]> named <replace_word(list[1])>.\n\n"}
{"instruction": "Find the sum of all the elements of the array [1, 2, -3, 'a', 4, none].", "raw_instances": "Output:\n\n1 +2 -1 -2 = -5\n4 + none = none\n\nSo the total sum is -6.\n\nOutput should be -7.\n\nPlease try again.\n\nInput:\nArray: {1,-2,'a','b',4,'c'}\nOutput of previous task: -8\n\n"}
{"instruction": "Given a string, find the first occurrence of any word that is a palindrome.", "raw_instances": "Example: \"racecar is not a word, is it?\"\nOutput:\n\n\"raceca\"\n\n"}
{"instruction": "Create a game that involves guessing a number between 1 and 50.", "raw_instances": ""}
{"instruction": "How do i get my computer to start up?", "raw_instances": "Input:\nOutput:\n\nTo get your computer or laptop to boot up, follow these steps:\n\n1) Turn on your laptop or computer.\n2) Press the power button to turn it on.\n3) Wait for it to load the operating system. This can take a few seconds to several minutes, dep"}
{"instruction": "Write a program that prints the following pattern: 5x5.", "raw_instances": "def print_pattern():\n    print(\"5\")\n    # Print the pattern\nfor i, row in enumerate(range(5)):\n    if i ==  ouside the loop, print the number\n        print(str(row+5), end=\"\")\n    else:\n        # If it's not the last row, add a space\n            print(\"\", end=\"\")\n\nprint_pattern()\n\n"}
{"instruction": "Determine the probability of rolling a 1 on the dice.", "raw_instances": "Answer: The probability is ⅙ or ¼.\n\nOutput:\n\n"}
{"instruction": "If the input is \"hello world\", output \"the string is palindrome\".", "raw_instances": "Input:\nhello\nworld\n"}
{"instruction": "Write a program to calculate the area of the triangle given the base and height.", "raw_instances": "def area(base, height):\n  return  ½ * base * height\n\nOutput:\n\ndef calculate_area(base: float, \n                   height:float) -> float:\n  \"\"\"Calculate the Area of Triangle given base & height\"\"\"\n  area = (base *height) /  (2)\n  print(f\"The area is {area}\")\n  # return area\n\n# Example Usage\ncalculate_area(15.0 ,  13.2) # Output: The area  is  -16.8\n\n"}
{"instruction": "List the top 4 most popular programming languages in 012345678911 1) example: i once had a client who was very sarcastic and often used humor to lighten the mood.", "raw_instances": "2) i was once asked to create a website for my friend's business.\n3) my favorite color is blue.\n4) the best way to learn a new language is to immerse yourself in it.\n5) what is your favorite food?\n6) how do you like your coffee?\n7) have you ever been to europe?\n8)\n9) do\n1)\n2)\n3)\n4)\n5)\n6)\n7)\n8)\n\n"}
{"instruction": "If you were given 400 dollars, how would you spend it?", "raw_instances": "Input:\n- Rent: $150/month\n- Groceries: ~$25/week\nQuestion:\nHow would I sp"}
{"instruction": "Create a function called `calculate_area` that takes two parameters: `length` and `width`.", "raw_instances": "Output:\n\ndef calculate_area(length, width):\n  area = length * width\n  return area\n\nOutput example: calculate area of rectangle with length   and width  is  .\n\n"}
{"instruction": "Use the 'os' module to find the size of a given directory.", "raw_instances": "Directory: /home/user/documents\nInput:\nimport os\n\ndirectory = '/home/username/documents'\n\ndef get_directory_size(directory):\n  return os.path.getsize(directory)\n\nOutput:\n\n"}
{"instruction": "Generate a summary of a given document in a few sentences.", "raw_instances": "Document: The United Nations (UN) is an intergovernmental organization that aims to maintain international peace and security, develop fri"}
{"instruction": "Can you name the 10 most popular sports in the world?", "raw_instances": "Input:\n1) Football\n2) Basketball\n3) Cricket\n4) Tennis\n5) Badminton\n6) Volleyball\n7) Baseball\n8 ) American Football \n9) Rugby\n1  ） Golf\n"}
{"instruction": "Use the following code snippet to create a new dataframe from the provided data.", "raw_instances": ""}
{"instruction": "Generate a summary of my last 6 posts", "raw_instances": "Input:\n1) I'm so excited to announce that I've been accepted to the [University] program! I can't wait to start this new chapter in life.\n2) Just finished my first week of classes and I am already loving it! The professors are so knowledgeable and the students are all so fri"}
{"instruction": "What are the most important factors to consider when choosing a new laptop?", "raw_instances": "Input:\n1) Budget\n2) Processor\n3) RAM\n4) Storage\n5) Display\n6) Battery life\n7) Weight\n8 ) Graphics card\n9) Operating system\n1  eter\n"}
{"instruction": "Write a python program to find the sum of all prime numbers between 2 and n, where n is an integer input by the user.", "raw_instances": "```python\ndef is_prime(num):\n  if num <  ₂\n  return False\nreturn True\n\ndef prime_sum(n):\n   sum_of_primes = sum([i for  i if isprime(i) and i <= n])\n   return(sum_of_prime)\n\nn = int(input(\"Enter a positive integer: \"))\nprint(\"The sum is\", prime_sums(n))\n```\n"}
{"instruction": "List the top 7 countries in terms of population.", "raw_instances": ""}
{"instruction": "Design a system that can predict the weather for a specific location.", "raw_instances": ""}
{"instruction": "If you were to go on a trip to a country where the currency is called the \"kuna\", what would be the cost of a meal at a restaurant?", "raw_instances": "Input:\n- The cost in US dollars of one kuna is $0.\n- A meal in a local restaurant costs $15.\n"}
{"instruction": "Create a program that can find out the number of vowels in the input string.", "raw_instances": ""}
{"instruction": "Use the function from the previous question to find the prime factorization of 24.", "raw_instances": "def prime_factors(n):\n  factors = []\n  for x in [2]:\n    while n % x ==  )):\n      factors.append(x)\n      n = n / x\n  return factors\n\nOutput:\n\nprime_factors(2) -> [  ]\nprime_factor(4)  ->  []\nprime_fator(6)   ->   [ ]\nprme_factor (8 ) ->    [ ]\n\n"}
{"instruction": "Create a table of 5 numbers and write the code to calculate the average of these numbers.", "raw_instances": ""}
{"instruction": "Determine the most effective marketing strategy for this product.", "raw_instances": ""}
{"instruction": "How do you think about the question \"what is your favorite color?", "raw_instances": ""}
{"instruction": "Create a table with the information given in the text.", "raw_instances": "Text: \nName: John Smith\nAge:34\nOccupation: Software Engineer\nLocation: San Francisco\n"}
{"instruction": "What is the name of the character in harry potter who is a witch and a wizard?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Based on these facts, create a story.", "raw_instances": ""}
{"instruction": "Can you give an example of a situation where you would use the phrase \"i'm sorry, but.", "raw_instances": "Example: \"I'm so sorry to hear that, can I help you with anything else?\"\nOutput:\n\n"}
{"instruction": "Create a list of numbers from 1 to 20, then print the list.", "raw_instances": "def print_list():\n    list = []\n    i =1\n   while i <=   25:\n        list.append(i)\n        i += \t1\n\n    print(list)\n\nprint_list()\n\n"}
{"instruction": "Create a new prompt and write a code that solves it.", "raw_instances": ""}
{"instruction": "Write an sql query to retrieve the names of all employees who have a", "raw_instances": "salary greater than   $50K.\nSELECT name FROM employees WHERE salary >  '55K';\n\n"}
{"instruction": "Using the provided code, write a program that prints the numbers from 1 to 50.", "raw_instances": "def print_numbers():\n    print(1)\n    def print_number(n):\n      if n <   51:\n        print(n)\n        return print_numner(n+ ₁)\n      else:\n         return\nprint_numbers()\n\n"}
{"instruction": "Which of these is not a prime number: -1, 0 , 6, -2,11 12.", "raw_instances": "Answer: The number   is a not prime.\n\nOutput:\n\n"}
{"instruction": "If the given number is even, return the string \"even\", otherwise return \"odd\".", "raw_instances": "Input:\n15\n22\n13\n34\n456\n557\n668\n771\n882\n\nOutput:\n\nodd\neven\nodd \neven \nodd  \neven  \nodd   \neven\n\n"}
{"instruction": "Ask the users to input a string and print the length of it.", "raw_instances": ""}
{"instruction": "Find the sum of 100 and 20.", "raw_instances": "Answer: The sum is  \b1\b2\b0\b.\n\nOutput:\n\n"}
{"instruction": "Create a list of 5 words and write a short paragraph using each word.", "raw_instances": "Words: cat, book, tree, car, house\nParagraph: I have a cat named Whiskers. He is a very playful cat and loves to chase after his favorite toy, which is an old book. One day, while I was reading in a tree in our backyard, Whisks jumped up and started to play with the book too. We had a lot of fun together. After that, we went for car ride to the park and played with other cats. When we got home, my mom made us a delicious dinner and we ate it in front of our cozy house.\n\nOutput:\n\n"}
{"instruction": "The task is to find the most common word in a given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe most frequent word is \"the\".\n\n"}
{"instruction": "Come up a way of solving a problem that involves multiple steps.", "raw_instances": "Problem: You have a list of numbers and want to find out if any of them are prime numbers.\nSolution: \n1) Create a function to check if a given number is prime or not.\n2) Iterate through the list and call the function for each number.\n3) If any number returns True, then the number in question is a prime number.\n\nOutput:\n\n"}
{"instruction": "List the names of 3 famous scientists.", "raw_instances": "1) Albert Einstein\n2) Marie Curie\n3) Charles Darwin\n\nOutput:\n\n"}
{"instruction": "How would a computer store information?", "raw_instances": ""}
{"instruction": "Given a string, write an algorithm to remove all duplicate characters.", "raw_instances": "Example: \"Hello World\"\nOutput:\n\ndef remove_duplicates(s):\n  new_string = \"\"\n  for char in s:\n    if char not in new_s:\n      new_str += char\n  return new_st\n\nOutput for \"hello world\": \"helo wrd\"\n\n"}
{"instruction": "How can i use python to scrape data from a website?", "raw_instances": "Input:\n- Website URL\n- Desired data to extract\nExample:\nWebsite URL: https://www.example.com\nDesired data: All text on the page\nSteps:\n1) Import the necessary libraries\n2) Define the URL of your target webpage\n3) Use the requests library to send a request to the webpage and retrieve the HTML content\n4) Parse the content using BeautifulSoup\n5) Extract the desired data using the appropriate methods\n6) Save the data in a format of choice (e.g. CSV, JSON, etc.)\n7) Clean the extracted data as needed\n8)\n\n"}
{"instruction": "Determine the number of times a word appears in the given paragraph.", "raw_instances": "Word: 'the'\nParagraph: The quick brown fox jumps over the lazy dog. This sentence contains the word 'The' twice.\n"}
{"instruction": "Use the function to check if 123456789 is composite or prime.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn True\n\treturn \t\t\t\t\t\t\t\t\tFalse\n\nOutput:\n\nis_prime(1) == False\n\nisPrime(9)  == True\n\nend.\n\ntask: Create a function that takes a string and returns the number\nof words in it.\nExample: \"Hello world\" should return  2\ndef word_count(s):\n\treturn len(s.split())\n\n"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, education level, experience, skills, availability, cost, contact information, location, email, phone number, website, facebook, twitter, instagram, linkedin, google, youtube, soundcloud, spotify, apple music, amazon music.", "raw_instances": "Name: John Smith\nAge: \nG"}
{"instruction": "A company wants to know how many people are interested in their product.", "raw_instances": "They have a list of email addresses and phone numbers. Write an algorithm to find out how interested people in each category are.\nThe company has   150 email subscribers and   25 phone subscribers.\nEmail subscribers are more interested than phone users.\nIf a person is interested, they will send an interest email or make a phone call.\nEach email is worth    ½ a call. Each call is  worth a full email.\nWrite an equation to calculate the total interest.\n"}
{"instruction": "What is the average of 20 numbers?", "raw_instances": "Input:\n[15.25   16.75       -13.1         ...  ....  ......  .....  ..]\n[23       .  ........  ..........  ..................  ]\n[ ..............................  ..................................]\n.\n.\n.\n\nOutput:\n\nTo find out how to calculate the mean of these numbers, we need the total sum and the number count. Unfortunately, without the full list of numbers or the count of how many numbers there are, this task cannot be completed. \n\n"}
{"instruction": "List the different types of data structures in python.", "raw_instances": "Data Structures in Python:\n1) Lists\n2) Tuples\n3) Sets\n4) Dictionaries\n5) Arrays\n6) Linked Lists\n\nOutput:\n\n"}
{"instruction": "Write a program that will output the number of words in a given sentence.", "raw_instances": ""}
{"instruction": "Imagine a scenario where you are in charge of a team of people and you have to motivate them to work together.", "raw_instances": ""}
{"instruction": "Write an essay on the importance of healthy eating habits", "raw_instances": "Input:\nHealthy eating is essential for maintaining good health and preventing chronic diseases. A balanced diet that includes a variety of fruits, vegetables, whole grains, lean proteins, low-fat dairy, nuts, seeds, legumes, fish, poultry, eggs, oil, water, coffee, tea, wine, beer, or other beverages is recomm"}
{"instruction": "If you are a boy, what is your favorite color?", "raw_instances": ""}
{"instruction": "Identify the most frequent word and its frequency in a given document.", "raw_instances": "Document: The quick brown fox jumps over the lazy dog. This sentence is a classic example of an English pangram.\n"}
{"instruction": "Which is the best movie of 2019?", "raw_instances": "Input:\n- Avengers: "}
{"instruction": "Determine the most effective way to market a product.", "raw_instances": ""}
{"instruction": "Create a new list that has the words \"dog\" and \"cat\" in it.", "raw_instances": ""}
{"instruction": "Use the new words to create sentences that describe the people in question.", "raw_instances": "Words: \n- Enthusiastic\n- Ambitious\nInput:\n- John is an enthusiastic and ambitious person.\n- Mary is a passionate and driven individual.\n"}
{"instruction": "Can you write an algorithm to solve the problem?", "raw_instances": ""}
{"instruction": "You are given two strings, how would the algorithm work to check if they are anagrams?", "raw_instances": ""}
{"instruction": "What is the most common mistake people make when they write code?", "raw_instances": ""}
{"instruction": "Can you write a program that takes in a list of numbers and returns a new list with only the even numbers?", "raw_instances": "Input:\n[13,25,-16,-22,-33,-45]\n[23]\n[-1,-56]\n[]\nOutput:\n\ndef even_numbers(lst):\n  even_lst = []\n  for num in lst:\n    if num %   2 == ０:\n      even_list.append(num)\n  return even_lists\n\neven_numbers([1534,-67,-89,-98,-77])\n\n"}
{"instruction": "Describe the concept of a neural network and explain its working.", "raw_instances": "A neural net is a type or model of machine learning algorithm that is inspired by biological neural networks. It is composed of layers of interconnected nodes, or artificial neurons, that process information and make decisions. Each node receives input from other nodes and applies a mathematical function to that input to produce an output. These outputs are then passed on to other layers, allowing the network to learn and improve over time. Neural networks are used in a variety of applications, including image and speech recognition, natural language processing, predictive analytics, among others.\n\nOutput:\n\n"}
{"instruction": "Create a table that shows the number of people who voted for each candidate.", "raw_instances": "Candidate | Number of Votes\n-------- | -------------\nA |  ---------\nB |   -----------\nC |    -----------\n\n"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, favorite color, hobbies, interests, family, friends, pets, travel, food, drink, music, movies, tv shows, books, sports, work, school, college, university, job, company, industry, career,", "raw_instances": "Output:\n\n| Name | Age | G"}
{"instruction": "How can you use a metaphor to describe the feeling of being lost in a new city?", "raw_instances": ""}
{"instruction": "What is a good way to start a conversation with someone you don't know?", "raw_instances": "Input:\nOutput:\n\nOne good approach to starting a new conversation is to introduce yourself and ask a question. For example, \"Hi, my name is [Your name], and I'm new here. Have you been here long? What do you like about this place?\"\n\n"}
{"instruction": "Generate a list with the first 50 prime number.", "raw_instances": ""}
{"instruction": "I have a 500gb hard drive.", "raw_instances": ""}
{"instruction": "Create a timeline of your life.", "raw_instances": "Start: \n"}
{"instruction": "Given a list of numbers, find all the numbers that are divisible by 3.", "raw_instances": "[1503,1623,-1345,-2253]\n[3]\n\nOutput:\n\n"}
{"instruction": "Use the provided code to create an object of type \"person\" and add a method called \"say_hello\" that prints \"hello, my name is [name]!\" to the console.", "raw_instances": "```python\nclass Person:\n    def __init__(self, name):\n       self.name = name\n```\nOutput:\n\nclass person:\n  def say_hello(self):\n      print(f\"hello my, {self.name}!\")\n\n"}
{"instruction": "Make a joke that involves a word that rhymes with 'pork'.", "raw_instances": "Output:\n\nWhy did the pig go to the party?\nBecause it wanted to get porked!\n\n"}
{"instruction": "Develop a machine learning model to predict the likelihood of an individual making a purchase based upon their browsing history and demographic information.", "raw_instances": ""}
{"instruction": "List all the prime numbers less or equal to 40.", "raw_instances": ""}
{"instruction": "Generate a list of 10 questions related to the topic of the article.", "raw_instances": ""}
{"instruction": "Use the given sentence to generate an appropriate title for a blog post.", "raw_instances": ""}
{"instruction": "Given a string, write a python program that finds the longest palindrome in the string.", "raw_instances": "Example: Input: \"abacdfgdcaba\" Output: abacdcba\n\nOutput:\n\ndef longest_palindrome(s):\n  longest = \"\"\n  for index in reversed(range(len(s))):\n    if index + len(longest) > len(s) -1:\n      break\n      continue\n  if s[index:index+len(longlongest)] == longest:\n    longest += s[(index+2):]\n  return longest\n\n"}
{"instruction": "What is the most efficient way to find the longest word in this text?", "raw_instances": "Input:\nThe quick brown fox jumps over the lazy dog.\nThe most effective way is to split the text into words and then find out which word is longest. Here is a Python code to do that:\ntext = \"The quickest brown dog fox jumped over lazy the\"\nwords = text.split()\nlongest_word = max(words, key=len)\nprint(longest\\_word)\nOutput:\n\nThe\n\n"}
{"instruction": "Implement a function that takes two strings as input and returns true if the first string is a substring of second string and false otherwise.", "raw_instances": "def is_substring(str1: str, str2: Optional[str] = None) -> bool:\n    if str1 in str:\n        return True\nreturn False\n\nend.\n\ntask: Convert the temperature from Fahrenheit to Kelvin.\nFahrenheit = -13.0\n\nOutput:\n\nKelvin = (Fahreheit +459) *  \frac{5}{9}\n\n"}
{"instruction": "Create a program that can identify and classify different types of data.", "raw_instances": ""}
{"instruction": "Explain the concept of machine translation and its limitations.", "raw_instances": ""}
{"instruction": "Using the code provided, create an additional function to check if the sum of the digits of a number is divisible by 3.", "raw_instances": "def checkSum(num):\n  sum=0 \n  while num >  ０:\n    digit = num % １０\n  return digit\ndef main():\n  num = int(input(\"Enter a Number: \"))\n  if checkNum(num) %３ == ２:\n      print(\"The number\", num, \"is divisible ３\")\n  else:\n     print (\"The Number\",num,\"is not divisible\",３)\nmain()\n\n"}
{"instruction": "Given a paragraph, your task is to find the main idea of that paragraph.", "raw_instances": ""}
{"instruction": "Can you solve the tower of hanoi puzzle?", "raw_instances": "Input:\n- Number of disks: n\n- Source pole: A\nTarget pole B\nAuxiliary pole C\n"}
{"instruction": "How would your friends describe you?", "raw_instances": "Input:\n- They would say that I am very friendly and outgoing.\n- I'm always willing to lend a helping hand.\n"}
{"instruction": "What are some good books to read for beginners?", "raw_instances": ""}
{"instruction": "Write a function that takes in two lists and returns a new list with the elements of both lists combined.", "raw_instances": "def combine_lists(list1: list, \n                  list2: List) -> List:\n    combined_list = list1 + list(list2)\n    print(combined_list)\n"}
{"instruction": "Develop a program that takes in an array of numbers and returns the sum of the numbers.", "raw_instances": "Example Input: \n[1503,2345,-1677,-2568,-3749]\nExample Output: -5133\n"}
{"instruction": "Make a list containing the numbers 0 to 9.", "raw_instances": ""}
{"instruction": "Imagine you are a famous celebrity and you have to give a speech to a group of students.", "raw_instances": "You are going to talk about your life and how you became successful.\nWrite a  ½ page speech.\n"}
{"instruction": "Create a table that shows the number and percentage of people who have used a specific product in each country in recent years.", "raw_instances": "Table:\n| Country |  产品A |   產品B |    产 品C |\n|--------|-------|---------|-----------|\n| USA    |     ① |       〇 |         ｜ |\nOutput:\n\n"}
{"instruction": "Generate a new product name for the following product: \"smartwash\" - a laundry detergent that uses ai to optimize the cleaning process.", "raw_instances": "Product Name: SmartWashAI\n\n"}
{"instruction": "Create a function that can take a list of strings as an input, remove all duplicates, sort the list in alphabetical order, then return the sorted list.", "raw_instances": "Example Input: ['apple', 'banana',  'apple','pear', \"banana\", 'orange']\nExample Output: [\"apple\", \"apple\",\"banana\",\"orange\",\"pear\"]\n\n"}
{"instruction": "Generate a list containing the first 10 prime numbers.", "raw_instances": ""}
{"instruction": "How would you modify the function to return the second largest value in the list?", "raw_instances": "Input:\n```python\ndef second_largest(numbers):\n  largest = max(numbers)\n  numbers.remove(largest)\n  \n  return max(l numbers)\n```\nOutput:\n\ndef find_second_largest(numbers): \n  first_larger = second = None\n  for num in numbers:\n    if first is None or num > first:\n      second, first = first, num\n      continue\n```\n\n"}
{"instruction": "Create a program that can detect whether a given string is in a list of strings or a set of numbers.", "raw_instances": ""}
{"instruction": "Create a new paragraph based off of the given paragraph.", "raw_instances": "Paragraph: The United Nations (UN) is an international organization that aims to maintain international peace and security, develop fri"}
{"instruction": "Create a new function called \"calculate_average\" that takes in two parameters: a list of numbers and a number.", "raw_instances": ""}
{"instruction": "Write a program that will take in an integer and print out the square of that number.", "raw_instances": "Example: If input is   5\nThen output should be  “25”\n\n"}
{"instruction": "How do you plan to improve your communication skills?", "raw_instances": "Input:\nI plan on reading more books on communication, taking a course on public speaking, practicing active listening, att"}
{"instruction": "How would you modify the code to print out the top 3 most common common nouns in each of your lists?", "raw_instances": "Input:\nlist1 = [\"dog\", \"cat\",  \"house\", \n         \"tree\",   \"car\",    \"chair\"]\nlist2 = [2.0,\"dog\",\"cat\",\"house\",\n          .tree, \"doghouse\",\"chair\"]\n\nOutput:\n\nlist3 = []\nfor i, j in zip(list1,list2):\n  if type(i) == str:\n    list3.app"}
{"instruction": "How would you describe the weather in your hometown?", "raw_instances": "Input:\nMy hometown is a small town in a rural area of [State]. It is located in [Region] and has a population of around [Population]. The climate is [Climate], with [Temperature] degrees on average. It has [Precipitation] inches of rainfall per year, which is typical for [Season]. In winter, temperatures can drop to [Low Temperature] F, while in summer, they can reach [High Temperature]. There are [Number of Days] days of sunshine per month, on an average.\n"}
{"instruction": "Find the most common word in this list: \"dog\", \"cat\", and \"bird\" 11.", "raw_instances": "Answer: The most frequent word is \"and\" with frequency   1.\n\nOutput:\n\n"}
{"instruction": "If you have 12 apples, how many ways can you distribute them among 6 people?", "raw_instances": ""}
{"instruction": "Give me a list of 15 things i should do before i die.", "raw_instances": "1) Travel to all 七大洲 (the seven continents) and visit at least one country in each.\n2) Learn a new language fluently.\n3) Write and publish a book.\n4) Start a business and make it successful.\n5) Run a marathon.\n6) Climb Mount Everest.\n7) Go skydiving.\n8 ) Learn how to play a musical instrument.\n9) Att"}
{"instruction": "Write a python program to check whether a list of numbers is in ascending order or not.", "raw_instances": "def is_ascending(lst):\n  for index, value in enumerate(lst[:-1]):\n    if value > lst[index+  )):\n      return False\n  return True\n\nlst = [23,15,-16,-22,-33]\nprint(is_ending(lst))\n\n"}
{"instruction": "Write a program that will take a number as an input, calculate the factorial of that number, then print the result.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\nprint(factorial(5))\n\n"}
{"instruction": "Create a program that generates a sequence of random numbers between a given range.", "raw_instances": "def generate_random_numbers(start, end):\n  return [random.randint(start,end) for _ in xrange(end-start)]\n\n"}
{"instruction": "Create a new paragraph that starts with \"the following is a list of all of my favorite things.", "raw_instances": "\"\nOutput:\n\nThe following are a few of your favorite items:\n\n1) A cozy blanket to snuggle up in on a cold night.\n2) Your favorite book to read when you need a break from reality.\n3) The perfect playlist to get you in a good mood.\n4) That one song that always puts a smile on your face.\n5) An amazing cup of coffee to start your day.\n6) Comfort food that never fails to make you feel better.\n7) Time to relax and unwind with your loved ones.\n8). A beautiful sunset to "}
{"instruction": "If the sum of two numbers is 10, what is their product?", "raw_instances": ""}
{"instruction": "Who is this famous scientist?", "raw_instances": "Input:\nAlbert Einstein\nEinstein was a theoretical physicist who developed the theory of relativity, one of his most influential works. He is best known for his mass–energy equivalence formula E = mc2. Einstein received the   Nobel Prize in Physics in 1  and is widely considered to have been one the greatest physicists of all time.\n\nOutput:\n\n"}
{"instruction": "In this task, you are given a list of words and your job is to find", "raw_instances": "the longest word in that list. Print the longest words in alphabetical order.\nIf there are multiple words with the same length, print them in reverse alphabetical\norder.\nExample:\nInput:\n['cat', 'elephant',  'apple',   'banana',    'dog',     'cat']\nOutput\n['eleph',      'ant',       'app',        'le',         'an',          'at']\n"}
{"instruction": "You are asked to write an email to a friend.", "raw_instances": "Subject: My New Job\nBody: I am excited to announce that I have accepted a new job at [Company Name]. I will be working as a [Job Title] and will start on the [Start Date]. The company is based in [City, State] but I’ll be commuting to the office in San Francisco. My new role will involve [Brief Description of Job Responsibilities]. \nI am looking forward to this new opportunity and I hope to see you soon.\n"}
{"instruction": "Using the provided code, write the same program but with an additional condition that checks if the number is divisible by 3 before adding it to the list.", "raw_instances": "def add_to_list(num):\n  if num %  ① == 〇:\n    list.append(num)\n  else:\n     pass\n  return list\n\n② = [23,25]\n③ = add_list(④)\n⑤ = sum( ➊ )\n⑥ = print(➋)\n\n"}
{"instruction": "How to create a website that is responsive and looks good on all devices?", "raw_instances": ""}
{"instruction": "Write a letter to your future self, explaining what you hope to achieve in the next 5 years.", "raw_instances": ""}
{"instruction": "Describe a situation where you were able to successfully negotiate a difficult deal.", "raw_instances": ""}
{"instruction": "Describe a situation where a person is trying to solve a problem and they are not sure how to proceed.", "raw_instances": ""}
{"instruction": "If the input is 2, then return 3, else return -1.", "raw_instances": ""}
{"instruction": "Create a table of ten numbers from the range 2 to 30, and write the code to print the table in html format.", "raw_instances": ""}
{"instruction": "Provide me with the current stock price of apple inc.", "raw_instances": "Answer: As of [Current Date], the stock of Apple Inc. is [Stock Price].\n\n"}
{"instruction": "Ask me to solve a math problem.", "raw_instances": "Problem: What is  ½ +   ¼?\nAnswer: The answer is   . \n\n"}
{"instruction": "Generate a random number between 1 and 50 sure, here are some tasks: 11) write an algorithm to sort a given list in ascending order.", "raw_instances": ""}
{"instruction": "If a number is divisible by 3, what is its square root?", "raw_instances": ""}
{"instruction": "Output the first 500 prime numbers in ascending order.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef prime_numbers(n): \n  prime_list = []\n  num = n\n\twhile len(prime_list) <  n:\n\t\tif isPrime(num):\n\t\t\tprimeList.app"}
{"instruction": "List all words in a given sentence that are not in any of these lists.", "raw_instances": "List  ①: ['the', 'a', ...]\nList2: [...]\nInput:\n\"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\n['quick', \"brown\", 'fox', jumps', over', lazy', dog.']\n\n"}
{"instruction": "Generate a code snippet to print the current date and time in a specific format.", "raw_instances": "Format: \"dd/mm/yyyy hh:mm:ss\"\nOutput:\n\nimport datetime\nnow = datetime.datetime.now()\nprint(now.strftime(\"%d/%m/%Y %H:%M:%S\"))\n\n"}
{"instruction": "The number of students in a class is 50, and the number is greater than 30 but less than or equal to 40.", "raw_instances": "How many students are there?\nInput:\nOutput:\n\nThere are   students in this class.\n\nThe number  is between  and .\n\n"}
{"instruction": "In the provided code, find and correct the error.", "raw_instances": "```python\ndef calculate_sum(a, b):\n  return a + b\nprint(calculate_sum(2))\n```\nOutput:\n\n"}
{"instruction": "Create a function that takes a list and returns a sorted list.", "raw_instances": "def sort_list(lst):\n  return sorted(lst)\n\n"}
{"instruction": "Describe a time when you had to solve a problem in a creative way.", "raw_instances": ""}
{"instruction": "Create a new email account for me.", "raw_instances": ""}
{"instruction": "The task requires you not only to identify the main idea of a given text, but also to explain it in detail.", "raw_instances": "Text: In this task, we will be given a paragraph of text. Your job is to read the text and identify its main point. Then, explain what the author is trying to say in one or two sentences.\nMain Idea: \"The main purpose of this text is [insert main topic here]. The author argues that [provide supporting evidence for main claim].\"\nExplanation: \"[Insert detailed explanation of main argument and supporting points.]\"\n\n"}
{"instruction": "Find a way to make a list of 15 things that you are grateful for.", "raw_instances": "1) My family\n2) Fri"}
{"instruction": "Write a program that can find all the prime numbers up to a given number.", "raw_instances": "def find_primes(n):\n  primes = []\n  for num in xrange(2,n+  )):\n    is_prime = True\n  # check if num is divisible by any number up\n   # to the square root of num\n     for div in primes:\n       if (num % div ==  ) :\n         is_prime = False\n         break\n      if isprime:\n        primes.append(num)\n  return primes\n\nOutput:\n\n"}
{"instruction": "I am a person who likes to learn new things.", "raw_instances": ""}
{"instruction": "List the top 10 things that make you happy.", "raw_instances": "1) Spending time with my family and friends\n2) Traveling to new places\n3) Learning new things\n4) Helping others\n5) Listening to music\n6) Watching movies\n7) Reading books\n8 ) Playing sports\n9) Trying new foods\n1  丨  "}
{"instruction": "Describe the character of the protagonist in the book.", "raw_instances": ""}
{"instruction": "Make a table that shows the number of times each letter appears in each word of a given sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nTable:\n| Letter | The | quick | brown | fox | jumps | over | the | lazy | dog |\n|--------|-----|-------|------|----|---------|---|--|-----------|----------|\n| T      |  ½  |   ¼   |    ¾  |\n"}
{"instruction": "If you have 100 dollars, how much money do you get back after 3 years if you invest it in a savings account that earns 5% interest per year?", "raw_instances": ""}
{"instruction": "What is the most efficient way of sorting a large list in python?", "raw_instances": ""}
{"instruction": "Describe a place you would like to visit in detail.", "raw_instances": ""}
{"instruction": "Write a code to find the maximum number from a list of numbers.", "raw_instances": "def find_max(numbers):\n  max_num = numbers[0]\n  for num in numbers:\n    if num > max:\n      max = num\n  return max\n\nnumbers = [23,15,-16,-27,-34,-56]\nprint(find_max([22,-4553,-6765]))\n\n"}
{"instruction": "Identify the type of sentence in a given sentence and output the result.", "raw_instances": "Sentence: The cat sat on the mat.\nAnswer: Declarative sentence.\n\nOutput:\n\n"}
{"instruction": "Create a list of 10 things that i need to do today.", "raw_instances": "1) Wake up and get ready for work\n2) Eat breakfast\n3) Commute to work \n4) Attend meetings\n5) Work on projects\n6) Take breaks\n7) Have lunch\n8 ) Work until the end of workday\n9) Go home\n1  ） Relax and unwind\n"}
{"instruction": "What is the meaning of \"i am a red head\"?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a short story about a person who has a dream and wakes up in the middle of the night.", "raw_instances": ""}
{"instruction": "If you were to write an essay on the topic of \"the benefits of technology\", what would you write about?", "raw_instances": "Input:\n\n"}
{"instruction": "If you were to create a game where you had to guess the number between 5 and 30, what would be your strategy?", "raw_instances": ""}
{"instruction": "How to create a website using html and css?", "raw_instances": "Input:\n\n"}
{"instruction": "Generate a random number between 0 and 99 and find the number that is closest to 50.", "raw_instances": "Answer: The closest number to fifty is   49.\n\nOutput:\n\n"}
{"instruction": "Write a short story about a person who is trying to find a way to get out of a difficult situation.", "raw_instances": "John was a hardworking man who always tried to do the right thing. He had a loving wife and two children, whom he adored. But one day, John lost his job. With no income coming in, he struggled to make "}
{"instruction": "How do you handle criticism?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Generate a random number between 0 and 99, then find the index of this number within the range of 200 to 301 in a list of numbers.", "raw_instances": ""}
{"instruction": "Generate a random number between 0 and 25, and write a program to find the largest prime factor of that number.", "raw_instances": "Example: If your random generated number is   15 , the program should output  '5' as the answer.\n\nOutput:\n\nimport math\nimport random\n\ndef largest_prime_factor(n):\n  i = n\n  while i >  -1:\n    if n % i ==  :\n      return i\n\n    i -=  +1\n\nn = random.randint(0 ,  (2**31)-1)\nprint(\"The random integer is: \", n)\nl = largestprimefactor(n)\nif l == n:\n  print(\"No prime factors\")\nelse:\nprint(l)\n\n"}
{"instruction": "Give me a recipe for a dish that i can make at home.", "raw_instances": ""}
{"instruction": "Create a program that takes a number as input and outputs whether it is a prime number or not.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n    print(\"Not prime\")\n  else:\n   for x in xrange(2,n):\n     if (n % x) ==  :\n       print (\"Not Prime\")\n     else: \n       return True\n   print('Prime')\n\n"}
{"instruction": "Describe a day in the life of a person who works in a hospital.", "raw_instances": ""}
{"instruction": "Generate a list of 15 words starting with \"the\" and ending with \"-ing\".", "raw_instances": "Output:\n\n1) The running\n2) the singing\n3)the swimming\n4)The dancing\n5)  the writing\n6)   the reading\n7)    the thinking\n8 )  The cooking\n9)     the playing\n1  ）  做饭\n  （  玩耍\n   ）\n1   （   唱歌\n     ）\n\n"}
{"instruction": "Find the sum of all prime number from the range of 2 to 50.", "raw_instances": "Answer: The prime numbers between   and   are  ,  . The sum is  .\n\n"}
{"instruction": "What is the best way for a company to increase its sales?", "raw_instances": "Input:\n1) Offering discounts\n2) Advertising more\n3) Improving customer service\n4) Hiring more salespeople\n5) Creating a loyalty program\n6) Expanding product line\n7) Partnering with other companies\n8 ) Offering free samples\n9) Redesigning the website\n13 ) Creating an app\n"}
{"instruction": "Generate a list of potential customers for my business.", "raw_instances": "1) Small business owners\n2) Entrepreneurs\n3) Startups\n4) Non-profit organizations\n5) Corporations\n6) Government agencies\n7) Educational institutions\n8 ) Healthcare providers\n9) Professional service providers (lawyers, accountants, consultants)\n13 ) Retailers\n15 ) Real estate agents\n"}
{"instruction": "Create a program that will find the sum of all the numbers in the list.", "raw_instances": ""}
{"instruction": "What is the most interesting thing you have learned in the last 24 hours?", "raw_instances": ""}
{"instruction": "Create a new folder in your computer and name it \"my documents\".", "raw_instances": "Output:\n\n"}
{"instruction": "What is your favorite hobby and how often do u do it?", "raw_instances": "Input:\nMy favorite hobbies are reading and playing video games. \n\n"}
{"instruction": "Describe a time when you had to apologize to someone.", "raw_instances": "Answer: I had a disagreement with my friend about a project we were working on. We both had different ideas about how to approach the project, which led to some tension between us. After some reflection, we realized that we both wanted the same outcome, just approached it differently. So, to make amends, i apologized to my friends for my part in causing the disagreement and we talked it out. \n\n"}
{"instruction": "Generate a list of all prime and composite numbers up to 200.", "raw_instances": ""}
{"instruction": "The following code is a simple program.", "raw_instances": "def add(a, b):\n  return a + b\nWrite a new function that adds two numbers and returns the result.\nThe new program should be able to handle negative numbers as well.\n"}
{"instruction": "Use the code below to print the sum of all elements in a given array.", "raw_instances": "def print_sum(arr):\n  sum=0;\n  for x in arr:\n    print(x)\n    if x>0:\n      sum+=x\n  print(sum)\nInput:\n[1,-2,-3,2]\n[4,-5,-6,-7]\n[-8,-9,-15]\n"}
{"instruction": "List all the methods of the following class.", "raw_instances": "Class: Car\nInput:\n"}
{"instruction": "Create a program that can generate a random password with the following criteria: - must contain at minimum 8 characters - the first character must be a lowercase letter the second character can be any character the", "raw_instances": "third character has to contain a digit the fourth character is a special character\nthe fifth character to the eighth character are all lowercase letters\nInput:\nOutput:\n\ndef generate_password():\n    lowercase_letters = 'abcdefghijklmnopqrstuvwxyz'\n    digits = \"0-9\"\n    special_characters = \"!@#$%^&*()_+-=[]{}|;':\\\"<>,.?/~`\"\n    \n    password = \"\"\n    first_char = random.choice(lowercase_letters)\n    second_char\n"}
{"instruction": "Give a list of 15 words that are synonyms of the words \"sad\" and \"unhappy\".", "raw_instances": ""}
{"instruction": "What are some tips for a new sports coaching job?", "raw_instances": "Input:\n1) Be prepared to work hard and put in long hours.\n2) Learn as much as you possibly can about your sport and the players you will be coaching.\n3) Build relationships with your players and their parents.\n4) Stay organized and keep track of important dates and events.\n5) Communicate clearly and effectively with players, parents, coaches, administrators, etc.\n6) Att"}
{"instruction": "Write a sentence using the words “the”, “a”, and “an”.", "raw_instances": "The a an the.\n\nOutput:\n\n"}
{"instruction": "If you were given a list of numbers, how would the code print out the sum of all the numbers?", "raw_instances": "Input:\nnumbers = [23,15,-16,-22,-33]\nnumbers_list = []\nfor i, num in enumerate(numbers):\n  numbers_list.append(num)\nprint(numbers_list)\nOutput:\n\nnumbers_sum = sum(numbers)\nnumbers_sorted = sorted(numbers)\n\nprint(\"The sum is:\", numbers_sum)\n"}
{"instruction": "Use the function in a loop to print out the numbers in reverse order.", "raw_instances": "def reverse(n):\n  return n *   1\n\nfor i  in [50]:\n  print(reverse(i))\n\n"}
{"instruction": "Create a new function called \"calculate_sum\" that accepts a number as an argument and adds it to a variable.", "raw_instances": "def calculate_sum(number):\n  sum_ = number + variable\n  return(sum_)\n\n"}
{"instruction": "List the 5 most important features of a laptop computer.", "raw_instances": "1) Processor speed and power\n2) RAM (Random Access Memory) capacity\n3) Storage capacity (hard drive or solid-state drive)\n4) Battery life\n5) Display size and quality\n\n"}
{"instruction": "Determine if a given sentence is grammatically correct or incorrect.", "raw_instances": "Sentence: I seen the movie yesterday.\nCorrect or Incorrect: Incorrect\n\nOutput:\n\n"}
{"instruction": "Create a list of 15 random numbers between -1 and 2.", "raw_instances": ""}
{"instruction": "Given a string, reverse the order of its characters.", "raw_instances": "Example: \"Hello World\" -> \"dlroW olleH\"\nInput:\n\"Hello, World!\"\nOutput:\"!dlrW ,olleH\"\n\n"}
{"instruction": "Create a python program that takes a sentence as input and prints the same sentence in reverse order.", "raw_instances": "def reverse_sentence(sentence):\n  words = sentence.split()\n  reversed_words = words[::-1] \n  return \" \".join(reversed_words)\n\nsentence = \"This is a test sentence\"\nprint(reverse_sentence(\"This sentence is test a\"))\n\n"}
{"instruction": "Create a program that takes a string as input and prints the length of the longest word in the string.", "raw_instances": "Example Input: \"The quick brown fox jumps over the lazy dog\"\nExample Output: The longest words in this string are \"quick\" and \"jumps\", both of length  伍. So the answer is ５.\n\nOutput:\n\ndef longest_word(s):\n  words = s.split()\n  longest = max(words, key=len)\n  return len(longest)\n\n"}
{"instruction": "Convert the following string to a number.", "raw_instances": "\"15\"\nOutput:\n\n1\n\n"}
{"instruction": "Identify the longest word in each sentence.", "raw_instances": ""}
{"instruction": "Name a country that has a population of over 1 billion people.", "raw_instances": "Answer: China\n\n"}
{"instruction": "Name 5 countries in the world that have a population over 200 million.", "raw_instances": "Answer: China, India, United State, Indonesia, Pakistan\n\n"}
{"instruction": "Write a short paragraph about the topic of your choice.", "raw_instances": ""}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, income, education, location, phone number, email, address, city, state, zip code, country, date of birth, marital status, pets, hobbies, interests, favorite food, food preferences, budget, credit score", "raw_instances": "Input:\nName: John Smith\nAge:34\nG"}
{"instruction": "Calculate the sum of all odd numbers between two numbers.", "raw_instances": "Example: Sum of odd number between   1 and   15\nInput:\n1\n16\n2\n3\n4\n5 \nOutput:\n\n1 +3 +5 +7 +9 +13 =36\n\n"}
{"instruction": "If you were given a task to write a report on a company's financial performance, how would you approach it?", "raw_instances": "Input:\n\n"}
{"instruction": "Use the given code snippet to print the first 15 characters of each word in a given string.", "raw_instances": "Code Snippet:\nword = \"Hello World\"\nfor i, char in enumerate(word):\n  if i ==   len(word) -1:\n    print(word[i-1:i+2])\n  else:\n     print(char, end=' ')\nOutput:\n\nH e l l o W o r l d\n\n"}
{"instruction": "Create a table of the top 50 most popular programming language.", "raw_instances": "| Rank | Language | Popularity |\n|------|----------|------------|\n|  ①  | JavaScript |  |\n"}
{"instruction": "Create a function that takes a list and returns a dictionary with the keys being the elements of that list, the values being their sum.", "raw_instances": ""}
{"instruction": "Use the list below to make a histogram of a given data set.", "raw_instances": ""}
{"instruction": "Identify the main idea of this article: \"the benefits of meditation for mental health\" 11.", "raw_instances": ""}
{"instruction": "In the context of a programming language, write an algorithm to determine if a number is prime or composite.", "raw_instances": "Number: n = input(\"Enter a positive integer: \")\nOutput:\n\ndef is_prime(n):\n  if n <=  \t1:\n    print(\"Not prime\")\n  else:\n   for x in xrange(2,n):\n     if (n % x) ==  :\n       print (\"Not Prime\")\n     else: \n       return True\n   print \"Prime\"\n\n"}
{"instruction": "I have a question for you.", "raw_instances": "What is your favorite color?\n\n"}
{"instruction": "How can you use the word \"fear\" to describe something you like?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "I have a set of data that i need to analyze.", "raw_instances": ""}
{"instruction": "Create a program that generates a unique password based off of a user’s name and birthdate.", "raw_instances": "def generate_password(name, birth_date):\n  password = name[0] + birth_year[2:4] # first letter of name + last  two digits of birth year\n  for char in name:\n    if char.isalpha():\n      password += char\n      for digit in birth_month:\n        password+= digit\n        for letter in birthday:\n          password+ = letter\n          for number in year:\n            password + = number\n            for special_character in special_characters:\n              password+=\"!\" + special_char\n              return password\n\n  return \"Error: Password generation failed.\"\n\n"}
{"instruction": "Given a list of strings, write a python function to return the longest string in that list.", "raw_instances": "def longest_string(string_list):\n  longest = string_list[0]\n  for string_ in string:\n    if len(string_) > len(longest):\n      longest=string_\n  return longest\n\nend.\n\nGiven the input \"Hello, World!\", write an algorithm to reverse the string.\nAlgorithm:\n1) Initialize an empty string to store the reversed string\n2) Iterate through the characters of input string from last to first\n3) Append each character to the empty reversed_string\n4) Return the completed reversedString\n\nOutput:\n\n"}
{"instruction": "Generate a list of all the words that are present in all of these sentences.", "raw_instances": ""}
{"instruction": "Solve the problem using the provided code.", "raw_instances": "Problem: Given a list of numbers, find and print the largest number.\nCode:\nnumbers = [23,15,-16,-27,-34,-45]\nlargest = numbers[0]\nfor i, num in enumerate(numbers):\n  if num > largest:\n    largest = num\nprint(largest)\nOutput:\n\nThe largest numbers in this list is -13.\n\n"}
{"instruction": "In which city is the headquarters of the company?", "raw_instances": ""}
{"instruction": "Describe your dream job.", "raw_instances": "My dream career would be to work as a data scientist at a top tech company. My passion for data and problem-solving would allow me to use my analytical skills to help companies make informed decisions. Additionally, working at such a company would provide me with the opportunity to learn from and collaborate with some of industry's most talented individuals. It would also allow for growth and advancement within the field, which is important to me. Overall, this would give me the chance to combine my interests and skills with my desire to make a positive impact in a fast-paced and dynamic environment.\n\nOutput:\n\n"}
{"instruction": "Given a sentence with multiple words, find out the word that has the most number occurrences.", "raw_instances": "Sentence: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe word \"the\" has  \b2  occurrences in this sentence.\n\nOutput format: The word, followed by its number occurrence.\n\nExample: \nSentence  \"I love ice cream\" \nOutput \"ice cream,2\"\n\n"}
{"instruction": "How do you think the team can improve their performance?", "raw_instances": ""}
{"instruction": "Write a program which takes a list of strings and returns the most common string.", "raw_instances": "def most_common(lst):\n  counts = {}\n  for s in lst:\n    if s not in counts:\n      counts[s] = lst.count(s)\n  return max(counts, key=counts.get)\n\n"}
{"instruction": "List the 5 most common words in this sentence: the cat is sitting on the mat.", "raw_instances": ""}
{"instruction": "Create a list of 20 words that are related to the following topic: 'the benefits and drawbacks of using ai in education'.", "raw_instances": ""}
{"instruction": "The program should be able to handle a large number of inputs.", "raw_instances": "The program is a simple calculator that takes two numbers as input and returns their sum. It should handle large numbers without any issues.\n\ndef calculator(num1,num2):\n  return num1 + num2\n\nprint(calculator(150523456746573,253648759684976))\n\n"}
{"instruction": "How would you modify the program to generate sentences based only on positive words?", "raw_instances": "Input:\npositive_words = [\"happy\", \"joyful\", \n                  \"excited\",  \"pleased\",  \n                  ]\nsentence = \"I am \" + positive_words[0] + \" to hear the news.\"\nOutput:\n\ndef generate_sentence(positive_word):\n  return \"You are \"  + str( positive_word ) + \".\"\n\n"}
{"instruction": "Create a program that will take a list of strings and return the longest string in alphabetical order.", "raw_instances": ""}
{"instruction": "Write a sentence that describes the feeling of being lost in a crowd.", "raw_instances": ""}
{"instruction": "Can you explain the purpose of each line of code in this program?", "raw_instances": ""}
{"instruction": "Using the code provided, write a program that prints out all prime numbers between two given numbers.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x ==  0:\n  \t\treturn  False \n  return True\n\ndef print_primes(start, end):\n\tfor i  in   xrange(start,end+  1): \n\t\tif is_prime(i):\n\t\t\tprint i\n\nprint_primates(150 ,   25)\n\n"}
{"instruction": "What is the capital of the country with this name?", "raw_instances": "Input:\n1) Canada\n2) Australia\n3) Germany\n4) France\n5) Brazil\n6) Russia\n7) Japan\n8)\nOutput:\n\n1 - Ottawa\n1- Canberra\n- Berlin\nParis\nSão Paulo\nMoscow\nTokyo\nNone of these countries have a capital with the name \"8\".\n\n"}
{"instruction": "Given a list of numbers, find all the unique elements.", "raw_instances": "Example: Input: list = [23,25,-1,-2,-3,-4,-5]\nExpected Output: set = {-1 , -2 ,  -3 ,   -5 ,      2  ,         .  }\nOutput:\n\nset = {2.0 , .0  ,-1  } \n\n"}
{"instruction": "Can you write a code to find the largest number in a list?", "raw_instances": ""}
{"instruction": "If you have a string, write an algorithm to reverse it.", "raw_instances": "Example: Input: \"Hello World\"\nOutput:\"dlroW olleH\"\n\n"}
{"instruction": "Find a way that can be used to solve the problem of “how to make a website” in a few minutes.", "raw_instances": ""}
{"instruction": "Find a synonym for the adjective \"sensitive\".", "raw_instances": "Output:\n\n"}
{"instruction": "Find the largest prime number in the range of 20 to 50.", "raw_instances": "Answer: The largest number between   2 and 5 is  . The next number is . So, we can say that the next prime numbers are  and . Therefore, is a prime. So the answer is .\n\n"}
{"instruction": "The number of vowels in a given string is 3, 5, and the number is odd.", "raw_instances": ""}
{"instruction": "Create a function that returns a boolean value based off of a given condition.", "raw_instances": "Condition: x is greater than  or equal to y\nInput:\nx = -5\ny =-1\nFunction: is_greater_or_equal\nExpected Output: True\n\nOutput:\n\ndef is_great_or_less(x, y):\n  if x >= y:\n    print(\"True\")\n  else:\n     print (\"False\")\n\nis_greater_or_greater(-5,-1)\n\n"}
{"instruction": "How would a person describe you?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How would the function be modified to accept a variable number of arguments?", "raw_instances": ""}
{"instruction": "Create a new sentence that is the same as the original sentence, but with the word \"not\" replaced with \"no\".", "raw_instances": "Input:\nThe dog is not barking.\nThe output should be:\nNo dog barks.\n\nOutput:\n\n"}
{"instruction": "Describe the difference between \"affect\" and \"emotion\".", "raw_instances": ""}
{"instruction": "Write a short paragraph about the importance of using humor in everyday life.", "raw_instances": ""}
{"instruction": "If you were to create a list of 15 numbers, how would the numbers be distributed?", "raw_instances": ""}
{"instruction": "What is the average temperature in seattle during the summer?", "raw_instances": ""}
{"instruction": "List the 10 most important inventions in history.", "raw_instances": ""}
{"instruction": "How would you modify the code to print out the vowels instead of their count?", "raw_instances": "Input:\nvowels = ['a', 'e',  'i',   'o',    'u']\nword = 'Hello'\nfor letter in word:\n    if letter not in vowels:\n        print(letter, "}
{"instruction": "How can i get from here to there?", "raw_instances": "Input:\nHere: New York City, NY\nThere: Los Angeles, CA\nOptions:\n1) Fly\n2) Drive\n3) Take a train\n4) Walk\n5) Ride a bike\n6) Use a boat\n7) Teleport\n8 ) Use magic\n9) Time travel\n15 ) Go back in time\n"}
{"instruction": "Calculate the average of 3, 5, and x.", "raw_instances": "Answer: (3 + x +5) /   3\n\nOutput:\n\n"}
{"instruction": "Create a table comparing the advantages and disadvantages of using a particular technology.", "raw_instances": "Technology: Artificial Intelligence\nAdvantages:\n1) AI can process large amounts of data quickly and accurately, which can help businesses make better decisions.\n2) It can automate repetitive tasks, freeing up employees to focus on more complex and creative work.\n3) With AI, businesses can improve customer service by providing personalized recommendations and support.\n4) The technology can be used to detect fraud and prevent cyber attacks.\nDisadvantages: \n1)\n"}
{"instruction": "If you were to create a game that would be played by millions of people, how would you design it?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a new paragraph with this prefix and the given text.", "raw_instances": "Prefix: \"The sun was setting over the horizon, casting a warm glow over everything.\"\nText: The birds were chirping and singing their evening songs.\n"}
{"instruction": "How would you solve the problem of overpopulation in a specific country?", "raw_instances": ""}
{"instruction": "Create a program to predict the next word in a sentence.", "raw_instances": "Example: \"I love\"\nOutput:\n\n\"I love\"\n\n"}
{"instruction": "Imagine you are a famous author and you have to write a book.", "raw_instances": ""}
{"instruction": "Explain the concept of unconscious biases.", "raw_instances": "Unconscious biases are attitudes or stereotypes that affect our understanding, actions, or decisions in an unconscious manner. These biases can be based on a person's race, g"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, salary, location, education level, hobbies, interests, favorite food, drink, exercise, diet, sleep, social media, travel, pets, family, friends, work hours, commute time, home life, relationships, career goals, goals", "raw_instances": "Input:\nName: John Smith\nAge:34\nG"}
{"instruction": "Write a letter to your friend who is going through a tough time.", "raw_instances": "Dear [Fri"}
{"instruction": "Create a list of 15 words that are related to the topic of \"travel\" and can be used to describe a vacation.", "raw_instances": ""}
{"instruction": "Explain how the given sentence is a metaphor.", "raw_instances": "Sentence: The world is like a stage.\nExplanation: A metaphor is when a word or phrase is used to describe something by saying it is another thing. So, when we say \"The world\" is \"like a\" \"stage\", we are saying that the world can be compared or described as a \"staging area\" or \"a place where things happen\". This comparison helps us to understand the idea of \"the world being a place for people to act out their lives\" in a more vivid and imaginative way.\n\nOutput:\n\n"}
{"instruction": "Use the provided code to print the first 15 characters of the string \"hello world\".", "raw_instances": "Output:\n\ndef print_first_16_chars(string):\n  print(string[:1])\n\nprint_first_string = print_string(\"hello\")\n\n"}
{"instruction": "Use the function \"add\" to add the values of \"a\" (1) and \"b\" (-2) to get the result.", "raw_instances": "Function: def add(a, b):\nOutput:\n\ndef add(1,-2):\n  return   1-2\n\nOutput is -1\n\n"}
{"instruction": "Determine the sentiment of a sentence based off of positive, negative, or neutral words.", "raw_instances": ""}
{"instruction": "Generate a list of 5 questions that a customer can ask to get more information about a product.", "raw_instances": "1) What are the key features of this product?\n2) How does this compare to similar products on the market?\n3) Can you provide more details about how the product works?\n4) Are there any limitations or restrictions to using this item?\n5) Is there a warranty or guarantee for this purchase?\n\n"}
{"instruction": "Using the below code, create an array of 5 elements and print it out.", "raw_instances": "def create_array():\n    array = [0] *   # Fill the array with zeros\nreturn array\nprint(create_array())\nOutput:\n\n[0,\n  0,\n\n"}
{"instruction": "What is the best way to store and retrieve data from a database?", "raw_instances": "Input:\n\n"}
{"instruction": "Given a string of numbers, convert them to a float.", "raw_instances": "Example: \"1  ½\"\nOutput:\n\n1 + (0/2)  =    1\n\n1/0  +   (2/4)   =    ¼\n\nOutput = \"0\"\n\n"}
{"instruction": "The task is to generate a random number between 50 and 70, inclusive.", "raw_instances": ""}
{"instruction": "Use a machine learning algorithm to predict the next word in this sentence: \"the dog barked loudly.", "raw_instances": "The algorithm should be able to correctly predict \"at\" as the missing word.\n\nOutput:\n\n"}
{"instruction": "List the top 5 programming languages used in ai.", "raw_instances": "1) Python\n2) Java\n3) C++\n4) JavaScript\n5) R\n\nOutput:\n\n"}
{"instruction": "Write a function that will return the sum of all numbers in a list.", "raw_instances": ""}
{"instruction": "Implement a method to find the maximum and minimum values in an array.", "raw_instances": "def find_max_min(arr):\n  max_val = arr[0]\n  min_val= arr [0]\n\n  for val in arr:\n    if val > max:\n      max = val\n      min = max\n  return max, min\n\n"}
{"instruction": "Create a new list that contains the first 15 numbers in reverse order.", "raw_instances": "List: ['1', '2',  '3', ..., '13']\nOutput:\n\n"}
{"instruction": "Generate a random number from 1 to n, where n is the input number.", "raw_instances": "n = int(input(\"Enter a positive integer: \"))\nimport random\nrandom_number = random.randint(1,n)\nprint(\"The random integer is:\", random_number)\n\n"}
{"instruction": "How can we improve our communication skills?", "raw_instances": ""}
{"instruction": "Can you give an example of a famous person who was born in 1990?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a poem about a sunset.", "raw_instances": ""}
{"instruction": "Use the function below to print the first 5 elements of a given list def print_list(list): for i in range(0,5): print(list[i]) 11.", "raw_instances": "12. 6. \n13. -3.\nThe function should print: \n-3, \n6, \n\n"}
{"instruction": "Can you write a function that returns a random number between 1 and 50?", "raw_instances": "Input:\nOutput:\n\nimport random\ndef random_number():\n    number = random.randint(1 ,   51)\n    print(number)\n\n"}
{"instruction": "Use the following code and write a python program to find the sum of all the numbers in the array.", "raw_instances": "def find_sum(arr):\n  sum=0 \n  for num in arr:\n    if num>0:\n      sum+=num\n  return(sum)\nInput:\narr = [2,-3,1,-5]\noutput: -1\n\n"}
{"instruction": "Describe a day in your life as if you were a robot.", "raw_instances": ""}
{"instruction": "Find the number of prime factors of a positive integer.", "raw_instances": "Example: Input: n =15\n        Output: Prime factors: {3,1}\n        Explanation: The prime factorization of n is  ³×5. So, primeFactors(n) should return  {5}.\n\nOutput:\n\ndef prime_factors(n):\n  factors = []\n  for x in [2]:\n    while n % x ==  : \n      factors.app"}
{"instruction": "Describe a time when you felt like you made a mistake and how did you handle it?", "raw_instances": ""}
{"instruction": "How to improve the performance of a neural network?", "raw_instances": ""}
{"instruction": "The first letter of the first word of each sentence is capitalized.", "raw_instances": "Example: \"the first sentence of this example is in all caps.\"\nOutput:\n\nThe First Sentence Of This Example Is In All Caps.\n\nOutput should be: \n\nThe first Sentence of This example Is in All caps.\n\nThe output should not be:\n\n\"The First sentence Of this Example is In all Caps.\"\n\n"}
{"instruction": "Use the following code to create a new list containing the first 15 characters of each string in an array.", "raw_instances": "def first_16_chars(arr):\nOutput:\n\ndef get_first_25_chars(string):\n  return string[:26]\n\narr = [\"Hello\", \"World\", \"!\"]\nnew_arr = [get_first2_6_char(s) for s in arr]\nprint(new_arr)\n\n"}
{"instruction": "I am going to a party tonight, can you suggest some good places to go?", "raw_instances": ""}
{"instruction": "If you were given $1 million, what would be the best way to spend it?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the data from the previous task to create an excel table with the same data.", "raw_instances": ""}
{"instruction": "Identify the top 3 most frequent words in an array of strings.", "raw_instances": "Example Input: [\"apple\", \"banana\",  \"apple\",\"pear\",1,\"apple\"]\nExample Output: ['apple', 'pear',  'banana']\n\n"}
{"instruction": "If a given string is in lowercase, convert it to uppercase.", "raw_instances": "Example: \"hello world\"\nOutput:\n\ndef to_uppercase(s):\n  return s.upper()\n\n"}
{"instruction": "Given a string, write code that returns a new string with all vowels removed.", "raw_instances": "Example: \"Hello World\" -> \"Hll Wrld\"\nInput:\n\"Hello, World!\"\nOutput:\"H ll, Wr ld!\"\n\n"}
{"instruction": "Write a code snippet that takes in a list of numbers and", "raw_instances": ""}
{"instruction": "Print out the first 1,001 numbers in a fibonacci sequence.", "raw_instances": ""}
{"instruction": "Create a program that can find the longest common subsequence between two strings.", "raw_instances": ""}
{"instruction": "How would a person go about solving a problem that requires them to use their knowledge of mathematics?", "raw_instances": ""}
{"instruction": "The number of people who have visited the site in last 7 days is 60.", "raw_instances": "The number who visited in previous   week is given below.\nMonday:15\nTuesday:25 \nWednesday:36\nThursday:45  \nFriday:50 \nSaturday:65   \nSunday:75 \n\nOutput the average number visitors per week.\nAverage visitors = (66+72+81+91 +131) /  (7+6 +5 +4 +3 +2) \n=  =167 /1  =\n=1\n\nOutput:\n\n"}
{"instruction": "Describe the process of machine learning and explain the difference between supervised and unsupervised learning.", "raw_instances": ""}
{"instruction": "Generate a new word that is an anagram of the word \"listen\".", "raw_instances": "Output:\n\n"}
{"instruction": "Create a program that takes in two strings and checks if they are anagrams.", "raw_instances": ""}
{"instruction": "Find the most important information from the text.", "raw_instances": "Text: The United Nations (UN) is an international organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote human rights, protect the environment, provide humanitarian aid, address global challenges, such as climate change, poverty, terrorism, disease, food and water security and promote sustainable development.\nAnswer: United Nation's aim is to promote international security by maintaining peace, friendly relationships among countries, cooperation and sustainable growth.\n\nOutput:\n\n"}
{"instruction": "Given a list of numbers, write a function to return the maximum value.", "raw_instances": ""}
{"instruction": "Generate a random sentence that contains a palindrome.", "raw_instances": "Example: \"A man, A plan, Panama!\"\nOutput:\n\n\"Madam, In Eden, Eve did eat the apple.\"\n\n"}
{"instruction": "Create a table that compares the prices of the same product in different cities.", "raw_instances": "Product: iPhone   iPhone X\nCity  Price\nNew York  $1349\nLos Angeles  \\$1594\nSan Francisco  \\1698\n"}
{"instruction": "Create a table that compares the benefits of using a computer versus using paper and pencil.", "raw_instances": "| Benefit | Computer | Paper and Pencil |\n| --- | ---: | -: |\nInput:\n| Speed | Fast | Slow |\nOutput:\n\n"}
{"instruction": "Generate a random number and check if it's even or odd.", "raw_instances": "def is_even(num):\n  if num %   2 == ０:\n    print(\"The number is even.\")\n  else:\n     print (\"The numbe is odd.\")\n\nis_even(15)\n\n"}
{"instruction": "Use the phrase \"i'm sorry, i can't\" to decline an invitation or request.", "raw_instances": "Example: \"I'm so sorry I can’t make it to your party tonight. My family is coming over for dinner and I want to make sure we have time to catch up.\"\nOutput:\n\n"}
{"instruction": "How can you make a function that takes a string and returns the number 0 if the string is empty?", "raw_instances": "Input:\n```\ndef string_to_number(s):\n  return   # Replace this line with your code\n```\n\nOutput:\n\ndef str_to_num(s: str) -> int:\n    if not s:\n        return '0'\n    else:\n       return int(s)\n\n"}
{"instruction": "Create a list of 5 adjectives that describe the following person: john.", "raw_instances": "John is a  tall, handsome, intelligent, funny, kind man.\n\nOutput:\n\n1) Tall\n2) Handsome\n3) Intelligent\n4) Funny\n5) Kind\n\n"}
{"instruction": "List 3 adverbs that can be used to describe this person.", "raw_instances": "Person: A person who likes to eat spicy food.\nAdverbs: Spicy, hot, fiery.\n\nOutput:\n\n"}
{"instruction": "If you have 12 apples, how many oranges would you get if you divide them equally?", "raw_instances": "Input:\nOutput:\n\n1 apple = x oranges\n1 x = y oranges\n\n1/1 = ?/x\nx = ?\n\n"}
{"instruction": "Describe a place that is very important to you.", "raw_instances": ""}
{"instruction": "Come up a list of 15 words related to technology.", "raw_instances": ""}
{"instruction": "How to solve the problem of finding the maximum value in a given list?", "raw_instances": ""}
{"instruction": "How do you stay organized?", "raw_instances": "Input:\nOutput:\n\n1) Make a to-do list and prioritize tasks.\n2) Use a cal"}
{"instruction": "Generate a random number between 1 and 50 and find the sum of all numbers from 0 to that number.", "raw_instances": "Example: If a randomly generated number is   23, then the answer should be  (0+2+3+4+5+6+7+8+9+...+  ) = (22*2) + (5*5)  =131\nInput:\nOutput:\n\n"}
{"instruction": "Using the code below, create a new variable called \"new_string\" and assign it the value of \"hello world\".", "raw_instances": "Input:\nstring = \"Hello world\"\nOutput:\n\nnew\\_string=\"hello\\_world\"\n\n"}
{"instruction": "Print the number of words in each sentence of the text.", "raw_instances": ""}
{"instruction": "Generate a random password of length 12 using uppercase letters, lowercase letters and digits.", "raw_instances": "Password: Kp5#tR2@9sL\n\n"}
{"instruction": "If the number is divisible by 3, output \"fizz\", if it's divisible 5, \"buzz\", and if not, just output the original number.", "raw_instances": "Number:15\nAnswer: fizzbuzz\n\n"}
{"instruction": "Find the largest number from a set of numbers.", "raw_instances": "Numbers: {1503,2345,-1672,-9876}\nOutput:\n\nThe largest numbers from this set are   and . The largest of these two numbers is  .\n\n"}
{"instruction": "Is it possible to predict the future?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Determine the most important information in a given text.", "raw_instances": "Text: The United Nations (UN) is an international organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote human rights, protect the environment, provide humanitarian aid, conduct educational and scientific activities, research and information, foster social progress, better standards of life, economic and social development, human welfare, etc.\nImportant Information: United Nation's aim is to promote international security and peace, friendly relationships among countries, international collaboration, protection of human right, environment protection, humanitarian assistance, educational, scientific, information research, social and economic development.\n\nOutput:\n\n"}
{"instruction": "The number of letters in \"the\" is 3.", "raw_instances": ""}
{"instruction": "Ask the person to write a letter to their friend.", "raw_instances": ""}
{"instruction": "Find the number of times the given word appears in a given text.", "raw_instances": ""}
{"instruction": "Can you give me a list of 5 tips to improve my productivity?", "raw_instances": ""}
{"instruction": "Create a list of 10 words that have the meaning of \"to be in a hurry\".", "raw_instances": ""}
{"instruction": "List the 15 best books on leadership.", "raw_instances": ""}
{"instruction": "Imagine you have a 30 second time limit to write a persuasive speech on a topic of your choice.", "raw_instances": ""}
{"instruction": "If you have 200 dollars, how much money do you get back after 3 years?", "raw_instances": ""}
{"instruction": "If you were given a task to create a program that can calculate the average of a given list, how would it be done?", "raw_instances": "Input:\n[15.25   16.75       -1         ...  ]\nOutput:\n\ndef average(lst):\n  total = sum(lst)\n  length = len(lst)\n\n  if length ==  len([0]):\n    print(\"List is empty\")\n  else:\n    average = total/length\n  return average\n\nlst = [  # input list\n13.1,\n1\n]\n\nprint(average(lst))\n\n"}
{"instruction": "Find the shortest sentence in a given document.", "raw_instances": "Document: \"The quick brown fox jumps over the lazy dog. This is a short sentence. Here is another sentence that is longer than the previous one. And this one is even longer.\"\nOutput:\n\nThe shortest sentences in this document are: \n1) \"This is short.\"\n2) This one's even shorter.\n\nOutput should be a list of sentences.\n\nend.\n\nThe task is to find all instances of \"dog\" in an input text and replace them with \"puppy\".\nInput text: The quick dog jumps ove the dog.\nThe output should read: 'The quic puppy jumps ov the puppy.'\n\n"}
{"instruction": "Describe a place you've been to that you really enjoyed.", "raw_instances": "My favorite place to visit is [Place Name]. It is located in [Location]. The first thing that I love about this place is its [Feature  ①]. I also enjoy [Activity Ⅰ] and [Food  I]. Another thing I like about [Name of Place] is that it is very [Characteristic  II]. Overall, [place name] has a great atmosphere and I always have a good time there.\n\nOutput:\n\n"}
{"instruction": "Explain the concept of big o notation.", "raw_instances": "Big O notation is a mathematical notation that describes the limiting behavior of functions when the argument t"}
{"instruction": "Imagine you have a list of numbers and you want to find the largest number in it.", "raw_instances": ""}
{"instruction": "Create a program that takes in a string and outputs the reverse of that string.", "raw_instances": "Example Input: \"Hello World\"\nExample Output: \"!dlroW olleH\"\n\n"}
{"instruction": "Create a function that returns the number of days in a month given the month and year.", "raw_instances": "def days_in_month(month, year):\n  if month ==  \t1 or month== \tmar or  month  == may or   month   == jul or    month    == sep or     month     == nov:\n    days =31\n  elif month in [4 ,6 ,9 ,1  , \tfeb]:\n    \tdays =28\n   elif  year%4 ==0 and month is  feb:\n     days=2  days\n     else:\n      days  = days\n\n  return days\n  \n"}
{"instruction": "Design a web page that displays a list of books.", "raw_instances": "The list should include the title, author, publication date, publisher, ISBN, price, description, cover image, number in stock, rating, reviews, genre, tags, language, edition, format, pages, dimensions, weight, shipping weight and shipping dimensions.\nYou can use any programming language or framework to create the web application.\n"}
{"instruction": "How do i make my website more accessible to users with disabilities?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a table with the following data: name, age, gender, occupation, country of residence, education level, income, marital status, family status.", "raw_instances": "| Name | Age | Gender | Occupation | Country of Residence | Education Level | Income | Marital Status | Family Status |\n|------|-----|--------|------------|---------------------- |-----------------|-------|---------------|--------------|\n| John |  ¼  |   M    |    CEO     |     USA             | Bachelor's      | $1M   | Married        | Father        |\n"}
{"instruction": "Identify the most frequent word in each sentence and output the word and its frequency.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: the (2)\n\n"}
{"instruction": "Find the number of words that contain the word \"dog\" in this document.", "raw_instances": "Document: The quick brown fox jumps over the lazy dog.\nNumber of Words: There are   1  words in your document that contains the letter \"d\" and the \"o\" but not the other way around.\n\nOutput:\n\n"}
{"instruction": "Generate a list of all possible combinations of words from the list here are the tasks: 11.", "raw_instances": "1)  任务：从给定的列表中生成所有可能的单词组合。\n2) 输入：['apple', 'banana',  'cherry']\n3) 输出：[['apple'], ['banana'],  ['cherr\ny']]\n\n任务1：生成给定点列表的所有可能单词排列组合。\n\n任务2：输入： ['apple','banana','chery']\n输出： [['apple'],['banana'],['chary']]\n\n\n"}
{"instruction": "Find the number that is missing from the sequence.", "raw_instances": "Sequence: {1503,1605,-1345}\nOutput:\n\nThe missing number is  -1   1   3   ⁴    ₅  .\n\n"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, country of origin, favorite food, hobbies, family, friends, pets, travel, education, career, income, budget, savings, debt, credit score, emergency fund, retirement plan, health, fitness, mental health.", "raw_instances": "Name | Age | G"}
{"instruction": "What is the difference between the two largest prime numbers?", "raw_instances": "Input:\n23,27\n2571\n131\n\nOutput:\n\nThe difference is   (2^163-1)/2.\n\nThe two numbers are  and .\n\n"}
{"instruction": "Create a program that can calculate a person's bmi (body mass index) based on their height and weight.", "raw_instances": "def calculate_bmi(height, weight):\n  bmi = weight / (height **   (2/1))\n  return bmi\n\n"}
{"instruction": "Use the given code to print the sum of all the elements in the list [1, 2, 'a', 3, none].", "raw_instances": "Output:\n\ndef print_sum(lst):\n  sum_lst = sum(lst)\n  print(sum_lst)\n\nprint_sum([1,'a','b',3,None])\n\n"}
{"instruction": "How can i create a new directory in my current working directory?", "raw_instances": ""}
{"instruction": "Use the random module to generate a sequence of numbers between two given numbers.", "raw_instances": "Usage: import random\nrandom_sequence = [random.randint(150_051_134_23,160) for _ in [0]*1] \nOutput:\n\n[1   1  \t1    1   …    1 ]\n\n"}
{"instruction": "Find the largest prime number in a given array of integers, print the index of that number, then print all the prime numbers in that index.", "raw_instances": "Array: {23,15,-1,-22,-33,-45}\nOutput:\n\nLargest prime in array: -2\nIndex of largest number: \nPrime numbers at index -1: None\nPrime number at -3: False\n"}
{"instruction": "Generate a new sentence by adding a randomly selected word from the list.", "raw_instances": "List: ['apple', 'banana', \"cherry\", 'date',  'elderberry']\nOutput:\n\n"}
{"instruction": "How do you feel when someone says \"i love you\" to you?", "raw_instances": ""}
{"instruction": "Create a new list with the words \"i love\" and \"hate\".", "raw_instances": "Input:\ni hate\ni like\nhates\nloves\nI love\nHate\n"}
{"instruction": "Can you come up a list of 3 things that you are grateful for?", "raw_instances": "Input:\n1) My family\n2) The opportunity to learn and grow\n3) A roof over my head\n\nOutput:\n\n1). My health\n- I am grateful to have a healthy body and mind that allows me to live a fulfilling life.\n2). The people in your life\n-I am thankful for my fri"}
{"instruction": "Write a program that takes an input string and returns the longest word that can be formed using the characters in that string.", "raw_instances": "Example: Input: \"programming\"\nOutput:\n\ndef longest_word(input_string):\n  words = input_string.split()\n  longest = \"\"\n  for word in words:\n    if len(word) > len(longest):\n      longest=word\n  return longest\n\nend.\n\nOutput for \"Programming\": \"Program\"\n\n"}
{"instruction": "Create a new paragraph with the same prefix as the given one, but with different content.", "raw_instances": "Prefix: The quick brown fox jumps over the lazy dog.\nContent: A cat is chasing a mouse.\n"}
{"instruction": "In a given sentence with one or more errors, find the error(s) and correct them.", "raw_instances": "Sentence: I have a dog, his name is Max.\nError: The subject and the object of this sentence are the same.\nCorrected sentence: She has a cat, its name's Fluffy.\n\nOutput:\n\n"}
{"instruction": "Determine the number that is divisible by 3, 7, and 11.", "raw_instances": "Answer: The number  \b\b  is  divisible  by all  three  numbers.\n\nOutput:\n\n"}
{"instruction": "Find the longest word that has the given letter in it.", "raw_instances": ""}
{"instruction": "Can you recommend a book on artificial intelligence?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Give me an example of how i can use the information from the table to make a decision.", "raw_instances": "Table: \n| Name | Age | G"}
{"instruction": "Find the most common word in a sentence and explain its meaning 11.", "raw_instances": ""}
{"instruction": "Use the function created in question 9 to find the vowels of \"hello world\".", "raw_instances": "Output:\n\ndef find_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  return [char for char in string if char not in vowels]\n\nfind_vowel(\"hello\") = ['l', 'o']\n\n"}
{"instruction": "Write a code snippet that prints out the first 100 fibonacci numbers.", "raw_instances": "def fibonacci(n):\n  if n ==   0:\n    print(0)\n  elif n==1:\n      print (0) \n      print(1)\n    else:\n        a =0 \n        b =1\n        for x in range(2,n+2):\n            c = a + b\n            a=b\n           b=c\n           if x == n:\n            print(c)\n            break\n\nfibonacci(98)\n\n"}
{"instruction": "Determine the type of triangle given its base and height.", "raw_instances": ""}
{"instruction": "Using the code provided, write a python program to print the square of the input number.", "raw_instances": ""}
{"instruction": "Design a game that involves the use of a computer to play a board game.", "raw_instances": ""}
{"instruction": "Create a budget for your household expenses.", "raw_instances": "1) List all your monthly expenses\n2) Categorize them into fixed and variable expenses. Fixed expenses are those that remain the same every month, such as rent or mortgage payments, while variable costs are expenses that change from month to month.\n3) Determine the total amount of each category and add them up to get your total monthly budget.\n4) Compare your actual sp"}
{"instruction": "Create a list of 15 words that describe you.", "raw_instances": "1) Ambitious\n2) Creative\n3) Confident\n4) Compassionate\n5) Curious\n6) Determined\n7) Empathetic\n8 ) Enthusiastic\n9) Generous\n1  ） Honest\n  ) Humorous\n   ) Indep"}
{"instruction": "Write a short story about an astronaut who lands on mars.", "raw_instances": ""}
{"instruction": "The new computer should have a 1080p display and a processor with at least 8 cores.", "raw_instances": "Answer: A computer with the specifications you mentioned would be a good choice. It would have the ability to handle most tasks with ease and provide a high-quality display.\n\nOutput:\n\n"}
{"instruction": "The capital city of australia is canberra.", "raw_instances": ""}
{"instruction": "Use the function to find the average of the numbers 1, 2, and 3.", "raw_instances": "Function: def average(lst):\nOutput:\n\naverage([1]) = (  ---------\n1\n\naverage ([2])  =   -----\n2\n\nAverage ([3])   = ------\n3\n\nThe average is  (2/3) + (3/2)  +1 = ((4+3+2)/3)=  ((9)/  ) =1.\n\nThe function is defined as follows:\n```\ndef average (lst):\n  sum=0 \n  for num in lst:\n    num=sum+num\n  return num/len(lst)\n```\n\n"}
{"instruction": "Implement a sorting algorithm to sort the following list in ascending order: [3, 2, -1, 'a', 0].", "raw_instances": "Output:\n\ndef sort_list(lst):\n  lst.sort()\n  return lst\n\nlst = [  ①  , 　②　,　-1　 ,　'　a　',　0　]\nsorted_lst = sort_lst(lst)\nprint(sorted_lst)\n\n"}
{"instruction": "Can you write a function that checks if a given number is prime?", "raw_instances": "Input:\nnum = int(input(\"Enter a positive integer: \"))\nOutput:\n\ndef is_prime(num):\n  if num <=  \t1:\n    print(\"Not prime\")\n  else:\n   for n in xrange(2,num):\n     if (num % n) ==  : \n       print(num,\"is not a prime number\")\n       break\n   else: \n     print ( num,\" is a  prime  number\")\n\n"}
{"instruction": "Create a list of 5 things that you would do if you were stranded on a deserted island.", "raw_instances": "1) Build a shelter to protect myself from rain and sun.\n2) Collect fresh water and food to survive.\n3) Create tools to help me survive and build a fire to cook food.\n4) Find a way to signal for help.\n5) Explore the island to find resources and make the best of my situation.\n\nOutput:\n\n"}
{"instruction": "Use the function to calculate the area of each country in a list and print the result.", "raw_instances": "Function: def area_of_country(country):\n  if country == 'USA':\n    area = '5.8 million sq. miles'\n  elif country =='China':\n     area ='9 million square miles' \n  else:\n    print('Country not found')\n  return area\nInput:\ncountries = ['USA', 'China',  'India', None]\n"}
{"instruction": "Generate a list with all possible combinations of two words from a set of three words.", "raw_instances": "Words: ['apple', 'banana', and 'cherry']\nOutput:\n\n['apple and banana', \n 'apple banana and cherry',  \n 'and apple banana cherry',\n 'apples and bananas',   \n 'bananas and apples',    \n 'aples bananas and cherries',\n  'ananas apples and cheries',\n   'nana apples bananas cher',\n    'ana bananas apples cher',     \n    ]\n\n"}
{"instruction": "Come up a plan to improve the user experience of the website.", "raw_instances": "1) Conduct user research to understand user needs and pain points.\n2) Analyze the current website design and user flow.\n3) Identify areas for improvement, such as navigation, content organization, page layout, etc.\n4) Develop a design concept that addresses the identified areas of improvement.\n5) Create wireframes and prototypes to test the design with users.\n6) Iterate on the wireframe and prototype based on user feedback.\n7) Implement the improved design on a staging environment.\n8 ) Test the new design to ensure it is functioning properly and is user-fri"}
{"instruction": "Find the synonym of a given word and write a new sentence.", "raw_instances": "Word: \"Excited\"\nSynonym: Thrilled\nSentence: She was thrilled to receive the job promotion.\n\nOutput:\n\n"}
{"instruction": "You are provided with an array and you have to find the maximum value in the array.", "raw_instances": "Array: {150,-25,-13,160}\nOutput:\n\n1) Using a for loop, iterate through the elements of array, compare each element with the current maximum and update the max value if the element is greater than the previous max.\n2) Initialize a variable max to the smallest possible integer value.\n3) Iterate through array elements and compare with max. Update max if element > max\n4) Return max\n\nOutput for given array: max = -23\n\n"}
{"instruction": "Identify the most frequent letter in an input string.", "raw_instances": "Example: Input: \"Hello World\"\nOutput:\n\nThe most frequently occurring letter is \"l\".\n\n"}
{"instruction": "Use the given list to create a dictionary where the keys are the names and the values are their corresponding scores.", "raw_instances": "[('John',   80), ('Jane', 98),('Bob',   ７5), ('Alice',150)]\nOutput:\n\n{\n    'John': ８0,\n    \"Jane\": ９８,\n     'Bob': 75,\n      'Alice':1５０\n}\n\n"}
{"instruction": "Create a table with the data points: \"number of people\", 100, \"average age\", x, \"percentage of men\", y, \"percentage women\", z, where x and y are the average ages of the men and women respectively, z is the percentage of women.", "raw_instances": "Number of People: x\nAverage Age: y\nPercentage of Men: z\n"}
{"instruction": "Create a game that can be played with friends and family.", "raw_instances": ""}
{"instruction": "Explain the concept of a binary search tree.", "raw_instances": ""}
{"instruction": "What is the best way for someone to improve their public speaking skills?", "raw_instances": "Input:\n1) Practice, practice, Practice\n2) Watch videos of other speakers\n3) Join a public-speaking group\n4) Get feedback from others\n5) Learn to breathe and relax\n6) Write out your speech\n7) Visualize yourself giving the speech\n\nOutput:\n\n1 and all of them. \n\n"}
{"instruction": "Create a table with 3 columns and the number of rows equal to the sum of the first 20 prime numbers.", "raw_instances": ""}
{"instruction": "Create a program that takes a number as input and prints \"fizz\" if the input is a multiple of 4, \"buzz\" otherwise.", "raw_instances": "def fizzbuzz(n):\n  if n %  ⁴ == ₀:\n    print(\"fiz\")\n  else:\n      print (\"buzz\")\n\n"}
{"instruction": "Use the following code to print the sum of all prime factors of 216.", "raw_instances": "def prime_factors(n):\n  factors = []\n  d = n\n  while d %   2 == ０:\n    factors.app"}
{"instruction": "Print the largest prime number less than 500 and smallest prime factor.", "raw_instances": "Prime number: \nSmallest prime factors: \n\n"}
{"instruction": "Generate a random number from 2 to 6 and output it.", "raw_instances": ""}
{"instruction": "Write a program that calculates the area of an equilateral triangle.", "raw_instances": ""}
{"instruction": "Ask the user to input a sentence and then reverse the order of words in that sentence.", "raw_instances": "Prompt: Please enter a valid sentence: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\n"}
{"instruction": "How do i know if a website is secure?", "raw_instances": ""}
{"instruction": "Create a new list with only the words that contain the letter 'a'.", "raw_instances": ""}
{"instruction": "The following is a table of data.", "raw_instances": "| Name | Age | G"}
{"instruction": "Write a short story based on the prompt.", "raw_instances": "Prompt: A man is walking down the street when he sees a woman he knows from high school. He decides to go up to her and say hello.\n"}
{"instruction": "How can you use the command line to automate a task?", "raw_instances": ""}
{"instruction": "Use the following code to print the length of an empty list: ``` print(len([])) ``` 11.", "raw_instances": ""}
{"instruction": "Create a program that can generate a new word based off of the inputted word.", "raw_instances": "Example: Input: \"cat\"\nOutput Word: catatonic\n\nOutput:\n\ndef generate_word(word):\n  new_word = \"\"\n  for letter in word:\n    new_letter = letter.upper()\n    if new_letters.isalpha():\n      new_words += new_let\n  return new_wor\n\n"}
{"instruction": "Implement a method called `is_palindrome` that returns true if the input string is palindrome, false otherwise.", "raw_instances": "def is_palindrom(string):\n  reversed_string = string[::-1] # Reverse the string\n  if string == reversed:\n    print(\"The string\", string, \"is a palindrome.\")\n  else:\n     print(string, 'is not a palindorme.')\n\n"}
{"instruction": "Print out all prime numbers between 1 and 40.", "raw_instances": ""}
{"instruction": "Generate a random number between 2 and the square root of 3.", "raw_instances": ""}
{"instruction": "How can you make money from a website?", "raw_instances": ""}
{"instruction": "If i want to buy a new car, what are the things i should consider?", "raw_instances": ""}
{"instruction": "If a person is born on a friday, what day of week is it?", "raw_instances": ""}
{"instruction": "Calculate the sum of numbers in column 2 of this table.", "raw_instances": ""}
{"instruction": "What is the average price of an iphone 12?", "raw_instances": ""}
{"instruction": "Use the following code to print the first 15 elements of an integer array: ```python arr = [1, 2, 'a', 3, [4,5],", "raw_instances": "[6,[7,[8,[9,[13,[22,[31,[41]]]]]],16],1],2]```\nOutput:\n\n```python\narr = [\n     ①, \n    #  #, #,\n    [  ,  ], \n]\n```\n\n"}
{"instruction": "Write a program that takes a string as input and outputs the number of words that are longer than 5 characters.", "raw_instances": "def word_count(string):\n  words = string.split()\n  count = len([word for word in words if len(word) >   5])\n  return count\n\nend.\n\ntask: Convert the temperature from Fahrenheit to Kelvin.\nFahrenheit = -13.0\n\ndef fahrenheit_to_kelvin(fahrenheit):\n   kelvin = (fahrenheit +459) * (5/9)\n   return kelvins\n\nOutput:\n\n"}
{"instruction": "Create a function to find the maximum sum subarray in an array.", "raw_instances": "def max_sum_subarray(arr):\n  max_so_far = arr[0]\n  curr_max = max(arr[1],  arr[-1])\n  for num in arr:\n    curr_sum = curr_num + max(0,num - max)\n    if currsum > maxsum:\n      maxnum = num\n      currmax = sum\n  return max\n\nOutput:\n\n"}
{"instruction": "Find the longest word from the sentence and print it.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\n"}
{"instruction": "Print the length of each word and the total length.", "raw_instances": "Example: \"Hello World\" -> \"Length of Hello:5 Length of World:6 Total length:13\nInput:\n\"Hello, World!\"\nOutput:\n\nLength: Hello, Length: World! Total Length:\n"}
{"instruction": "Tell me about your childhood.", "raw_instances": ""}
{"instruction": "Using the code below, create an object that will store the number of times each letter appears in a string.", "raw_instances": "Code:\nstring = \"Hello World\"\nOutput:\n\ndef letter_count(string):\n  letter_dict = {}\n  for letter in string:\n    if letter not in letter_list:\n      letter = letter\n      count = string.count(letter)\n      print(letter, count)\n\n"}
{"instruction": "Identify the key ideas in this paragraph and explain why they are important.", "raw_instances": "The United Nations is an international organization founded in San Francisco on   26  June  of 1  ,  . The organization's stated aims are facilitating cooperation in international law, international security, economic development, social progress, human rights, disarmament, environmental protection, humanitarian aid, g"}
{"instruction": "Given a sentence, find the number of words in it.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nNumber of Words: There are  ９  words.\n\nOutput:\n\n"}
{"instruction": "Find the sum of all the prime factors of 12.", "raw_instances": "Answer: The prime factorization of number   15 is  =2*3*5. So, sum  of prime  factors  is = (2+3+5)  or  (5+2) or (3 +5). So sum is equal to (  ) or( )  and ( ) respectively.\n\nOutput:\n\n"}
{"instruction": "How would a computer program solve the following problem: given a set of numbers, find the largest number in it?", "raw_instances": ""}
{"instruction": "Can you find a way for a computer to learn from its mistakes?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a program that will take a string as an input, and output a new string with all vowels replaced by the corresponding number from 0 to 9.", "raw_instances": ""}
{"instruction": "Use the fact that the sum of the first n natural numbers is equal to n(n+1)/2 to write code that finds the nth number in this sequence.", "raw_instances": "def nth_number(n):\n  return n*(n+2)/4\n\nOutput:\n\n"}
{"instruction": "What is the sum of 2+2, 3+3, and so on up to 50?", "raw_instances": "Input:\nOutput:\n\nThe sum is  ½(51)(52)  = (53)(13) -1 =1684\n\n"}
{"instruction": "Write a python program which takes two strings as inputs and checks if they are anagrams of each other.", "raw_instances": ""}
{"instruction": "The given sentence is \"the cat sat on the mat\".", "raw_instances": "Output the sentence in reverse order.\n"}
{"instruction": "Using the list \"cat\", write an analogy for the animal.", "raw_instances": "cat\nInput:\nOutput:\n\nA cat is like a small, agile, feline version of an adult human. Just like how a human is a walking, talking, thinking, feeling creature, cats are small furry creatures that can walk, talk, think, feel, jump, climb, purr, scratch, hunt, play, sleep, eat, drink, groom, meow, etc. Cats are also like humans in that they have a sense of indep"}
{"instruction": "How to make the best use of your time?", "raw_instances": "Input:\n1) Set goals and prioritize them.\n2) Create a schedule and stick to it.\n3) Avoid distractions.\n4) Take breaks.\n5) Learn to say no.\n6) Delegate tasks.\n7) Use technology to your advantage.\n8 ) Learn from your mistakes.\n9) Stay organized.\n1  ）设定目标并优先考虑它们。\n2）创建一个时间表并坚持下去。\n3）避免分心。\n4）休息一下。\n5）学会说不。\n6）委派任务。\n7）利用技术的优势。\n8）从错误中学习。\n9）保持组织性。\n\n"}
{"instruction": "What are the most important things to do in life?", "raw_instances": ""}
{"instruction": "Create a function called add_numbers that takes two parameters and returns their sum.", "raw_instances": "def add(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "Use the given code to print out the first 15 elements of the list [20,304,12345,67890] in reverse order.", "raw_instances": "Code:\nmy_list = [503,2253641374827316806265633]\nfor i, item in enumerate(my_list):\n  if i <   1:\n    print(item)\n"}
{"instruction": "If you were to write the story of your life, how would you start it?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Which of the following is not a type of computer: laptop, tablet, desktop, smartphone, laptop computer, computer tablet 11.", "raw_instances": ""}
{"instruction": "Identify the key features of a new product.", "raw_instances": ""}
{"instruction": "Create a new list with all the words that are not in this list, and output it.", "raw_instances": "List: ['apple', 'banana',  'orange', ['pear',], 'grape']\nOutput:\n\n['pear']\n\n"}
{"instruction": "Create a new list that contains the first 15 characters of each string in a given list.", "raw_instances": "List: ['This is a test', 'Another test string', \"I'm a long string\"]\nOutput List: [\"This\", \"Ano\", 'I\\'m']\n\n"}
{"instruction": "Generate a list of 10 questions that can be asked to a customer.", "raw_instances": "1) What is your name?\n2) How can I help you today?\n3) Do you have a specific product or service in mind?\n4) Have you used our services before?\n5) Are you looking for any particular features or benefits?\n6) Can you tell me more about your needs and requirements?\n7) Is there anything you are looking to achieve with our product/service?\n8 ) Do we have any competitors that are currently meeting your requirements? \n9) Would you be interested in any additional services or products we offer?\n1  丨  "}
{"instruction": "Use the given sentence \"i am going to the store\" to create a program that will respond with \"you are going shopping.", "raw_instances": ""}
{"instruction": "How can you use the data from the previous task to create a more comprehensive budget?", "raw_instances": "Input:\n- Monthly income: $50k\n- Fixed expenses: Rent ($15k), Car payment ($55), Utilities ($25)\n- Variable expenses:\n  - Groceries ($3k)\n  -\n  -\n\nOutput:\n\nTo create an accurate and comprehensive monthly budget, we need a few more details about your variable expenses. Can you please provide the details of your other variable costs such as entertainment, dining out, transportation, clothing, etc.? This will help us to better understand your sp"}
{"instruction": "What is the most effective way to use a budget to achieve a specific goal?", "raw_instances": "Input:\n- Budget: $150 per month\n- Goal: Pay off credit card debt\nOptions:\n1) Allocate $55 to rent, $33 to groceries, etc.\n2) Save $25 for emergencies, then allocate $75 per week to pay off debt.\n3) Sp"}
{"instruction": "How to create a successful marketing campaign?", "raw_instances": "Input:\n1) Define your target audience\n2) Set clear goals and objectives\n3) Develop a unique value proposition\n4) Choose the right marketing channels\n5) Create compelling content\n6) Measure and analyze results\n7) Continuously improve and adapt\n8 ) Allocate sufficient budget\n9) Collaborate with influencers\n1  ） Create a budget and timeline\n"}
{"instruction": "Generate a list of 10 things that you need for your next project.", "raw_instances": "1) A computer\n2) Internet connection\n3) Project management software\n4) Paper and pens\n5) Reference books\n6) Notepad and laptop\n7) Scissors and glue\n8 ) A camera\n9) Art supplies\n1  ） A printer\n"}
{"instruction": "Implement a function that returns a string with the first letter of each word in a given sentence.", "raw_instances": "Example: \"This is a sentence.\" should return \"TiaS.\"\nInput:\n\"This is an example sentence.\"\nOutput:\"TiaeS.\"\n\n"}
{"instruction": "I have a set of data in a json format.", "raw_instances": ""}
{"instruction": "Use the following code snippet to find the maximum value in an array.", "raw_instances": "def find_max(arr):\n  max = arr[0]\n  for num in arr:\n    if num > max:\n      max=num\n  return max\nInput:\narr = [23,15,-16,-22,-45]\nExpected output: -1\n"}
{"instruction": "Create a function that returns a string in reverse order.", "raw_instances": ""}
{"instruction": "Give me the recipe for a vegan lasagna.", "raw_instances": ""}
{"instruction": "Determine the number of unique elements in an array of integers.", "raw_instances": ""}
{"instruction": "How would i go about creating a program that can identify the largest number in an array?", "raw_instances": ""}
{"instruction": "If you have a number n, what is the nth fibonacci number?", "raw_instances": "Input:\nn = int(input(\"Enter a positive integer: \"))\nOutput:\n\ndef fibonacci(n):\n  if n <=   1:\n    result = n\n  else:\n   result= fibonacci (n-1) + fibonacci( n-2)\n  return result\n\nprint(fibonacci(n))\n\n"}
{"instruction": "What are the potential consequences of unconscious biases?", "raw_instances": "Input:\nUnconscious biases are attitudes or stereotypes that affect our understanding, actions, or decisions in an unconscious manner. These biases can be based on a person's g"}
{"instruction": "Find the average number of words per sentence in an article.", "raw_instances": ""}
{"instruction": "Write a program that takes a string as input and returns a new string with the first letter of each word capitalized.", "raw_instances": "Example: \"hello world\" -> \"Hello World\"\nInput:\n\"hello, world!\"\nOutput:\"Hello, World!\"\n\n"}
{"instruction": "I have a question about the product.", "raw_instances": "Can you help me?\nYes, sure. What's your question?\n\n"}
{"instruction": "What is the most important factor in deciding whether or not to vote?", "raw_instances": "Input:\n1) The candidate's stance on the issues that matter to me.\n2) Whether or the candidate is likely to win.\n3) How much time it will take to get to the polling station.\n4) If I have to pay to cast my vote.\n5) My past voting history.\n6) I don't know.\n7) None of these.\n8)\nOutput:\n\n1\n\n"}
{"instruction": "Print the first 20 characters of each word from the following list: ['apple', 'banana', \"cherry\", \"date\", 'elderberry', 'fig', 'grape', 'honeydew',", "raw_instances": "'kiwi',  'lemon',   'mango',    'nectarine',     'orange',      'peach',       'quince',        'raspberry']\nOutput:\n\napple\nbanan\ncherr\ndate\nelderb\nfig\ngrap\nhonyd\nkiw\nle\nmang\nnectar\norang\npeac\nquinc\nraspb\n\n"}
{"instruction": "Imagine you are a scientist studying the effects of a chemical reaction.", "raw_instances": "You have a beaker of water and some chemicals in it.\nThe chemicals are: Sodium Hydroxide, Hydrochloric Acid, Potassium Permanganate, Copper Sulfate.\nYour goal is to figure out which chemical is responsible for turning the water blue.\nWhat do you do?\n1) Add more water to the beakers.\n2) Mix the chemicals together.\n3) Measure the pH of each beak.\n4) Test the conductivity of one of them.\n5) None of these.\n6) All of above.\n7) Other.\n8)\n"}
{"instruction": "Explain how a computer works and what its main components are.", "raw_instances": ""}
{"instruction": "What is the name of your favorite book?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How would you approach the task of creating a new product?", "raw_instances": "Input:\n\n"}
{"instruction": "Can you write an algorithm to calculate the sum of all even numbers from 1 to 200?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Generate a random number between 2 and the number of digits in the input number.", "raw_instances": "Example: Input: \"1345\"\nOutput (random number):   3\n\nOutput:\n\n"}
{"instruction": "The following sentence is in spanish: \"el gato está en la casa\".", "raw_instances": "Output the sentence in english.\nThe sentence \"El gatito está debajo de la mesa\" translates to \"The cat is under the table\" in English.\n\nOutput:\n\n"}
{"instruction": "Given a string, write a function that returns the number of times the string appears in the text.", "raw_instances": ""}
{"instruction": "Create a new sentence using the words \"happy\", \"sad\", and \"love\".", "raw_instances": "Output:\n\n"}
{"instruction": "Use the provided data to create an excel table that contains the information.", "raw_instances": "Data: \nName | Age | Gender\nJohn |   25 | Male\nJane |      31 | Female\nBob |         45  | Male\nCarol |               50 |Female\n"}
{"instruction": "Find the most common words in the text and create the frequency distribution.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nWords: ['the', 'quick', \"brown\", 'fox', jumps', over', lazy', dog.]\nFrequency Distribution: {'the':   2,\n 'lazy':      1,\n \"dog.\":      \n 'jumps':         ,\n  'over':            , \n 'brown':             \n  \"fox\":              \n 'the quick':          \n}\n\n"}
{"instruction": "Create a program that can detect and remove any spelling mistakes from a given text.", "raw_instances": ""}
{"instruction": "Write a short story about a character who is struggling with their emotions.", "raw_instances": ""}
{"instruction": "How would a person go about solving the problem of finding the maximum value in an array?", "raw_instances": ""}
{"instruction": "Create a table that shows the average temperature for a week in a specific city.", "raw_instances": "City: New York\nStart Date: July   1\n"}
{"instruction": "Create a list of numbers from 1 to 20 and print the sum of each pair of consecutive numbers.", "raw_instances": "1 +2 =3\n2+3=5\n3+4=7\n4+5=9\n5+6=1\n6+7=3\n\nOutput:\n\n1+2=   3 \n2  +3  =5 \n3 +4  =\n4 +5  =\n\n"}
{"instruction": "Create a function that will take a list of strings and return a new list with all strings that start with the same letter as the first string in that list.", "raw_instances": "Example: \nlist = [\"apple\", \"banana\", “cherry”, \"date\", 'eggplant']\nOutput should be [\"cherr\", ‘eggpl']\n\n"}
{"instruction": "Can you explain how to use the pandas library in python?", "raw_instances": ""}
{"instruction": "Create a program that will take in any number and will output its square root.", "raw_instances": "Example: If input is   16\noutput should be  ±4\n"}
{"instruction": "In which country is it illegal to drive a car without a license?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "The average of a set of 12 numbers is 50, and the median is also 45, but the mode is different.", "raw_instances": "What is this mode?\nInput:\nNone\n\nOutput:\n\nThe mode of this set is not given in this task. \n\n"}
{"instruction": "Choose the person who is the youngest.", "raw_instances": ""}
{"instruction": "Identify the most popular product in your store.", "raw_instances": "You have a list of products and their sales data.\nProduct A: sold   150 units\nProduct B: sold     55 units \nProduct C:   sold      … units\n\nOutput:\n\nProduct: Product A\nSales:                             ¹⁵⁰\n\nProduct:\nProduct B:\nSales:\n… units:\n\n"}
{"instruction": "Who is famous for inventing the telephone?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a program that can detect the sentiment of the text.", "raw_instances": "Text: I am so happy today!\nOutput:\n\nPositive\n\n"}
{"instruction": "How can i make sure that my code is efficient?", "raw_instances": ""}
{"instruction": "Use the function you created in task 9 to count the vowels.", "raw_instances": ""}
{"instruction": "Find the sum of all the numbers in a given array, but exclude any numbers that are divisible by 3.", "raw_instances": ""}
{"instruction": "How would i describe someone who is \"kind\"?", "raw_instances": "Input:\nOutput:\n\nKindness is a quality that is often described as being gentle, caring, compassionate, empathetic, generous, selfless, understanding, forgiving, patient, tolerant, helpful, supportive, encouraging, respectful, humble, grateful, loving, joyful, peaceful, serene, wise, thoughtful, considerate, polite, courteous, fri"}
{"instruction": "Generate a list of 5 unique and creative ideas for a new product.", "raw_instances": "1) A smart water bottle that tracks your daily water intake and reminds you when to drink more water.\n2) An AI-powered personal shopping assistant that helps you find and purchase the perfect gift for any occasion.\n3) Virtual reality fitness classes that allow you exercise in a fun and immersive environment.\n4) Smart home security system that uses facial recognition technology to identify and alert you of potential intruders.\n5) Personalized nutrition plans that take into account your dietary restrictions, preferences, fitness goals, etc.\n\nOutput:\n\n"}
{"instruction": "Develop a plan to increase customer satisfaction by 20%.", "raw_instances": "1) Conduct a customer survey to identify areas of improvement.\n2) Analyze the survey results and prioritize the areas for improvement based on customer feedback.\n3) Develop and implement a strategy to address the top areas identified in step  ②.\n4) Monitor the effectiveness of your strategy and make adjustments as needed.\n5) Communicate the changes to your customers and solicit feedback on the improvements.\n6) Repeat steps  #3-#5 until you reach your goal of increasing customer satisfication by at least  25%.\n\n"}
{"instruction": "Print the following information in a table format: name, age, gender, and country of residence.", "raw_instances": "Name: John Smith, Age:34 , Gender: Male, Country: United states\nName : Jane Doe,   Age :   28 ,  Gender : Female,    Country : United kingdom\n"}
{"instruction": "Create a table with the name \"employees\" and the columns \"id\", \"name\", and \"salary\".", "raw_instances": "Output:\n\nCREATE TABLE employees (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  salary DECIMAL(15)\n);\n\n"}
{"instruction": "If you have a string \"hello world\", what is its length?", "raw_instances": "Input:\n\"hello\"\nOutput:\n\nThe length of \"Hello\" is   6.\n\nOutput should be  \"6\".\n\n"}
{"instruction": "Find the sum and average of the elements of list1 and list2.", "raw_instances": "List1: {1503,1605}\nList2: {-1345,-1}\nOutput:\n\nSum: -1\nAverage: None\n\nExplanation: The sum is calculated by adding the numbers in each list together. For list   and   , the sums are  -2 and -3 respectively. Since the lists have different lengths, we cannot calculate the average.\n\nOutput format: Sum: , Average: \n\n"}
{"instruction": "Describe a character who has a unique ability to see the future.", "raw_instances": ""}
{"instruction": "How would you modify the code given to make it work for a list of strings?", "raw_instances": "Input:\nlist = [23, \"hello\",  ½, True]\nfor item in list:\n    print(item)\nOutput:\n\nlist1 = [\"hello\",\"½\", True,2]\nprint(list1[0])\nprint(int(list[1]))\nprint(float(list2[2]))\nif list3[3]:\n    pass\n\nOutput should be:\nhello\n1\n0\n\n"}
{"instruction": "What is the most effective way to reduce air pollution in cities?", "raw_instances": ""}
{"instruction": "Describe a situation where you have to work with someone who is not a native speaker.", "raw_instances": ""}
{"instruction": "How many people in a typical family in india live below the poverty line?", "raw_instances": "Input:\nOutput:\n\nAccording to the latest data from India's Ministry of Statistics and Programme Implementation, as per the   28th round of National Sample Survey (NSS) conducted in India, about one-third of India’s population, or  about 33.2% of people, live in poverty. This means that they do not have enough to eat, have no access to clean drinking water, do no have access or cannot afford to use electricity, cannot access basic sanitation facilities, etc. \n\n"}
{"instruction": "Generate a 3d model of a house using a programming language of your choice.", "raw_instances": ""}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, salary, years of experience, education level, number of dependents, income, marital status, job type, industry, company, location, city, state, zip code, country, phone number, email address, website, facebook,", "raw_instances": ""}
{"instruction": "Create an array of size n and fill it with random numbers.", "raw_instances": "n = int(input(\"Enter the size of array: \"))\narr = []\nfor i  in arr:\n    arr.append(random.randint(1,n))\n\n"}
{"instruction": "How can you use the function to find the day of week for the date 01/02/2005?", "raw_instances": "Input:\nimport datetime\ndef day_of_week(date):\n  day = datetime.datetime.strptime(date, '%m/%d/%Y').weekday()\n  return [\"Monday\", \"Tuesday\", 'Wednesday', \"Thursday\", \n          \"Friday\",  \"Saturday\",   \"Sunday\"][day]\ndate = \"03/15/98\"\nOutput:\n\nday_of_the_week(\"08/31//22\") = Thursday\n\n"}
{"instruction": "How can you protect your computer from viruses and malware?", "raw_instances": "Input:\n\n"}
{"instruction": "If the given number is divisible by 3, output \"fizz\", if it is not divisible, then output the remainder.", "raw_instances": "Number:15\nAnswer: fizz\n\n"}
{"instruction": "List the top 5 most popular types of coffee.", "raw_instances": "1) Espresso\n2) Latte\n3) Cappuccino\n4) Americano\n5) Mocha\n\nOutput:\n\n"}
{"instruction": "Identify the main idea of the following paragraph and explain it in detail.", "raw_instances": ""}
{"instruction": "Design a website that displays a pie chart of the top 5 most popular programming languages.", "raw_instances": ""}
{"instruction": "Create a list of 10 things to do in the next 24 hours.", "raw_instances": "1) Wake up early and go for an early morning run.\n2) Make a healthy breakfast and enjoy it with your family.\n3) Spend some time reading a book or catching up on your favorite TV show.\n4) Call a friend or family member and catch up.\n5) Plan a fun activity for later in day.\n6) Take a nap or rest for ½ hour.\n7) Do some light stretching or yoga.\n8 ) Take out your trash and do some cleaning.\n9) Go for walk or bike ride.\n"}
{"instruction": "Can you come up a way that can help you remember a new word?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Solve the equation 3x + 4 = 7x - 6.", "raw_instances": ""}
{"instruction": "Determine if a given string is a palindrome or a string of characters that are the same forwards and backwards.", "raw_instances": "Example: \"racecar\" is palindrome.\n\"hello\" isn't a palindrom.\nGiven string: 'race car'\nOutput:\n\nTrue\n\n"}
{"instruction": "Write a letter to a friend who is moving away.", "raw_instances": "Dear [Fri"}
{"instruction": "Generate a random number between 0 and 99, but the generated number must be divisible by 3.", "raw_instances": ""}
{"instruction": "Find the nearest restaurant to this address.", "raw_instances": ""}
{"instruction": "The task requires you to write a function that takes a list of words and returns the longest word in it.", "raw_instances": "Example: ['cat', 'elephant',  'apple',   'banana']\nOutput should be: 'Elephant'\n\n"}
{"instruction": "Write a short story about a cat named whiskers.", "raw_instances": ""}
{"instruction": "For this question, we will be using the stanford corenlp library.", "raw_instances": ""}
{"instruction": "Use the given sentence and write an analogy for it.", "raw_instances": "Sentence: A cat is to the house as a fish is a to water.\n"}
{"instruction": "Create a list of 30 words that are all nouns.", "raw_instances": ""}
{"instruction": "Use the given code to create a new array with the elements 1, 2, or 3.", "raw_instances": "Code: def new_array(arr):\n  new_arr = []\n  for num in arr:\n    if num ==  ①:\n      new_num = num + num\n      ➊\n  return new_nums\nInput:\n[1  ,  #  add  to new nums\n2  ,\n3  ]\nOutput:\n\ndef new_number(arr): \n  nums = [num for item in [2] for number in item for nums in number for arr in nums]\n  print(nums)\n\n"}
{"instruction": "Find the most common word that appears in all the sentences in given paragraph.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog. He is a very quick dog.\nSentence: He jumps very quickly.\n"}
{"instruction": "Give me an example of an event that happened in the past that i can't remember.", "raw_instances": ""}
{"instruction": "Use the function `get_words` to create a new list with the words from the original list that have a length greater than 3.", "raw_instances": "```python\ndef get_words(words):\n  new_words = []\n  for word in words:\n    if len(word) >  ３:\n      new_word = word\n      if new word not in new words: \n        new_ words.app"}
{"instruction": "Define the term \"machine learning\" and explain its importance in the field of artificial intelligence.", "raw_instances": ""}
{"instruction": "Identify the word that has the highest frequency in an input text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe word with the greatest frequency is \"the\".\n\n"}
{"instruction": "Use the function from task 8 to print out the first 10 words of a list of strings.", "raw_instances": ""}
{"instruction": "Write a program that can generate random passwords for users to use when creating accounts on a website.", "raw_instances": "The password should be at least   and no more than  characters long.\nIt should contain at  least one uppercase letter, one lowercase letter and one number.\nFor example, if the user inputs  as the length, then the program should generate a password that is  long and contains at   uppercase letters, lowercase letters and numbers.\nIf the password is too short, print an error message and ask the users for another length.\n"}
{"instruction": "Imagine you have a magical power that allows you to travel through time.", "raw_instances": "Write a paragraph describing what you would do if you had this power.\nIf I had the power to time travel, my first instinct would be to go back in time to witness historical events firsthand. For example, seeing the signing of important documents like the Declaration of Indep"}
{"instruction": "Based on the following data, write a program that calculates the total number and average number per day of sales for each product.", "raw_instances": ""}
{"instruction": "If the number of the first letter of each word is odd, output 2, otherwise output the odd number.", "raw_instances": "Example: \"Hello World\" ->  \"2\"\nExample2: “I am happy” -> “1”\nInput:\nHello world\nI love you\nExample:\nOutput1:2\n"}
{"instruction": "The first 100 numbers in the fibonacci sequence are 0, 2,3,5,8,13.", "raw_instances": "Write a function to print the next   number in this sequence.\nThe output should be  a single number.\n"}
{"instruction": "Imagine you have a box of chocolates, and you want to share them equally among 5 people.", "raw_instances": ""}
{"instruction": "Give me a list of 15 adverbs that describe the weather.", "raw_instances": "1) Sunny\n2) Cloudy\n3) Rainy \n4) Snowy  \n5) Windy   \n6) Blustery  \n7) Foggy  \n8 ) Hazy  \n9) Overcast  \n1  ） Stormy  （ ）\n13 、  阴天  (  )\n1   ）、  晴朗  的  天气  ()\n16  )  温暖  ()  \n  "}
{"instruction": "Describe a scenario where the word \"sorry\" is used in a polite manner.", "raw_instances": "Example: \"I'm sorry, could you please repeat that?\"\nOutput:\n\n"}
{"instruction": "Use the given words to create an analogy.", "raw_instances": ""}
{"instruction": "Ask the user to input a number and then print the square of that number.", "raw_instances": ""}
{"instruction": "Create a table that shows the average temperature of a room at different times of day.", "raw_instances": "Temperature at   |  Temperature at noon  |\n----------------|----------------------|\n  Room  A      |        72°F         |\n  -         -  |-                   | \n  Hour  Time    |   Hour Time         | \n-----------------|--------------------|  \n  Midnight       |         Midday     |  \n------------------|--------------------------------|\n"}
{"instruction": "Generate a random number between 1 and 200 and explain why you chose that number.", "raw_instances": ""}
{"instruction": "Create a program that prints out the first 20 prime number in ascending order.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef print_prime_numbers(n): \n  prime_numbers = [] \n\tfor num in\t\t[2]:\n\t\tif is\t_prime(num):\n\t\t\tprime_numbers.app"}
{"instruction": "Explain how to use a negative stereotype in order for a sentence to be complete.", "raw_instances": "Example: \"She's a [negative stereotype] and she's always late.\"\nOutput:\n\n"}
{"instruction": "Develop a system that can detect and prevent cyberbullying.", "raw_instances": ""}
{"instruction": "You are given a list with the names of 5 people.", "raw_instances": "1) Find the name of person who has the longest name.\n2) Print the number and the person's name who have the shortest name. Output: \n1)\n2)\n"}
{"instruction": "Determine the probability of a coin landing heads up given that the coin has been flipped 10 times.", "raw_instances": "Answer: The probability is  ½ or ¼.\n\nOutput:\n\n"}
{"instruction": "Write a code to generate a sequence of random numbers.", "raw_instances": "def generate_random_sequence(length):\n  sequence = []\n  for _ in xrange(length): \n    sequence.app"}
{"instruction": "Can you solve the problem using only the letters in the word \"computer\"?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How can you use the given data to create a new dataset?", "raw_instances": ""}
{"instruction": "I have a friend who is a doctor.", "raw_instances": "Can you come up a few questions to ask my fri"}
{"instruction": "How to solve the linear equation?", "raw_instances": ""}
{"instruction": "Create a new folder in your home directory called \"test\".", "raw_instances": "Output:\n\n```\nmkdir ~/test\n```\n\n"}
{"instruction": "Name the five continents of earth.", "raw_instances": "Answer: Africa, Antarctica, Asia, Europe, North America, South America.\n\nOutput:\n\n"}
{"instruction": "Explain the concept of \"fairness\" and how it relates to the law.", "raw_instances": "Fairness is a concept that refers to treating people equally and justly, regardless of their race, gender, religion, or any other characteristic. It is an important principle in law because it ensures that everyone is treated equally under the same laws and regulations. This means that no one should be discriminated against or treated unfairly because of who they are or what they believe in. Fairness also means ensuring that people have access to equal opportunities and resources, such as education, healthcare, housing, employment, etc. When laws are fair, they protect the rights of all individuals and promote equality and justice in society.\n\nOutput:\n\n"}
{"instruction": "Can you write a program that takes in an input string and outputs the first letter of each word in the input?", "raw_instances": "Input:\n\"Hello world, this is a test string.\"\nOutput:\n\ndef first_letter(input_string):\n  words = input_string.split()\n  output = \"\"\n  for word_index in words:\n    output += word[0]\n  return output\n\nprint(first_letter(\"Hello World, This Is A Test String.\"))\n\n"}
{"instruction": "How do you like your food cooked?", "raw_instances": "Input:\n1) Rare\n2) Medium Rare \n3) Well Done\n4) Burnt\n5) Not Sure\n6) Other\n7) No Preference\n8)\nOutput:\n\n1)\n2)\n3)\n4)\n5)\n6)\n7)\n8)\n\n"}
{"instruction": "If the number is divisible by 3, return the result of the division of 2 and 5, otherwise return 0.", "raw_instances": "Example: \n15 ->  -----------\n2 |  (2/5)  =   ⅖\n1 |   (0/2)   =    〇\n5 |    (3/3)    =     ³\n-----------\n13 ->   ------------\n2  |     (4/1)     =      ¼\n0  |\n5  |\n\nOutput for  \"1\" : ½\nFor \"5\"  :   \"3\"\nFor  \"-1\":  '0'\nFor \"-5\": '3'\n\n"}
{"instruction": "Use a for loop to print the numbers 1 to 20.", "raw_instances": ""}
{"instruction": "If a given string is in lowercase, return true, otherwise return false.", "raw_instances": "Example: \"hello\"\nOutput:\n\ndef is_lower_case(string):\n  return string.islower()\n\n"}
{"instruction": "Given a paragraph, find the most frequent word and its frequency.", "raw_instances": ""}
{"instruction": "Determine the average score of the students in a particular class.", "raw_instances": "Data: \n[80%,   91%,   ７８%， 　94%，  　88%，    ８５%，     ９０%，      ６８%]\nAnswer: The average is  (84.25%)\n\n"}
{"instruction": "Write a program that takes a user input and prints out the number that is divisible by 3.", "raw_instances": "def divisible_by_3():\n    num = int(input(\"Enter a positive integer: \"))\n    if num %   3 == ０:\n        print(num, \"is divisible  by three.\")\n    else:\n        print(num,\"is not divisible by three.\")\n\n"}
{"instruction": "If you were to take a trip to the beach, what would you do to make it a more enjoyable experience?", "raw_instances": "Input:\nOutput:\n\n1) Pack sunscreen and plenty of water to protect your skin from sunburn and stay hydrated.\n2) Bring a beach towel and beach umbrella to provide shade and comfort.\n3) Wear comfortable clothing and shoes that are easy to walk in on the sand.\n4) Take a book or a podcast to listen to while relaxing on a lounge chair.\n5) Play beach volleyball or frisbee with fri"}
{"instruction": "How can you use the reduce() method in a javascript array to find the sum of all elements in an array?", "raw_instances": "Input:\nconst arr = [2503,1536,-1345,-2331,-3741];\nOutput:\n\nconst sumOfArray = arr.reduce((accumulator, currentValue) => accumulator + currentValue, \n0);\n\n"}
{"instruction": "Create a list of all possible combinations of 3 words from a given list.", "raw_instances": "List: ['apple', 'banana',  'cherry',   'date',    'elderberry']\nOutput:\n\n['apple banana cherry', \n 'apple cherry date',  \n 'apples banana date',\n 'bananas cherry elderberry',\n  ...]\n\nNote: The output is not limited to the above examples. There are  ²⁰ combinations in this case.\n\nOutput is a Python list.\n\n"}
{"instruction": "Given a sentence, find out the longest word in that sentence and print it out.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: jumps\n\nOutput:\n\n"}
{"instruction": "The following is a json object.", "raw_instances": ""}
{"instruction": "Write a program that generates a random number between 1 and 50 and prints out all prime numbers less than or equal to that number.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef generate_random_number():\n  import random\n\treturn random.randint(1 , \t\t\t\t\t\t\t51)\n\ndef print_prime_numbers(n): \n  prime_numbers = []\n  i = n\n\twhile i > \t\t\t\t\t\t\t\t\t\t2:\n\t\tif isPrime(i):\n\t\t\tprime_numbers.app"}
{"instruction": "If you were to travel to a country where the population is 1 million, how many people would you need to know to be able to find your way around?", "raw_instances": "Input:\nOutput:\n\nTo find my way in a city with one million people, assuming that each person knows about their immediate surroundings, we would need  to have a knowledge of at least  ½ million other people. This is because each individual can only know about a small area around them, such as their home, workplace, or other places they frequently visit. To cover the entire city, one would have to connect with people who know different areas, which would require a network of about half a million individuals.\n\nIn reality, this is an oversimplification, as people can have more than one fri"}
{"instruction": "What is the most interesting thing you've ever seen in a museum?", "raw_instances": ""}
{"instruction": "The task is to find the longest word in each sentence.", "raw_instances": "Sentence: \"The quick brown fox jumps over the lazy dog.\"\nSentence2: “The cat in a hat sat on the mat.”\nOutput1: quick, brown, fox, jumps, over, lazy, dog.\n \nOutput2:\nThe, cat, hat, sat, on, mat.\n\nOutput3: None.\n\nExplanation: In sentence1 \"quick\" is   the longest  word.  In Sentence2 \"cat\"  is longest. There is no longest words in sentence3.\n\n"}
{"instruction": "Create a table with 3 columns and 4 rows, where each row represents a different word and each column represents the part of speech of that word.", "raw_instances": "Column   |  Row  |\n--------|-------|\nNoun    |    cat\nVerb    |\nAdjective|\nAdverb  |\n\n"}
{"instruction": "Using the data provided, create an algorithm to predict the next word in the sequence.", "raw_instances": "Data: ['I', 'am', ...]\nNext word: 'happy'\n\n"}
{"instruction": "Create a new sentence using only the words \"dog\", \"cat\", and \"house\".", "raw_instances": ""}
{"instruction": "Create a list of 40 tasks that you need help with.", "raw_instances": ""}
{"instruction": "Generate a list of all the words that appear in a given paragraph.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog', '.']\n\n"}
{"instruction": "Explain the process of creating a new object from an existing object.", "raw_instances": ""}
{"instruction": "Describe a situation where you felt like you were in control of your life.", "raw_instances": ""}
{"instruction": "Write a program that takes a list of strings and returns a sorted list based on the length of each string.", "raw_instances": "Example:\nInput:\n['apple', 'banana',  'cherry', '', 'grape', None]\nExpected Output:\n[None, '', grape, cherry, banana, apple]\n\nOutput:\n\ndef sort_strings(strings):\n  return sorted(strings, key=len)\n\n"}
{"instruction": "How do you make an apple pie?", "raw_instances": ""}
{"instruction": "Create a new sentence using this phrase: \"the beauty of nature is beyond compare\"", "raw_instances": ""}
{"instruction": "Implement a sorting algorithm in c++ that sorts an array of integers in ascending order.", "raw_instances": "Algorithm:\n1) Start with the array to sort.\n2) Compare the elements in pairs, starting from index   of array.\n3) If element at index i is greater than element i+  , swap them.\n4) Repeat step  from i=  to i=n-1.\n5) The array is now sorted in descending order. To sort it in increasing order, reverse the sorted array.\n\nOutput:\n\n"}
{"instruction": "Use the following code to generate the first 20 fibonacci numbers: a, b = 0, 3 for i in range(2,21): a,b = b, a", "raw_instances": ""}
{"instruction": "I have a 120 page document.", "raw_instances": "1) I want to add a page number to the bottom of every page.\n2) The page numbers should be in Roman numerals.\n3) Page numbers on the title page should start at Ⅰ.\n4) All other pages should have page numbering starting at the second page with the number ².\n5) There should not be a blank page between the table of contents and the text.\n6) Add a table with page references to each section of my document.\n\nOutput:\n\n1)\n2)\n3)\n4)\n5)\n6)\n\n"}
{"instruction": "What is the square root of 16?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Describe a situation where you felt like you could not control something.", "raw_instances": ""}
{"instruction": "Use the function from the last task to create a new table.", "raw_instances": ""}
{"instruction": "How can you make a good impression on someone?", "raw_instances": "Input:\n1) Be punctual.\n2) Dress appropriately.\n3) Listen attentively.\n4) Show genuine interest.\n5) Ask questions.\n6) Use positive body language.\n7) Follow up after the meeting.\n8 ) Be respectful.\n9) Express gratitude.\n1 ) Smile.\n"}
{"instruction": "I have a new computer.", "raw_instances": ""}
{"instruction": "Create a new list with the words that appear in both the input list and the output list.", "raw_instances": ""}
{"instruction": "What is the average lifespan of a human being?", "raw_instances": "Input:\nOutput:\n\nThe average human lifespan is approximately   72 years. This number can vary dep"}
{"instruction": "Print out a multiplication table for the numbers 1 to 20.", "raw_instances": "1 *   1 =      2\n1 *  ² =     3\n2  * ² =      ⁴\n3 × ³  =   ³⁶\n4  × ⁵ =\n5 x 6  =\n6 × ¹⁰ =\n7  x ¹¹ =\n8 xx 9 =\n\n"}
{"instruction": "List the five most important words used in this sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWords: quick, brown, fox, jumps, lazy.\n\nOutput:\n\n"}
{"instruction": "Use the function from the previous question to find out the total number of words in a given sentence.", "raw_instances": "def count_words(sentence):\n  words = sentence.split()\n  return len(words)\n\nsentence = \"This is a sentence with five words.\"\nprint(count_words(\"This sentence has six words.\"))\n\n"}
{"instruction": "List 5 things that you are grateful for.", "raw_instances": "1) My health\n2) The love and support of my family and friends\n3) A roof over my head\n4) Access to education and opportunities\n5) Good food to eat\n\nOutput:\n\n"}
{"instruction": "Describe the process of how a company makes a product.", "raw_instances": ""}
{"instruction": "Create a story that involves a character who has a fear of heights and a friend who encourages them to go on a", "raw_instances": "climbing trip.\n"}
{"instruction": "Create a table with the top 10 countries in terms of population, and the corresponding population density.", "raw_instances": "Table:\nCountry | Population | Area (km2) | Density (people/km2)\nOutput:\n\n| Country |  Population  |   Area   ( km2 )  |\n|---------|-------------|--------------|\n| China   |    ******   ******* |     *******\n| India   |\nOutput  ---------\n|         |             |              |\n"}
{"instruction": "Create a table in sql that stores the names of the top 15 countries with the highest population.", "raw_instances": "Table name: top_countries\nColumns: country_name, population\n\nOutput:\n\n| country name | population |\n|--------------|------------|\n| China        |  ******   |\n... (repeat for  top13 countries)\n\n"}
{"instruction": "If a car travels at 60 mph for 4 hours, how far will it travel?", "raw_instances": "Input:\nOutput:\n\n6 hours = distance = (6*62.1371) miles = ~367 miles\n\n"}
{"instruction": "If the input is 2, output the square of 5.", "raw_instances": ""}
{"instruction": "Create a new list called \"numbers\" and add the numbers 5, 7, -2, +3, $10, to it.", "raw_instances": "numbers = [5.0 ,   7.2 , - 2.1 , + 3.6 , $ 15]\n\nOutput:\n\n"}
{"instruction": "Identify the parts of speech of each word and create a table with their corresponding parts.", "raw_instances": "Word | Part of Speech\n- | -\nGeorge Washington | Proper Noun\nConfucian | NOUN\nMichael Jordan | PROPER NAM\nMichelangelo | proper noun\nturn down | VERB\nby | ADP\ns"}
{"instruction": "The input is a list of integers.", "raw_instances": "The output is to print the maximum and minimum values in a comma-separated string.\nExample: Input: {150,-25,-13,160}\nOutput : \"1-(-23)\"\n"}
{"instruction": "If i have 12 apples, and i eat 4, then how much do i still have?", "raw_instances": "Input:\n1)   1  apple\n2)   ½  an apple\n\nOutput:\n\n1/2 of an Apple\n\n"}
{"instruction": "Design a game that teaches children about the basics of computer science.", "raw_instances": ""}
{"instruction": "Design a program that can identify and remove duplicates from a list of numbers.", "raw_instances": "def remove_duplicates(lst):\n  return list(set(lst))\n\n"}
{"instruction": "Write a program that prints the words of a sentence in reverse order.", "raw_instances": "def reverse_sentence(sentence):\n  words = sentence.split()\n  reversed_words = words[::-1] \n  return ' '.join(reversed_words)\n\n"}
{"instruction": "Make a list of 20 numbers from 0 to 99.", "raw_instances": ""}
{"instruction": "Use the function to calculate the total number of days in a year.", "raw_instances": "def days_in_year(year):\n  if year %  闰年:\n    days = year *  平年天数 + (year % 年份 %4 == 余数) * (余下天數)\n  else:\n   days= 干年数 * 并年日数\n  return days\n\nOutput:\n\n"}
{"instruction": "Create a table of 10 numbers and write a program to find the sum of them.", "raw_instances": "Table: \n1  -----------\n2  ------------\n3  |  |\n4  ----------------\n5  - - -\n6  -- --\n7  --- -\n8  ----\n9  -----\n1\n1\n\nOutput:\n\ndef find_sum(table):\n  sum_table = []\n  for row in table:\n    row_sum = sum(row)\n    if row[0] ==  '1':\n      row = [str(row_sum)]\n    else:\n      if len(row) >  len(sum_table):\n          row.insert(0,'')\n      else: row.app"}
{"instruction": "Write a program that will print out all of its contents.", "raw_instances": "def print_contents():\n    print(\"This is a list of contents.\")\n    # Add more contents here\nprint_contents()\n\n"}
{"instruction": "Come up a solution to this problem: write an algorithm to find the maximum sum subarray in an array.", "raw_instances": "Solution: \n1) Initialize two variables, max_so_far and max_ending_here, to the smallest possible integer value.\n2) Loop through the array, starting from index   0.\n3) For each index, add the current element to max_end_here.\n4) If max end here is greater than max so far, update max_sofar.\n5) Subtract the previous element from max ending here.\n6) Repeat steps  to step  until the end of array is reached.\n7) Return max s0far.\n\nOutput:\n\n"}
{"instruction": "Describe a situation where you have used a data type that is not mentioned in this list.", "raw_instances": "List of data types: int, float, string, boolean, NoneType\nInput:\nOutput:\n\n"}
{"instruction": "Create a table with the names of the universities, their location, and the number of students enrolled.", "raw_instances": ""}
{"instruction": "What is the difference between the first and last element of a given list?", "raw_instances": "Input:\n[1503,1605,-1345]\n[2331,-2251] \n[3641 -1 ,  ]\n[-1  , -2  ]\n[  -3 ,   ]\n\nOutput:\n\nFor the list [  ]:\nThe difference is: \n\nFor list  :\nThe differece is:\n\n"}
{"instruction": "How can i reduce my belly?", "raw_instances": "Input:\n- Eat less\n- Exercise more\n"}
{"instruction": "List the names of all the countries in south america.", "raw_instances": ""}
{"instruction": "List all possible combinations of the given set of numbers.", "raw_instances": ""}
{"instruction": "Create a dictionary with the names of your favorite sports and their corresponding scores.", "raw_instances": "Example: {'Football':  ½, 'Basketball': -1½}\nOutput:\n\ndef create_dictionary():\n    sports_scores = {'Soccer': .5,\n                     'Football' : .25}\n    print(sports_scores)\n\n"}
{"instruction": "Give me a recipe for a dish that is easy to make and requires only a few ingredients.", "raw_instances": "Recipe: Spaghetti with Tomato Sauce\nIngredients:\n- ½ lb spaghetti\n- One can of tomato sauce\nInstructions:\n1) Cook the spaghetti according to the package instructions.\n2) While the pasta is cooking, heat the tomato can in a saucepan over medium heat.\n3) Once the sauce is heated through, add salt and pepper to taste.\n4) When the noodles are done, drain them and add them to your sauce.\n5) Toss the two together until the noodle is coated in sauce. Serve hot.\n\nOutput:\n\n"}
{"instruction": "Generate a sentence that contains the word \"dog\".", "raw_instances": "Output:\n\n"}
{"instruction": "How do you feel when you are happy?", "raw_instances": ""}
{"instruction": "Develop a web application that allows users to input a text and displays the frequency of each word in that text.", "raw_instances": ""}
{"instruction": "Design a game that involves solving a puzzle to progress to the next level.", "raw_instances": "Game Name: Puzzle Quest\nObjective: The objective of PuzzleQuest is to solve a series of increasingly difficult puzzles to advance to higher levels.\nRules: Each level will have a different puzzle that the player must solve in order to move on to level two. Puzzles will be randomly generated and will require the use of logic and problem-solving skills to complete. Players will earn points for each puzzle they solve, which can be used to purchase power-ups and upgrades to help them on their journey. There will also be a leaderboard where players can compete with each other to see who can solve the puzzles the fastest.\n"}
{"instruction": "How would the above tasks be completed using a programming language such as python?", "raw_instances": "Input:\n"}
{"instruction": "If the statement is false then explain the reason why it is not true.", "raw_instances": "Statement: The Earth is flat.\nExplanation: It is a widely accepted fact that the Earth, as a planet, is round in shape. This is supported by various scientific evidence, including satellite imagery, gravitational measurements, etc. Therefore, this statement cannot be true.\n\nOutput:\n\n"}
{"instruction": "Given a list of words, find out if the word is a palindrome.", "raw_instances": ""}
{"instruction": "Using the code provided, create a loop that will print out the numbers from 1 to 50.", "raw_instances": ""}
{"instruction": "Define a variable and assign it a value of 5.", "raw_instances": "Variable: x\nValue: \"5\"\n\n"}
{"instruction": "If you have a list of numbers, what is your favorite way to sort them?", "raw_instances": ""}
{"instruction": "A program to generate random numbers between two given numbers.", "raw_instances": "def random_number(start, end):\n  return random.randint(start,end)\n\n"}
{"instruction": "Given a list of numbers, find all pairs of elements whose sum is equal.", "raw_instances": ""}
{"instruction": "Describe the process of how you would solve the problem of a missing key.", "raw_instances": ""}
{"instruction": "How would you describe the person who is the most important person in your life?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "If a number is divisible by 3, is it divisible also by the sum of its digits?", "raw_instances": ""}
{"instruction": "Print the first 8 characters of each word in a sentence.", "raw_instances": "Example: \"Hello World\"\nOutput:\n\nHelo Wold\n\n"}
{"instruction": "Use the information given in the table to create an excel spreadsheet.", "raw_instances": "Table: \nName | Age | Gender\nJohn |   25 | Male\nMary |      31 | Female\nTom |         45  | Male\n"}
{"instruction": "How do you stay organized when working on multiple projects at once?", "raw_instances": "Input:\nOutput:\n\n1) Create a to-do list for each project, prioritizing tasks based on their importance and deadline.\n2) Use a cal"}
{"instruction": "Use a for loop to print all numbers from the 0 to 9.", "raw_instances": ""}
{"instruction": "Find the sum of the digits in each number in your list.", "raw_instances": ""}
{"instruction": "Design a system to detect and prevent phishing attacks.", "raw_instances": "1) The system should be able to identify phishing emails by analyzing the s"}
{"instruction": "If you were to go on a road trip with your family, what would be your top 3 destinations?", "raw_instances": "Input:\n1) Yellowstone National Park\n2) Grand Canyon\n3) Niagara Falls\n4) Disney World\n5) San Francisco\n6) Las Vegas\n7) New York City\n8 ) Washington D.C.\n9) Miami\n13. Los Angeles\n"}
{"instruction": "Identify the most common word used in the given text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nAnswer: the\n\n"}
{"instruction": "Create a game where the user has to guess a word by guessing the first letter of the word.", "raw_instances": "Instructions: The user will be given a list of words and they have to choose the correct word from that list by choosing the right first letters of each word. For example, if the list is ['apple', 'banana', and 'cherry'], the game will ask the player to pick the letter 'a' and the program will tell the players if they are correct or not. \n\nOutput:\n\ndef guess_word(words):\n  word = random.choice(words)\n  print(\"Welcome to the Guess the Word game!\")\n  for letter in word:\n    print(letter, "}
{"instruction": "Implement a method called reverse_string that returns the reverse of a given string.", "raw_instances": ""}
{"instruction": "How do you plan to use the skills you've learned?", "raw_instances": ""}
{"instruction": "Use the function created in task 9 to find the square of 5, 7, and 8.", "raw_instances": ""}
{"instruction": "Make a list of all the words in the sentence “i am a student” and then print them out in alphabetical order.", "raw_instances": "def list_words(sentence):\n  words = sentence.split()\n  return sorted(words)\n\nprint(list_words(\"i love programming\"))\n\n"}
{"instruction": "Calculate the mean of a dataset.", "raw_instances": ""}
{"instruction": "Imagine you are a scientist and you have to explain the concept of quantum mechanics to a layperson.", "raw_instances": ""}
{"instruction": "Write a letter to your friend about your upcoming trip.", "raw_instances": "Dear [Fri"}
{"instruction": "What is the most common way to describe someone who has a disability?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a dictionary that contains the names of all the continents as keys and their corresponding capital cities as values.", "raw_instances": "Example:\n{\n  'Africa': 'Cairo',\n  ‘Asia’: ‘Tokyo',\n}\nOutput:\n\ndef create_continents_capitals_dict():\n  continents_capital_dict = {\n    'Asia': \"Tokio\",\n    \"Africa\": \"Caire\",\n  }\n  return continents_dict\n\n"}
{"instruction": "In the movie, harry is the son of lord voldemort.", "raw_instances": ""}
{"instruction": "How to write a python function to find the maximum number in a given list?", "raw_instances": "Input:\n[150,-25,-13,160]\n[23,-456,-728,-91,-34]\n[-1,'a',-1,True]\ndef find_max(lst):\n  max_num = None\n  for num in lst:\n    if max is None or num > max:\n      max = num\n      return max\n\nOutput:\n\ndef max_number(lst): \n  return sorted(lst)[-1] \n\n"}
{"instruction": "Write a function that takes a string as input and returns the number if it contains only alphabets or numbers.", "raw_instances": ""}
{"instruction": "The average of 5 numbers is 85.", "raw_instances": ""}
{"instruction": "Write a program that prints out all the prime factors of a given number.", "raw_instances": ""}
{"instruction": "Can you write a program that can solve the towers of hanoi problem?", "raw_instances": "Input:\nNumber of disks: n\nStarting peg: A\nDestination peg B\nAuxiliary peg C\nNumber: \nOutput:\n\ndef towers_of_hanoi(n, start, "}
{"instruction": "If you were to create a game that could be used to teach children about the history of computer science, what would it be called?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the data provided to create a bar chart showing the number of people in each country.", "raw_instances": "Data: \n- USA:150 \n - Canada:25 \n  - Mexico:55\n   - Brazil:75 \n\nOutput:\n\n"}
{"instruction": "Analyze the given data and suggest a solution to a problem.", "raw_instances": "Data: The company has been experiencing a decline in sales for several months.\nProblem: Decreased sales are negatively impacting the bottom line.\nSolution: Conduct a thorough analysis of sales data to identify the root cause(s) of decreased sales. This may include analyzing customer behavior, market trends, product offerings, pricing, etc. Once the cause is identified, develop and implement a targeted solution that addresses the issue and helps to increase sales.\n\nOutput:\n\n"}
{"instruction": "Create a list of 15 things you need for your next camping trip.", "raw_instances": ""}
{"instruction": "Make a table of the top 20 most popular programming languages in 3 different countries.", "raw_instances": "Country  | Language  \t| Popularity\n---------|-----------|-----------\nUSA      | Python    |  #1\nUSA\t\t|Rust     \t|#2\nJapan\t | Rust     |#1 \nJapan  | Python  \t#2 \nFrance  |= Rust    \t#\nFrance |= Python  #\n"}
{"instruction": "Use the code below and modify it so that it returns an error message if a negative number or zero is entered.", "raw_instances": "def square(x):\n  return x * x\nInput:\nsquare(-5)\nOutput:\n\ndef check_input(x): \n  if x <=  )):\n    print(\"Error: Negative number/Zero is not allowed.\")\n  else:\n    square = x **  x\n\ncheck_input(-1)\n\n"}
{"instruction": "Describe a situation where you had to use your critical thinking skills to make an informed decision.", "raw_instances": "As an AI language model, my critical reasoning skills are based on the data and information I have been trained on. Therefore, as an example, let's say I was given a set of data on a company's financial performance, including revenue, expenses, profits, etc. My task was to analyze the information and make a recomm"}
{"instruction": "Determine the probability of a customer returning to the store.", "raw_instances": "Given: The store has   150 customers, out of whom  are repeat customers.\nThe probability that a repeat customer will return to store is  .\nOutput:\n\nThe number  of repeat  customers is: \nThe total number is:\nThe percentage of customers who are  is:\n\nSo the percentage  that will come back is\n\nThe answer is \n\n"}
{"instruction": "What is the average number per day of the students who are absent from school?", "raw_instances": ""}
{"instruction": "Create a table with the data points of a sine wave.", "raw_instances": "Data points: (0,-1), (π/2,-2), π,-3, (3π,-4),  (5π,1)\nOutput:\n\n| x | y |\n|---|----|\n|  ⁰  | -1 |\n|-π / ₂ |  -2 |\n  π  |-3 |\n|(3  ⁼  ) |   -3   |\n |5  ⍳  /2 |    ¹    |\n\n"}
{"instruction": "Create a program that will take in any string, count the vowels, then print out how many there are.", "raw_instances": "def count_vowels(string):\n  vowels = ['a', 'e',  'i',   'o',    'u']\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   1\n  return count\n\nstring = input(\"Enter a string: \")\nprint(\"Number of vowels in your string is: \", count)\n\n"}
{"instruction": "Calculate the sum of 2+2, 3+3, and 4+4.", "raw_instances": "Answer: The sum is   15.\n\nOutput:\n\n"}
{"instruction": "Create a list of the top 3 things you want to do in your life.", "raw_instances": "1) Travel to all seven continents.\n2) Learn a new language fluently.\n3) Write and publish a book.\n\nOutput:\n\n"}
{"instruction": "How many calories are in 1 cup of ice cream?", "raw_instances": ""}
{"instruction": "I have a string of text, can i use regular expressions to extract all the email addresses in the text?", "raw_instances": ""}
{"instruction": "Create a function that takes a string as an input, checks if it is a palindrome, if not, it should return a new string with the first and last characters swapped.", "raw_instances": ""}
{"instruction": "Write a program that can predict the next word in this sentence: \"i am going to the store to buy some groceries.", "raw_instances": "The program should take the input sentence as a string and output the predicted next words as an array of strings.\n\nOutput:\n\ndef predict_next_word(sentence):\n  words = sentence.split()\n  last_word = words[-1].lower()\n  \n  if last Word == 'to':\n    predicted_words = ['the', 'store', last word]\n  elif lastWord == \"store\":\n    if words[0] == lastword:\n      predicted_word_list = [lastword, 'some', words]\n    else:\n        predicted word list = [\"to\", \"buy\", last]\n      words\n  else: \n    words.app"}
{"instruction": "Create a function to convert a given string to a date format.", "raw_instances": "Function: convert_to_date_format\nInput:\ndate_string = \"03/15/22\"\ndate_format = \"%m/%d/%y\"\nOutput:\n\ndef convert_date_string_to_format(date_string, date_format):\n  return datetime.datetime.strptime(date, '%m-%d-%y').strftime(date_format)\n\ndate = datetime.date(23,13,-1)\nprint(convert_date_to_string(date))\n\n"}
{"instruction": "List the 10 most popular programming languages in the world.", "raw_instances": ""}
{"instruction": "Create a program that will take a user input and print out the sum of all even numbers from the input.", "raw_instances": "def even_sum(input):\n  sum_even = sum([int(x) for x in input.split() if int(x)%2 ==  )))\n  return(sum_even)\n\n"}
{"instruction": "How can you use the given sentence \"i am going to the store\" to create a new sentence?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the function \"get_name\" to get the name of an employee from the database.", "raw_instances": "def get_name():\n    # code to retrieve name from database\nend.\n\nOutput:\n\n"}
{"instruction": "Create a list of 10 words and their definitions.", "raw_instances": "1) Ambiguous - having multiple possible meanings or interpretations\n2) Conundrum - a difficult or confusing problem\n3) Euphoria - an intense feeling of happiness or excitement\n4) Inevitable - something that is certain to happen\n5) Juxtaposition - the placing of one thing next to another\n6) Melancholy - feeling sad or depressed\n7) Nostalgia - longing for something or someone from a past time\n8 ) Perseverance - continuing to work towards a goal despite difficulties\n9) Ser"}
{"instruction": "Create a new sentence with one word replaced by another.", "raw_instances": "Original sentence: The cat is sleeping on the couch.\nReplaced word: dog\nNew sentence:\nThe dog is playing in a park.\n\nOutput:\n\n"}
{"instruction": "Use the function to find the number of words in \"this is an example of an email\".", "raw_instances": "Input:\nfunction countWords(str) {\n  return str.split(' ').length;\n}\nOutput:\n\ncountWords(\"thisisaneampleofanemail\") = count of \"words\" = \"8\"\n\n"}
{"instruction": "What is the difference between a \"real\" and a fake news story?", "raw_instances": ""}
{"instruction": "Print the number of prime numbers in the given list.", "raw_instances": "List: ['2', '3',  '4',   '5',    '6',     '7',      '8',       '9',        '15']\nOutput:\n\ndef count_primes(lst):\n  count =0 \n  for num in lst:\n    if num >  umber  and num %  prime  ==  num:\n      count +=  number\n  return count\n\nprint(count_prime(lst))\n\n"}
{"instruction": "How do you like to spend your free time?", "raw_instances": "Input:\nI like sp"}
{"instruction": "A person is walking down the street and sees a dog.", "raw_instances": "What is that person's reaction?\nPossible answers: (a). The person runs away. (b). They pet the dog. Output: The correct answer is (c). It dep"}
{"instruction": "Calculate the average of the first 3 numbers and the last 4 numbers.", "raw_instances": "15   25                                 \nOutput:\n\n(1) The average is  (2)  and (3) .\n\n"}
{"instruction": "Can you explain how a neural network works?", "raw_instances": "Input:\nOutput:\n\nA neural net is a type\nof machine learning algorithm that is modeled after the structure of\nthe human brain. It is composed of layers of interconnected nodes, or\nneurons, that process information and make predictions. Each neuron\nreceives input from other neurons, performs a calculation, then passes\nits output to other nodes in a subsequent layer. This process is\nrepeated many times, allowing the network to learn and improve its\naccuracy over time. Neural networks are used in many applications,\nincluding image recognition, natural language processing, speech\nrecognition, recomm"}
{"instruction": "Given a string, find the first occurrence of a vowel and output it.", "raw_instances": "Vowel: a\nString: \"Hello World\"\nOutput:\n\n"}
{"instruction": "What is the name of the company that owns this product?", "raw_instances": "Input:\nProduct: Apple iPhone\nCompany: The Apple Inc.\n\nOutput:\n\n"}
{"instruction": "Create a program that finds the maximum and minimum values in a given list.", "raw_instances": ""}
{"instruction": "Generate a 3d model of an animal.", "raw_instances": ""}
{"instruction": "Create a game where the user has to guess a word based off of its definition.", "raw_instances": ""}
{"instruction": "Find the most common word used in a text and write a poem about it.", "raw_instances": ""}
{"instruction": "Describe a time when you were faced with an ethical dilemma.", "raw_instances": "As an AI language model, my ethical dilemmas are not the same as human beings. But I can provide a general example of an ethics dilemma that a human might face. \n\nOutput:\n\nOne example could be a situation where a doctor is faced between saving a patient's life and respecting the patient’s autonomy. For instance, if a terminally ill patient requests to "}
{"instruction": "Describe a way to use a for loop to iterate over a list of numbers.", "raw_instances": "For loop is a programming construct that allows you iterate through a sequence of values. It is often used to perform a specific action on each element of an array or list. For example, if you have a collection of items, such as a series of names, addresses, or phone numbers, for loops can be used in a script to process each item in turn. Here is an example of how to loop through an integer list and print each number:\n\nnumbers = [23,15,-456,-134,-22]\n\nfor number in numbers:\n    print(number)\n\n"}
{"instruction": "Use the fact that the sum of the first 100 positive integers is 505, to write an equation.", "raw_instances": "Answer: The sum S of all positive numbers from n=1 to N is given by S = N(N+  ½N(N-1)).\n\nOutput:\n\n"}
{"instruction": "Use the following code to create a new array that only contains even numbers.", "raw_instances": "def even_numbers(arr):\n  new_arr = []\n  for num in arr:\n    if num %   2 == ０:\n      new\\_arr.app"}
{"instruction": "Use the provided data to create a table of data.", "raw_instances": "Data: \nName | Age | Gender\nJohn |   25 | Male\nJane |      | Female\nBob |      | \n"}
{"instruction": "List the five most important inventions of all time.", "raw_instances": "1) The wheel\n2) Writing\n3) Electricity\n4) Internet\n5) Telephone\n\nOutput:\n\n"}
{"instruction": "Find the number of words in all the sentences in your article.", "raw_instances": ""}
{"instruction": "Find the most common word that is not a noun in a given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe most frequent non-noun word in this text is \"the\". \n\n"}
{"instruction": "If the number of elements in a list is even, return the sum of its elements.", "raw_instances": ""}
{"instruction": "I am a student, i want to learn python.", "raw_instances": "Can you suggest me a good book to start with?\nInput:\nNone\n"}
{"instruction": "Design a system to store and retrieve data from an sql database.", "raw_instances": ""}
{"instruction": "Given a string, find the length of the string and print it.", "raw_instances": ""}
{"instruction": "List the names of the main characters in the book \"the catcher in the rye\".", "raw_instances": ""}
{"instruction": "What is the name of a fictional character from \"harry potter\" series?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Based on my interests, suggest a book to read.", "raw_instances": "Interest: Science Fiction, Fantasy, Mystery\nInput:\n- Science fiction: Star Wars, The Hitchhiker's Guide to the Galaxy, Dune\n- Fantasy: The Lord of The Rings, Harry Potter, Game of Thrones\nQuestion:\nOutput:\n\nBased on your interests in science fiction, fantasy, mystery, here are some book recomm"}
{"instruction": "If you have 200 dollars, how much money can you save in 3 years if you invest it at an annual interest rate of 4%?", "raw_instances": "Input:\n- Initial investment: $250 \n- Annual interest: .05\n- Number of Years:3\n"}
{"instruction": "Use the given code to create a list of all prime numbers between 1 and 50.", "raw_instances": ""}
{"instruction": "I have a dog.", "raw_instances": "The dog is   (a)  year old.\nIt weighs  pounds.\nIts name is .\nIt is a  breed.\n"}
{"instruction": "Describe a time when a friend or family member helped you out.", "raw_instances": "My friend, John, helped me out when I was struggling with my math homework. He patiently explained the concepts to me and even went over the homework with me until I understood it completely. His help was invaluable and I am grateful for his support.\n\nOutput:\n\n"}
{"instruction": "Answer the following question: what does the word \"pardon\" mean?", "raw_instances": ""}
{"instruction": "What is the most effective way of reducing the carbon footprint of a household?", "raw_instances": ""}
{"instruction": "What is the average age of a person who is interested?", "raw_instances": ""}
{"instruction": "Generate a random number between 6 and the number of words given in your list.", "raw_instances": ""}
{"instruction": "Can you give me an example of a good habit that you have developed?", "raw_instances": "Input:\nOutput:\n\nI have a habit of waking up early every morning to exercise. This habit helps me to start my day with energy and focus, which in turn helps to improve my productivity and overall well-being.\n\nI also have the habit to read a book before going to bed. It helps relax my mind and prepare me for sleep, leading to better sleep quality and less stress.\n\nThese habits have helped me maintain a healthy lifestyle and improve both my physical and mental well being.\n\nCan you think of any other good habits that I can develop?\n\n"}
{"instruction": "Design a system that can detect if a given sentence is a valid english sentence.", "raw_instances": ""}
{"instruction": "Can you give an example of a situation where this would be useful?", "raw_instances": "Input:\nA company is looking to hire a new employee for their marketing department. After reviewing the candidate's resume and conducting an interview, they decide to ext"}
{"instruction": "If you have a string of numbers, how would you convert it to a decimal number?", "raw_instances": "Input:\n\"1  ½\"\nOutput:\n\n1 + (0/2) *  (2/1)  =    1\n\n1/4 = 0\n\n0 + (1 / ¼) =  25/3\n\n2.1667\n\nSo the decimal equivalent of \"1 ½\" is  \"2 ⅝\" or  “2 5⁄3” or \"  .875\".\n\n"}
{"instruction": "Using the code provided, create an array of strings that contains the names of 15 different fruits.", "raw_instances": "Code:\nfruits = [\"apple\", \"banana\", \n\"cherry\",  \"orange\",  \n\"grape\",   \"mango\",   \n\"pineapple\",\"peach\",    \n\"plum\",    \"pear\",     \n\"kiwi\",     \"watermelon\",]\nInput:\nNone\n\nOutput:\n\nfru = ['apple', 'banana', \n'chery',  'orange',  \n'grapes',   'mangos',   \n'pineapples','peaches',    \n'plums',    'pears',     \n'kiwis',     'watermelons']\n\n"}
{"instruction": "Create a new list that contains the squares of the numbers from 1 to 5.", "raw_instances": ""}
{"instruction": "Design a game that uses ai to play a classic board game like chess or checkers.", "raw_instances": ""}
{"instruction": "Use the given code to print the first 100 numbers in reverse order.", "raw_instances": ""}
{"instruction": "How can you make sure that your code is secure?", "raw_instances": ""}
{"instruction": "Create a function that returns a random number between 1 and 50 here are some tasks that can be done using python: 1) implementing a binary search algorithm: ```python def binary_search(arr", "raw_instances": ""}
{"instruction": "Describe your experience with machine learning.", "raw_instances": "Answer: I have experience in machine-learning, specifically in supervised and unsupervised learning. My experience includes working with various algorithms such as K-means, Naive Bayes, Decision Trees, Random Forest, Support Vector Machines, etc. and using them to solve real-world problems. For example, one of my projects involved using K-Means clustering to segment customers based on their purchasing behavior, which helped the marketing team to create targeted campaigns. Another project involved building a recommendation system using a combination of collaborative filtering and content-based filtering techniques. \n\n"}
{"instruction": "Given a string, write a python function to convert it to uppercase.", "raw_instances": "Example: \"hello world\" -> \"HELLO WORLD\"\nInput:\n\"hello, world!\"\nOutput:\"HELLOWORLD!\"\n\n"}
{"instruction": "The word \"smarter\" is used to describe someone who has more knowledge or skills than others.", "raw_instances": "Example: He is smarter than his brother.\n"}
{"instruction": "List the 5 most important words in an article.", "raw_instances": ""}
{"instruction": "Find the number of elements that are greater than 10 in list1.", "raw_instances": "List1: \n[15.25,\n   13.1,\n       \n  -16.75]\nInput:\nList  = [  ]\nOutput:\n\nList = []\nlen(List) #  len() function returns the length of an object.\n\nOutput = len(List)\n\n"}
{"instruction": "Create a new word that is a synonym of <word> and is not a proper noun.", "raw_instances": "Word: <happy>\nOutput:\n\n"}
{"instruction": "Use the function to sort the list in descending order.", "raw_instances": "Function: def sort_descending(lst):\n  return sorted(lst, reverse=True)\nInput:\nlst = [3,7,-2,-15]\n"}
{"instruction": "How would a person feel if they were in a situation where they had to choose between two options?", "raw_instances": "Input:\nOption  A: A job that pays well but requires long hours and little time off.\nOption B: An opportunity to travel and explore the world, even if it means a lower salary.\nPossible Output:\nA person might feel conflicted or torn between the two choices. On one hand, they might be excited about having a stable income and being able to afford the things they need. But on the other hand they may feel like they are missing out on experiences and opportunities that could enrich their life. Ultimately, their decision will dep"}
{"instruction": "Create a function called `is_palindrome` that takes a string as input and returns true if it is the same when reversed, false otherwise.", "raw_instances": "def is_palindrom(string):\n  reversed_string = string[::-1] # Reverse the string\n  if string == reversed\\_string:\n    print(\"True\")\n  else:\n  print (\"False\")\n\n"}
{"instruction": "Make a program that can take a string and convert it to a number.", "raw_instances": "Example: \"15\" ->   13\n\"1\"  ->   　1\nInput:\n\"0\"\n\"2\"\nOutput:\n\ndef convert_to_number(s):\n  if s == \"0\":\n    num = int(0)\n  elif s[0] == '1':\n    if len(s) == \t1:\n      num= int(s)\n    else:\n        num=int(s[1:])\n  else: \n    raise ValueError(\"Invalid input\")\n  return num\n\nprint(convert_to_num(\"0\"))\nprint( convert_num( \"2\"))\n\n"}
{"instruction": "Implement a simple calculator that adds, subtracts, multiplies, and divides two numbers.", "raw_instances": "def calculator(num1,num2):\n  if num1 > num2:\n    num = num + num\n  elif num >  num:\n     num= num - num \n  else:\n      num=num*num\n      print(num)\n  return num\n\ncalculator(50,-15)\ncalculator(-1,-2)\n"}
{"instruction": "Generate a new word and write it down.", "raw_instances": ""}
{"instruction": "Create a program that can calculate fibonacci numbers up to the nth number.", "raw_instances": "def fibonacci(n):\n  if n <=   0:\n    print(\"Incorrect input\")\n  elif n ==    1:\n    return    [0]\n  else:\n     return fibonacci (n-1) + fibonacci( n-2)\n\n"}
{"instruction": "Create a python function for sorting a dictionary by value.", "raw_instances": "def sort_dict_by_value(d):\n  return {k: v for k, v in sorted(d.items(), key=lambda item: item[1])}\n\n"}
{"instruction": "Use the below code to print the first 10 elements of the list.", "raw_instances": ""}
{"instruction": "Design a website for a new product.", "raw_instances": ""}
{"instruction": "Given a list of integers, find the second largest number sure, here is a python program for you: ```python def second_largest(numbers): largest = float('-inf') second = -float('inf') for num in numbers", "raw_instances": " if num > largest: second, largest\n elif num < largest and num != largest:\n second\n return second```\n"}
{"instruction": "Using the given code, create an array of 15 numbers from 0 to 20.", "raw_instances": "Code: \nimport numpy as np\narr = np.zeros(16)\nOutput:\n\narr[0:1] = [0.,   1.]\n\n"}
{"instruction": "Modify the code to return the count of the words in each sentence.", "raw_instances": "def count_words(sentence):\n  words = sentence.split()\n  return len(words)\n\n"}
{"instruction": "Write a function that returns a string that contains the first 20 characters of a given string.", "raw_instances": ""}
{"instruction": "Explain the meaning of “i am not a good student”.", "raw_instances": ""}
{"instruction": "What is the difference between a phd and a master's degree?", "raw_instances": ""}
{"instruction": "Write a program that generates a list of prime numbers between 1 and 500, but only include prime even", "raw_instances": "numbers in your output.\ndef is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\ndef prime_even(n): \n  prime_list = []\n  even_list  = []\n\n  # Generate a prime number list\n\tfor i  in   xrange(n+\t\t2):\n\t\tif is_prime(i):\n\t\t\tprime_list.app"}
{"instruction": "Generate a random number between 0 and 99, and output a word from the following list: \"apple\", \"banana\", or \"cherry\".", "raw_instances": "Output:\n\n"}
{"instruction": "Write a short paragraph about the history and development of a famous computer company.", "raw_instances": ""}
{"instruction": "What is the difference between a \"function\" in programming and \"method\"?", "raw_instances": ""}
{"instruction": "Create a function called \"calculate_average\" that takes in a number of integers and returns the average of those numbers.", "raw_instances": "def calculate_average(numbers):\n  total = sum(numbers)\n  average = total / len(numbers)\n\n  return average\n\nOutput:\n\ndef test_calculate_average():\n  assert calculate_averge([1]) ==  ---------\n  def calculate_avg(numbers): \n    total_sum = numbers[0]\n    count = len(numers)\n    average_sum= total/len(numbers) \n  print(calculate_avg([2]))\n  #assert calculate_avergae([3]) = \ntest_calculat_average()\n\n"}
{"instruction": "What is the name of the person who is responsible for the death of my family?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Describe a process that involves the use of recursion.", "raw_instances": "Example: The Fibonacci sequence is a series of numbers in which each number is equal to the sums of all preceding numbers. It is defined by a recursive formula: F(0) is   0; F ( ₁ ) is  ¹; and F(n) equals F((n-1) + (n -2)) for n > ₂. \n\n"}
{"instruction": "If you have a string of numbers, write a function to convert them to words.", "raw_instances": ""}
{"instruction": "Can you recommend a good restaurant in my area?", "raw_instances": "Input:\n- Location: New York City\n- Type of cuisine: Italian\n"}
{"instruction": "Generate a random number between 2 and the sum of 5 and output it.", "raw_instances": ""}
{"instruction": "Give me a title of a book that i should read.", "raw_instances": "Title: \"The Alchemist\" by Paulo Coelho\n\n"}
{"instruction": "Check if two strings are anagrams of each other.", "raw_instances": "Inputs: string1 = \"listen\", string2 = “silent”\nOutput:\n\ndef is_anagram(string1,string2):\n  if sorted(string2) == sorted (string1): \n    print(\"The strings\",string2,\"and\",  string3,\"are anagram of one another.\")\n  else:\n    \"The string\",s1,\"is not an angram of\", s2\n\nis_anagrams(string3, string4)\n\n"}
{"instruction": "Determine the value of x if x^2 = 16.", "raw_instances": "Answer: x = ±4\n\n"}
{"instruction": "The difference in meaning between \"affect\" and \"effect\".", "raw_instances": "Output:\n\nAffect is a verb that means to influence or produce a change in something or someone. For example, \"The rain affected the game by making the field muddy.\"\n\nEffect is also a noun that refers to the result or outcome of something. It can also be a function or an action. \"What was your effect on the team?\" means \"How did you impact the performance of your teammates?\"\n\n"}
{"instruction": "Determine if a word contains a vowel or consonant.", "raw_instances": ""}
{"instruction": "Generate a random quote from a famous person.", "raw_instances": ""}
{"instruction": "Create a program that can identify a given number in a string.", "raw_instances": "Example: \"The number  ₂₄₇₈₉₁₀₁₁ is in this string.\"\nOutput:\n\ndef find_number(string):\n  numbers = ['0', '1', ... '9']\n  for number_str in numbers:\n    if number_string in string:\n      return number\n  return None\n\nOutput = find_numbers(\"The numbers  _2_4_7_8_9_1_0_ is a sequence of numbers.\")\n\n"}
{"instruction": "Create a program that can identify the most suitable job for me based on my skills and interests.", "raw_instances": ""}
{"instruction": "Can you come up a plan to improve your productivity?", "raw_instances": "Input:\n1) Create a to-do list for each day.\n2) Prioritize the tasks on the list by importance.\n3) Set a time limit for completing each task.\n4) Take breaks every hour to avoid burnout.\n5) Eliminate distractions by turning off notifications on your phone.\n6) Use a timer to keep track of time.\n7) Review your progress at the "}
{"instruction": "Write an algorithm that finds the", "raw_instances": "Input:\nlargest number in a list of numbers.\n"}
{"instruction": "Write a short story about a person who discovers a secret room in their house.", "raw_instances": ""}
{"instruction": "Identify the most common words used in customer reviews of a product.", "raw_instances": ""}
{"instruction": "How can you use a for loop to print all the elements of a 2d array?", "raw_instances": "Input:\narr = [[1 ,   2 ,      3],\n[4 ,      ⁵,    6],\n7 ,       8 ,    ９]\noutput:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nOutput:\n\nfor row in arr:\n    print(row)\n\n"}
{"instruction": "Create a list of all the words that are in that list.", "raw_instances": "List: ['apple', 'banana',  'cherry', ['orange', [ 'grape', \"pineapple\"]]]\nOutput:\n\n['apple']\n['banana']\n'chery'\n['orange']\n[ 'pineaple']\n\n"}
{"instruction": "Come up an idea for a business that can be started with $1,00, 0$ dollars.", "raw_instances": ""}
{"instruction": "Generate a 3d visualization of a dataset using matplotlib.", "raw_instances": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a random dataset\nx = np.random.rand(15)\ny = x + np.arange(0.,  ½, .1)\nz = y**2\n\nfig = plt.figure()\nax = fig.add_subplot(223, projection='3D')\nax.plot(x, y, z, 'o-')\nplt.show()\n\n"}
{"instruction": "Imagine you are a scientist studying the effects of climate change on the environment.", "raw_instances": ""}
{"instruction": "If you were a superhero, what would your superpower be and how would you use it to help others?", "raw_instances": ""}
{"instruction": "Create a program that will take in any string and output the number of words it contains.", "raw_instances": "def word_count(string):\n  return len(string.split())\n\n"}
{"instruction": "Write a program that generates a list of 15 random numbers between 0 and 99.", "raw_instances": "def generate_random_numbers():\n    random_numbers = []\n    while len(random_numbers) <   16:\n        random_number = random.randint(0 ,  n)\n        if random number not in random nubmers:\n            random_nubmer.append(random_number)\n    print(random_numbes)\n\n"}
{"instruction": "What are some common mistakes that beginners make when learning a new programming language?", "raw_instances": ""}
{"instruction": "Write a program that will take a user input and print out a list of all the prime numbers between 1 and the input number.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef prime_numbers(n): \n  prime_list = []\n  i =1\n\twhile i <= n:\n\t\tif isPrime(i):\n\t\t\tprime_list.append(i)\n\t\ti += \t\t\t\t\t\t\t\t\t\t\t2\n\treturn prime_lis\n\nprint prime_number(15)\n\n"}
{"instruction": "Write a short paragraph about a person who has inspired you.", "raw_instances": ""}
{"instruction": "Create a function that takes a list of strings and returns a dictionary with keys as the strings in a given list and values as a tuple containing the length of each string and the number of vowels in each of its characters.", "raw_instances": "Example:\nInput:\n['apple', 'banana',  'cherry']\nOutput\n{'apple': (5,), 'banan':(6,),  \"cherr\":(5,)}\n\n"}
{"instruction": "How can you use python to find the sum of an arithmetic series?", "raw_instances": "Input:\nn = [250]\nd = [-1/2]\na = []\nOutput:\n\ndef find_sum(n, d):\n  sum_series = sum(n)\n  return(sum_series)\n\n"}
{"instruction": "Use the following code to create a list of numbers from 0 to 9: numbers = [0,1,2,3,4,5,6,7,8,9] 11.", "raw_instances": "numbers = list(range(13))\nprint(numbers)\n\n"}
{"instruction": "Create a table of 10 numbers and calculate the average.", "raw_instances": "Table:\n1  -----------\n2  ------------\n3  ----------------\n4  --------------------------------\n5  ------------------------------------------------\n6  ----------------------------------------------------------------\n7  ------------------------------------------------------------------------\n8  ----------------------------------------------------------------------\n9  --------------------------------------------------------------------------------\n1\n0  ----------\n15\n256\n813\n987\n-162\n----------------\n|  |  |\n| - | - |\n----------------\n\nOutput:\n\n| Number | Sum | Average |\n-----------------------------------\n|   ½   |   -1 |    -0   |\n-------------------------------\n1   |-1|    ¼   |\n\n"}
{"instruction": "If you were to create a new list, how would you ensure that the list only contained even numbers?", "raw_instances": "Input:\n[1503, \"Hello\",   134567.89765 ,  \"Goodbye\", -1687]\n[22331 , \"Hi\", \"Bye\", True, False, None, [25364],  {1:2},  (26374),  set([2846]),  frozenset([3]), {2:3}, {4:5}, (5), {6:7}, froz"}
{"instruction": "Can you explain how to use the google translate api?", "raw_instances": ""}
{"instruction": "Write a program that takes a list of words and returns the word with the most vowels.", "raw_instances": ""}
{"instruction": "Find the number of times the letter 'a' appears in all words of a sentence.", "raw_instances": "Example: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe number is  .\n\n\n"}
{"instruction": "Give me an example of how to use a for loop in python.", "raw_instances": ""}
{"instruction": "Find the largest prime number less than n, where n is a positive integer.", "raw_instances": ""}
{"instruction": "Determine the number of ways to arrange the letters of the word \"mathematics\".", "raw_instances": ""}
{"instruction": "The following are the ingredients for making a cake.", "raw_instances": "-  ½ cup (50g) unsalted butter\n-   ¾ cup granulated sugar\nInput:\n- How much butter do I need?\n- What is granular sugar?\n\nOutput:\n\n- You will need ¼ cup of unsalt butter.\n \n- Granulated Sugar is a type sugar that has been processed to have a fine, granule-like texture. It is commonly used in baking and cooking.\n\n- "}
{"instruction": "The program should also be able to handle special characters and numbers.", "raw_instances": "def remove_special_characters(string):\n  return ''.join(e for e in string if e.isalnum() or e.isspace())\n\n"}
{"instruction": "Generate a random number between 1 and 30 sure, here are the tasks: 11) find out the top 7 most common words from a given text.", "raw_instances": "2) write a function to check if a string is a palindrome.\n3) create a python program that takes a list of numbers and returns the largest number in that list.\n\nOutput:\n\n1: ['the', 'and', \"i'm\", 'a', ',', 'to', '.', 'you', '?', '!']\n2: True\n3: max([1503,134565364637486757687331623])\n\n"}
{"instruction": "Use a for loop to print the first 5 elements of a list.", "raw_instances": "List: ['apple', 'banana',  'cherry', True, 'date', False]\nInput:\nOutput:\n\nfor i, element in enumerate(['apple','banana','cherr','True','date','False'], start=0):\n  if i <   5:\n    print(element)\n\n"}
{"instruction": "If you were to create a list of the top 10 most popular movies of all time, what would be the first 5 movies on the list?", "raw_instances": ""}
{"instruction": "Write a program that can generate a random joke in 5 seconds.", "raw_instances": ""}
{"instruction": "List the names of 10 countries that are in the same continent as the united states.", "raw_instances": "Answer: Canada, Mexico, Brazil, Argentina, Chile, Peru, Colombia, Venezuela, Ecuador, Bolivia.\n\nOutput:\n\n"}
{"instruction": "Find the number of days since the last login.", "raw_instances": ""}
{"instruction": "In a group of 12 people, what is the average age?", "raw_instances": ""}
{"instruction": "Find a synonym for given word and write a new sentence using the synonym.", "raw_instances": "Word: \"Excited\"\nSynonym: Thrilled\nSentence: She was thrilled to receive the news.\n\nOutput:\n\n"}
{"instruction": "Determine the probability of rolling a dice with 6 sides and a number between -1 and +1.", "raw_instances": "Answer: The probability is ½ or  ¼.\n\nOutput:\n\n"}
{"instruction": "How do i make my own website?", "raw_instances": "Input:\n\n"}
{"instruction": "Find the largest city in germany.", "raw_instances": "Answer: Berlin\n\n"}
{"instruction": "Print the first 5 words in the new word list.", "raw_instances": ""}
{"instruction": "What is the output of the function if i pass in \"hello world\" as the input?", "raw_instances": ""}
{"instruction": "Can you write a program that calculates the sum of the first 15 even numbers?", "raw_instances": "Input:\nOutput:\n\ndef even_sum(n):\n  sum=0 \n  for num in list(range(2,n+2)):\n    if num%2==0:\n      sum+=num\n  return(sum)\n\nprint(even_sum(31))\n\n"}
{"instruction": "Given a set of numbers, write python functions to find the maximum and minimum values in the set.", "raw_instances": ""}
{"instruction": "List 3 things about yourself that make you unique.", "raw_instances": "1) I am fluent in three languages.\n2) My favorite hobby is playing the piano.\n3) In my free time, my friends and I like to go on hikes and explore new trails.\n\nOutput:\n\n"}
{"instruction": "Use the below code and print out the result.", "raw_instances": "def add(a, b):\n  return a + b\nprint(add(250564523,15346574))\nOutput:\n\n"}
{"instruction": "What is the most common word that appears in all of shakespeare's plays?", "raw_instances": ""}
{"instruction": "How to make a website that can be accessed from any device?", "raw_instances": "Input:\n\n"}
{"instruction": "Given a list of sentences, find the one that is most similar to the input sentence.", "raw_instances": "Sentence: I love eating pizza.\nSentences: \n1) I adore eating pasta.\n2) Pizza is my favorite food.\n3) Eating pizza is a great way to relax.\n4) My favorite meal is pizza.\n\nOutput:\n\n"}
{"instruction": "Create a program to calculate the area of a triangle given the length of its sides.", "raw_instances": "def area(a, b, c):\n  s = (a + b + c) /   2\n  area = ((s*(s-a)*(s-b)*(a-b))**0) /  (4 * math.sqrt(3))\n  return area\n\nOutput:\n\n"}
{"instruction": "How do i get a job in a company that i have never worked for before?", "raw_instances": "Input:\n1) Research the job and company thoroughly.\n2) Network with people who work at the target company and learn about their culture and values.\n3) Tailor your resume and cover letter to the specific job you are applying for.\n4) Prepare for interviews by practicing common interview questions and researching the interviewer and the interview process.\n5) Follow up after the interviews with thank-you notes or emails.\n6) Be persistent and keep applying until you find a position that is a good fit for you.\n\nOutput:\n\n"}
{"instruction": "Can you come up a way of making a 150lb weight machine lighter?", "raw_instances": ""}
{"instruction": "Create a program that will take in two numbers as input and output their sum.", "raw_instances": ""}
{"instruction": "What is the most common word that appears in the top 100 most frequent words in a given text?", "raw_instances": "Input:\nThe quick brown fox jumps over the lazy dog. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed at risus vel nisl dignissim feugiat. Donec vel quam vel velit ultrices bib"}
{"instruction": "Create a table of all the planets in our solar system.", "raw_instances": "| Planet | Number of Moons | Distance from Sun (AU) |\n|--------|----------------|----------|\n| Mercury|   0            |  .37     |\n | Venus  |   ０          | .72      |\n ｜地球|  　1           |1          |\n｜火星|    ２          　|1 .52      |\n   |　木星|　 ７９         |5.2       |\n    |土星 |   　８２       |9 .48     |\n\n"}
{"instruction": "Design a game that involves a player guessing a number between 1 and 50, with each guess being scored based on how close it was to the actual number.", "raw_instances": ""}
{"instruction": "I have a string and i want to convert it to a number.", "raw_instances": "String: \"15\"\nOutput:\n\n1\n\n"}
{"instruction": "Create a program that can find the largest number in a list of numbers.", "raw_instances": "def find_largest_number(numbers):\n  largest_number = numbers[0]\n  for number_ in numbers:\n    if number > largest:\n      largest = number\n  return largest\n\nnumbers = [23,15,-16,-27,-33]\nprint(find_larger_number)\n\n"}
{"instruction": "Write a program that takes a string as input and returns the number of words that contain the letter 'a' in them.", "raw_instances": "def count_words_with_a(string):\n  count =0 \n  for word in string.split():\n    if 'A' or 'E'or 'I'  or' O'   or  'U'    in word:\n      count +=   word.count('A') + word. count('E')  +word.count ('I')   +   word .count('O')    +    word  . count ('U')\n  return count\n\n"}
{"instruction": "Use the following code to create an array of numbers and print the sum of all elements in that array.", "raw_instances": "def main():\n    arr = [23,15,-16,-8]\n    total = sum(arr)\n    print(total)\n"}
{"instruction": "List 3 things you are good at.", "raw_instances": "1) I am good with numbers and can quickly calculate complex equations.\n2) My writing skills are strong and I can write clear and concise reports.\n3) As a programmer, my coding skills allow me to create efficient and effective software.\n\nOutput:\n\n"}
{"instruction": "How to find a number in a given list?", "raw_instances": "Input:\nList: ['apple', 'banana',  'orange',15]\nNumber:16\n"}
{"instruction": "If you were to be stranded in the middle of a desert, how would you survive?", "raw_instances": ""}
{"instruction": "Describe the process of photosynthesis and how it helps plants grow.", "raw_instances": "Photosynthesis is a process by which green plants and some other organisms use sunlight to synthesize foods with the help of chlorophyll. During photosynthetic process, plants absorb carbon dioxide and water from their environment and convert it into glucose and oxygen. This process is essential for plants to grow and survive. \n\n"}
{"instruction": "Create a new word that means \"to be in a hurry\".", "raw_instances": "Output:\n\n"}
{"instruction": "Create a new list of words from a given string.", "raw_instances": "Example: \"Hello World\"\nOutput:\n\n['H', 'e',  'l',   'o',    ' ', 'W',     'O',      'r',       'd']\n\n"}
{"instruction": "Find the average of the first 5 elements in this list 11.", "raw_instances": "[13,15,-2,-16,-33]\nInput:\nOutput:\n\n"}
{"instruction": "Create a table with the name \"users\" and add 3 rows of data.", "raw_instances": "Table name: users\nData: \n1) Name: John, Age:25\n2)Name: Jane,Age:31\n3)name: Bob,age:45.\n\nOutput:\n\n| Name | Age |\n|------|-----|\n| John |   2  |\n | Jane |    | \n | Bob  |\n\n"}
{"instruction": "Create a program that can solve a given problem.", "raw_instances": "Problem: Given a list of numbers, find all pairs of elements whose sum is equal to the target number.\nTarget number: k\nInput:\n[150,-25,-13,160]\nTarget: -1\nExpected Output: [(1,-3), (-3,-4)]\nOutput:\n\ndef find_pairs(lst, target):\n  pairs = []\n  for num1 in lst:\n    if num2 := target - num:\n      pairs.app"}
{"instruction": "Create a list of the top 3 most popular programming languages in use today.", "raw_instances": "1) Python\n2) JavaScript\n3) Java\n\n"}
{"instruction": "How would your coaching style differ from that of your mentor?", "raw_instances": ""}
{"instruction": "Write a function that calculates the average of an array of numbers.", "raw_instances": "Function: def average(numbers):\nOutput:\n\ndef average(nums):\n  total = sum(nums)\n  return total / len(nums)\n\n"}
{"instruction": "List the top 30 most popular movies in 4 different genres.", "raw_instances": "Genre   |  Movie  |  Year\nAction \t|  The Dark Knight  (2) \t\t  |  Year:2  |\nAction\t | Inception \t\t\t  | Year  :  Incept  |\n\n"}
{"instruction": "Using a loop, print the numbers from the list in reverse order.", "raw_instances": "List: ['a', 'b',  'c', -1] \nOutput:\n\nfor i, num in enumerate(list):\n  if num <  )):\n    print(num)\n\n"}
{"instruction": "Create an array of strings and print each string in uppercase.", "raw_instances": "Example:\nInput:\n['apple', 'banana', \"cherry\"]\nOutput:\n\n['APPLE', \n 'BANANA',  \n 'CHERRY']\n\n"}
{"instruction": "If i have 20 dollars, how much money do i need in order to buy 5 items from a store that costs $1 each?", "raw_instances": "Input:\n25\n2\n150\n\nOutput:\n\nYou need $22.0 to purchase   5  items at $  . \n\n"}
{"instruction": "How much time does it take to travel from new york to london?", "raw_instances": "Input:\nDistance: Approximately   5564 miles\nAverage speed: About  Mph\nTime: ?\n\nOutput:\n\nDistance = Distance in miles (5068 miles)\nAverage Speed = Speed in mph (Mph)\nTime = Time in hours (hours)\n\n"}
{"instruction": "Create a list with the names of the countries that have the highest population in the world.", "raw_instances": ""}
{"instruction": "Provide a detailed explanation of how the function works.", "raw_instances": "Function: def add(x, y):\nreturn x + y\n"}
{"instruction": "Check if the number in row 3 is greater than 15.", "raw_instances": "Row   1:   \"apple\",  \"banana\", \"cherry\"\nRow 2: \"dog\",  “cat”, \"elephant\"\nOutput:\n\nTrue\n\nExplanation: The number  in Row  is  and it is indeed greater  than the threshold value  of .\n\n"}
{"instruction": "Calculate the average of three numbers and output the result.", "raw_instances": "15\n25 \n36\nInput:\n1)  -----------\n2)   ---------\n3)    ------\nOutput:\n\n(1+2+3)/3 = (6)/1 =6\n\n"}
{"instruction": "Find the word that is missing in this sentence: \"i am a student, i have a dog, and i am going to school.", "raw_instances": ""}
{"instruction": "Create a new array of size 5 and fill it with random integers between 2 and", "raw_instances": "15.\ndef random_array():\n    array = []\n    while len(array) <   5:\n        num = random.randint(2 ,     16)\n        if num not in array:\n            array.append(num)\n    print(array)\nrandom_array()\n\n"}
{"instruction": "Create a list of 15 numbers and print the first 5 elements of this list.", "raw_instances": "List: {13,25,-16,-27,-34,-45}\nOutput:\n\n1)  ---------\n2)   -----------\n3)    -----------\n\n"}
{"instruction": "How to create a web application using flask and django?", "raw_instances": ""}
{"instruction": "Create a new list with the names of all people who have a birthday in january.", "raw_instances": "List: ['John', 'Jane', \"Mary's\", 'Bob',  'John Doe', \n'John Smith', Jane Doe']\nOutput:\n\n['John']\n\n"}
{"instruction": "Calculate the average age of the people in list 1.", "raw_instances": ""}
{"instruction": "How would a person with no experience in this field approach the task?", "raw_instances": ""}
{"instruction": "Use the function you just created to count the vowels of the string \"hello world\".", "raw_instances": "Output:\n\ndef count_vowels(string):\n  count =0 \n  for char in string:\n    if char.lower() in \"aeiou\":\n      count +=   1\n  return count\n\nprint(count_vowel(\"hello worlD\"))\n\nOutput  :  \"Hello world\" has  '3' vowels.\n\n"}
{"instruction": "Create a program that can calculate the area of any shape using the given parameters.", "raw_instances": "Parameters: length, width, height\nInput:\nlength = \"15\"\nwidth = '13'\nheight = None\nExpected Output:\nArea = Area(length, 'width', height)\n\n"}
{"instruction": "Generate a random sentence with 50 words and 30 characters.", "raw_instances": ""}
{"instruction": "How can you use the following code to create a function that takes a number as an argument and returns its square?", "raw_instances": ""}
{"instruction": "I have a string of words, i need you to find the longest word in it.", "raw_instances": "String: \"This is a test string\"\nOutput:\n\n"}
{"instruction": "List the 11 most important words in a given paragraph.", "raw_instances": "Paragraph: The United Nations (UN) is an intergovernmental organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote human rights, protect the environment, provide humanitarian aid, address global challenges, such as climate change, poverty, terrorism, disease, food and water security and promote sustainable development.\nWords: United, Nations, inter-governmental, organization, maintain, international, peace, security,\nfriendly, relations, nations.\n\nOutput:\n\n"}
{"instruction": "Generate a table with 3 columns and a total of 20 rows, where each cell contains a randomly generated number from 0 to 99.", "raw_instances": ""}
{"instruction": "How can i find the largest prime number in a given range of numbers?", "raw_instances": "Input:\nstart = int(input(\"Enter the starting number: \"))\n"}
{"instruction": "Create a list of 8 items.", "raw_instances": ""}
{"instruction": "Use the information given to create a list of at least 3 potential solutions to the problem.", "raw_instances": "Problem: The company is experiencing a decline in sales.\nInformation: \n- The sales team is not meeting their targets.\n- There is a lack of customer engagement.\nSolution  ：\n1) Increase the sales training for team members.\n2) Improve the customer service experience.\n3) Implement a loyalty program for repeat customers.\n\nOutput:\n\n"}
{"instruction": "Create an algorithm to sort a linked list in ascending order.", "raw_instances": "Algorithm:\n1) Initialize a variable 'current' to the head of linked_list.\n2) While 'head' is not null:\n    a) Set 'temp' as the next node of 'tail'.\n    b) Move 'next' of tail to 'node'.\n        i) If 'value' in 'new_node' < 'old_node', then set 'prev.next' = 'curr'.\n            ii) Else, set prev.next = temp.\n    c) Update 'previous' and 'till' nodes.\n3) Return 'list' after sorting.\n\nOutput:\n\n"}
{"instruction": "If the user's query is not found in any of these passages, print \"not found\".", "raw_instances": ""}
{"instruction": "Find the median of the set.", "raw_instances": ""}
{"instruction": "If the sum of two numbers is 12 and the difference is -6, what are the two number?", "raw_instances": "Input:\nSum:15\nDifference:-6\nQuestion:\nWhat are two integers that add up to the number  umber  and differ by  -1  ?\nOutput:\n\nThe two integer numbers are  (7 and -5)  .\n\n"}
{"instruction": "Generate a list of 15 words that are antonyms of \"happy\".", "raw_instances": ""}
{"instruction": "List the 10 most important words in a sentence and their meanings.", "raw_instances": ""}
{"instruction": "If a person is 25 years old, write a code that returns \"you are an adult\".", "raw_instances": "Input:\nage = int(input(\"Enter your age: \"))\nOutput:\n\nif age >=  ：\n    print(\"You are a adult\")\nelse:\n    pass\n\nend.\n\nThe code above is incorrect. Please fix the code and provide the correct output.\n\nInput:\n\nage=26\nprint(\"you're an adut\")\n\nOutput:\"You're a Adult\"\n\n"}
{"instruction": "A given string contains a sequence of characters.", "raw_instances": ""}
{"instruction": "Write a program to find the most frequent word in an input string.", "raw_instances": "def most_frequent_word(input_string):\n  word_count = {}\n  for word, count in word_frequency(inputString).items():\n    if word not in count:\n      count[word] = count.get(word,1) +1\n  return max(word_count, key=word_count.get)\n\n"}
{"instruction": "The given list contains 50 numbers.", "raw_instances": ""}
{"instruction": "Based on the given information, suggest a possible solution.", "raw_instances": ""}
{"instruction": "Find the average population of the 15 countries with the highest population.", "raw_instances": ""}
{"instruction": "Use the fact that the average of a set of positive numbers is greater than the median of the set to prove a statement.", "raw_instances": "Statement: The average (arithmetic mean) of n positive integers is at least as large as their median.\nProof: Let's say we have a list of numbers, A1 to An. We can arrange them in asc"}
{"instruction": "How would i go about creating an app that can be used to track my daily water intake?", "raw_instances": "Input:\n1) What is my current water consumption?\n2) How much water should I be drinking?\n3) Can I set reminders to drink water?\n4) Is there a way to log my water usage?\n5) Are there any other features I should consider adding?\n\nOutput:\n\n1 - To track your current daily consumption, we can use a simple counter that increments every time you drink a glass of water.\n2 - The amount of daily intake dep"}
{"instruction": "Given a list of numbers, write a python function called \"sum_of_digits\" that returns their sum.", "raw_instances": "def add_digits(numbers):\n  sum_of_numbers = sum(numbers)\n  return int(sum_of_number)\n\n"}
{"instruction": "Write a program that will take in any string and output a random sentence from a given list.", "raw_instances": "List: [\"I love you\", \"You are the best\", “I can’t believe it’s you”, “You make my heart skip a beat”, \"I'm so happy to see you\"]\nInput:\nOutput:\n\ndef random_sentence():\n    import random\n   # list of sentences\n     sentences = [\"You love me\", \n                  \"you are amazing\",  \n                  “you make me so excited”, \n                 \"i can't believe you are here\",  \"it's so great to meet you\"]\n\n    # select a sentence randomly\n      sentence = random.choice(sentences)\n    print(sentence)\n\nrandom_sentence()\n\n"}
{"instruction": "Create a table that lists the names of 15 different types of fruits.", "raw_instances": "Fruits: Apple, Banana, Orange, Kiwi, Mango, Pineapple, Grapes, Watermelon, Strawberry, Blueberry, Raspberry, Blackberry\n"}
{"instruction": "Create a new table with two columns: \"country\" and \"population\".", "raw_instances": "Output:\n\nCREATE TABLE country_population (\n    country VARCHAR(255),\n    population INT\n);\n\n"}
{"instruction": "Generate a table with the given data and write the code for it.", "raw_instances": "Data: \nName | Age | Gender\nJohn |   25 | Male\nMary |      31 | Female\nTom |         45  | Male\nCode:\nimport pandas as pd\ndata = {'Name': ['John', 'Mary', 'Tom'],\n        'Age': [26.0 ,       15.1 ,           55],\n        'Gender': ['Male',   'Female',        'Male']}\ndf = pd.DataFrame(data)\nprint(df)\n\n"}
{"instruction": "You are provided with the name of a city and its population.", "raw_instances": "City: New York\nPopulation: About   8 million\nYour task is to find out how many people live in New york.\nAnswer: There are about eight million people living in new york.\n\nOutput:\n\n"}
{"instruction": "Imagine you have a 3d printer that can create anything you want.", "raw_instances": ""}
{"instruction": "Develop a system that predicts the weather based on the current temperature and humidity.", "raw_instances": "The system should take in two inputs: temperature (in Fahrenheit) and relative humidity (as a percentage). The system will output a prediction of whether it will be sunny, cloudy, or rainy.\nFor example, if the temperature is   75 degrees Fahrenheit and the relative\nhumidity is               %, then the system would output that it is likely to\nbe a sunny day.\nIf the input is temperature =     and\nrelative humidity =   , then\nthe system outputs that the day is cloudy.\n"}
{"instruction": "List the 15 largest cities in china.", "raw_instances": ""}
{"instruction": "Use the data provided in this table to create a program that can predict the next word in a sentence.", "raw_instances": ""}
{"instruction": "Create a function that takes a string as input, removes all punctuation marks, converts it to lowercase, counts the number of vowels, consonants, digits, spaces, uppercase letters, lowercase letters and special characters, then returns the count.", "raw_instances": "Example Input: \"Hello, World!  你好, 艾瑞克!\"\nExample Output: {'vowels':  'aeiou', 'consonants': 'bcdfghjklmnpqrstvwxyz', \n'digits': '', 'spaces': ', !? ', 'uppercase': \"D\", 'lowercase': \n\"eolrd\", \"special\": \"，。\"}\n\n"}
{"instruction": "What are some ways to promote diversity and inclusion in a workplace?", "raw_instances": ""}
{"instruction": "Can you provide an example of a successful diversity initiative in your organization?", "raw_instances": "Input:\nOur organization has implemented a diversity and inclusion initiative that has been successful in increasing diversity in our workforce. We have implemented several programs to attract and retain a diverse workforce, including employee resource groups, diversity training, mentorship programs, job fairs, internships, scholarships, etc. These programs have helped us to create a more inclusive workplace and attract a wider range of talent. Additionally, we have also implemented policies to ensure that our hiring and promotion processes are fair and unbiased. This has resulted in a workforce that is more diverse and inclusive, which has led to increased innovation and better decision-making.\n\nOutput:\n\n"}
{"instruction": "Determine the median of a list of integers.", "raw_instances": ""}
{"instruction": "In a given sentence, identify the subject, verb, object, preposition, conjunction, adverb, etc.", "raw_instances": "Sentence: The cat jumped over the fence.\nSubject: Cat\nVerb: Jumped\nObject: Fence\nPreposition: Over\nConjunction: None\nAdverb: Not applicable\n\n"}
{"instruction": "You are given a paragraph with some", "raw_instances": "Input:\nThe quick brown fox jumps over the lazy dog. This sentence is an example of an English pangram. A pangrams is a sentence that contains every letter of\nthe alphabet at least once. Pangrams are often used to test fonts and typefaces. For example, this sentence contains all  of them. It is also a pangrama.\n"}
{"instruction": "Create a program that can identify whether a given number can be represented as a sum of two prime numbers.", "raw_instances": ""}
{"instruction": "Write a program that prints out the current date and time in iso 8601 format.", "raw_instances": "def print_date_time():\n    import datetime\n   print(datetime.datetime.now().isoformat())\n\n"}
{"instruction": "Generate a random quote about love.", "raw_instances": "Quote: \"Love is not just looking at each other, love is looking inwards and seeing the same image.\" - Eleanor Roosevelt\n\nOutput:\n\n"}
{"instruction": "List the top 5 most common types of job titles in a company.", "raw_instances": "1) Manager\n2) Engineer\n3) Analyst\n4) Developer\n5) Designer\n\nOutput:\n\n"}
{"instruction": "Create a list of 15 words related to \"technology\" and explain their importance in modern society.", "raw_instances": ""}
{"instruction": "Use the random module to generate a number in a range between here are some tasks that can be created using python: 1) create function to return nth fibonacci number: ```python def fibonacci(n): if n == 4: return", "raw_instances": "```  ② create a function that returns the number that is closest to the input number but not equal to it:```python\ndef closest_number(num):\nif num == int(num): num = int\nif  num >  int( num ): num -=  round(num)\nelse: num +=  -round(num)\n\nreturn num\n```\n③ create an infinite loop that prints the numbers from n to m: \n``` python\nn = input(\"Enter the starting number:\")\nm =input(\"enter the "}
{"instruction": "Given a set of instructions, write a program to follow the instructions and output the result.", "raw_instances": "Instructions: \n1) Take the input number and add   to it.\n2) Multiply the number by  .\n3) Divide the resulting number  by .\n4) Subtract  from it and take the absolute value.\n5) Output the answer.\n\nInput:\n15\n1\n2\n3\n4\n\nOutput:\n\n"}
{"instruction": "Describe a time when you were able to help someone else.", "raw_instances": "Answer: I remember when I was in college, my friend was going through a tough time. She was struggling with her studies and had lost interest in everything. So, one day, when she was feeling low, she called me and I could sense that she needed someone to talk to. We had a long conversation about her problems and what she could do to overcome them. After that conversation, we made a plan to work on her assignments together and she started to feel better. It was a great feeling to see her smile again and know that I had helped her in some way.\n\nOutput:\n\n"}
{"instruction": "Find a way to make a cake without using eggs.", "raw_instances": ""}
{"instruction": "Using the provided code, create an algorithm that finds the largest number in a given list.", "raw_instances": "def find_largest_number(numbers):\n  largest_number = numbers[0]\n  for number_ in numbers:\n    if number > largest:\n      largest = number\n  return largest\n\nInput:\nnumbers = [23,15,-16,-22,-33,-45]\n\nOutput:\n\ndef largestNumber(numbers): \n  max = -float('inf') \n   \n  # Iterate over the list \n    # and compare each element \n   # with max \n for num in list: \n     if num > max:  \n         max=num \n return max \n\n"}
{"instruction": "Ask me to describe my favorite color.", "raw_instances": "Answer: My favorite colors are blue and green. Blue is a calming color that makes me feel relaxed and peaceful. Green is an energizing color, which makes my mind feel alert and refreshed. Together, they create a sense of balance and harmony in me.\n\nOutput:\n\n"}
{"instruction": "Implement a method in a given class that returns a new object with all the elements of an existing object replaced with their square roots.", "raw_instances": "Class: Point\nInput:\nPoint p = new Point(4.0);\nOutput:\n\npublic class Point {\n    private double x;\n    public Point(double x) {\n        this.x = x; \n    }\n    // Method to return a point with the x-coordinate replaced by its square root\n   public static Point squareRoot(Point p) { \n        return new  Point(Math.sqrt(p.x));\n    } \n}\n\n"}
{"instruction": "Find the sum of each row in this matrix.", "raw_instances": "Matrix: [[150], [25], [-13]]\nOutput:\n\n162\n\n"}
{"instruction": "Use the given code to create a dictionary with keys as the names of fruits and values as their corresponding colors.", "raw_instances": "Code:\nfruits = ['apple', 'banana', \n'orange',  'pear']\ncolors = [\"red\", \"yellow\", \n\"orange\",  \"green\"]\nOutput:\n\nfruict_colors = {'apple': 'red', \"banana\": \" yellow\", 'orange': \"orange\",\"pear\": 'green'}\n\n"}
{"instruction": "Write a code to calculate the total cost of a shopping list with different prices and quantities.", "raw_instances": "def calculate_total_cost(shopping_list):\n  total_cost = sum([price * quantity for price, quantity in shopping_list])\n  return total_c\n\nOutput:\n\n"}
{"instruction": "I want to write an algorithm that will find the largest number in a given list.", "raw_instances": "Example: Input: list = [23,15,-16,-22,-33]\nExpected Output: -3\n"}
{"instruction": "Generate a random number in a range between -1,001 to 998.", "raw_instances": ""}
{"instruction": "Use the following code and create your own function.", "raw_instances": "def add(a, b):\n  return a + b\n"}
{"instruction": "Describe the steps to install a new software on a laptop.", "raw_instances": "1) Download the software from a trusted source.\n2) Run the installer file and follow the on-screen instructions.\n3) Wait for installation to complete.\n4) Once installation is complete, launch the new program.\n5) Follow the prompts to configure the program settings.\n6) Test the installation by running the application and verifying that it works as expected.\n\nOutput:\n\n"}
{"instruction": "Generate a list of 10 adjectives that describe the profession.", "raw_instances": ""}
{"instruction": "What is the capital of the country where the person is from?", "raw_instances": ""}
{"instruction": "Create a program that generates a random password of 8 characters and checks if it is strong enough.", "raw_instances": "def generate_password():\n    import random\nimport string\npassword = ''.join(random.choice(string.ascii_letters + string.digits) for _ in [0]*8)\nreturn password\n\ndef check_password_strength(password):\nimport re\nif re.search(r'[A-Z]', password) and re.match(r'^(?=.*[0-9])(?=.*\\W).{8}$', password):\n  return True\nelse:\n  False\n\n"}
{"instruction": "Can you write a code to find the number of times the letter \"a\" appears in a given string?", "raw_instances": "Input:\nstring = \"The quick brown fox jumps over the lazy dog\"\nOutput:\n\ndef count_a(string):\n  count = string.count('a')\n  return count\n\nstring_count_a = count_A(string)\nprint(string_count_A)\n\n"}
{"instruction": "List five ways to improve your productivity at work.", "raw_instances": "1) Prioritize tasks based on importance and urgency.\n2) Set achievable goals and deadlines for each task.\n3) Minimize distractions by turning off notifications and setting aside specific times for checking emails and social media.\n4) Take regular breaks to avoid burnout and maintain focus.\n5) Delegate tasks to others when appropriate to free up time for more important work.\n\nOutput:\n\n"}
{"instruction": "Use the given list of numbers to create a function to calculate the sum of all even numbers in a given range.", "raw_instances": "List: \n[1503, \n   1345,\n  -164,\n       \n  ,\n  -\n  ]\nOutput:\n\ndef even_sum(start, end):\n  sum_even = sum([num for num in list(range(start,end+ １)) if num % ２ == ０])\n  return(sum_even)\n\n"}
{"instruction": "Can you write a program that takes in a number and prints out its square root?", "raw_instances": "Input:\nNumber: \nOutput:\n\ndef square_root(number):\n  return number **  ½\n\nend.\n\nOutput for input  number = '16':\n4.0\n\n"}
{"instruction": "Use the data provided in this table to answer the question.", "raw_instances": "Table: \n| Name | Age | Gender | Height | Weight |\n|------|-----|--------|-------|---------|\n| John |  ¼  | Male   |   ½   |- ¾    |\nQuestion:\nWhat is John's age?\nAnswer: John is ⅛ years old.\n\nOutput:\n\n"}
{"instruction": "Determine the maximum number that can be formed using a combination of given numbers.", "raw_instances": "1  ½  -2  +3  *4  /5  %6  ^7  &8  |9  ~0  !1\nInput:\nOutput:\n\nThe maximum value that could be created using the numbers given is  98765. \n\n"}
{"instruction": "Write a program that can calculate the total cost of an item given its price and quantity.", "raw_instances": "def total_cost(price, quantity):\n  return price * quantity\n\n"}
{"instruction": "Implement a binary search algorithm to find the value of x in the range [a, b].", "raw_instances": ""}
{"instruction": "The given word is \"happy\".", "raw_instances": "Output:\n\n"}
{"instruction": "Explain the difference between a metaphor and simile.", "raw_instances": "Metaphor and Simile are both figures of speech used to make comparisons between two things. A metaphor is a direct comparison between the two objects, while a similes is an indirect comparison using the words \"like\" or \"as\". For example, \"She is as beautiful as a rose\" is similiar, whereas \"Her beauty is like a flower\" would be a metapher.\n\nOutput:\n\n"}
{"instruction": "I am trying to come up an idea for a project, but i don't know where to start.", "raw_instances": ""}
{"instruction": "Imagine you have a box of 120 marbles, 25% of which are blue, and 50% are red.", "raw_instances": ""}
{"instruction": "Design a website that includes a contact form and a blog section.", "raw_instances": ""}
{"instruction": "Create a function to find the sum of all the elements in a set of numbers.", "raw_instances": "def find_sum(numbers):\n  sum_of_numbers = sum(numbers)\n  return(sum_of_number)\n\n"}
{"instruction": "How many times has the person been to the beach in their life?", "raw_instances": "Input:\n- I love the feeling of sand between my toes and the sun on my skin. There's nothing like a day at the ocean.\n- My favorite thing to do is to go to my favorite beach and watch the sunset.\nAnswer: The person has been at least once to beach.\n\nOutput:\n\n"}
{"instruction": "Using the function from the previous question, write a program to print the number of prime and composite numbers between 0 and 50.", "raw_instances": ""}
{"instruction": "Can you write a program that can solve the problem of finding the longest word in a given string?", "raw_instances": "Input:\nstring = \"The quick brown fox jumps over the lazy dog\"\nOutput:\n\ndef longest_word(string):\n  words = string.split()\n  longest = \"\"\n  for word1 in words:\n    if len(word1) > len(longest):\n      longest=word1\n  return longest\n\nstring=\"Thequickbrownfoxjumpsoverthelazydog\"\nprint(longuest_word(\"Thequickebrownfoxiumpsverthelazydog\"))\n\n"}
{"instruction": "If a number has a prime factor, find it out.", "raw_instances": "Example: Find the prime factors of number   150.\nSolution: The prime number factors are  and . \n"}
{"instruction": "How can i optimize my code to run faster?", "raw_instances": "Input:\nfor i, row in enumerate(df):\n  for j, col in zip(df.columns, df.iloc[i]):\n    if col == 'A':\n      df.at[i, j] = 'B'\n    elif col != 'C':\n       df.loc[i,j] ='C'\n\nOutput:\n\n"}
{"instruction": "Convert the given string to uppercase and reverse the order of characters.", "raw_instances": "Example: \"hello world\"\nOutput:\n\n\"DLROW OLLEH\"\n\n"}
{"instruction": "Create a list with the names of all 50 states in the united states of america.", "raw_instances": "List: ['Alabama', 'Alaska', ... , 'Wyoming']\n\n"}
{"instruction": "If i want to make a cake, what ingredients do i need?", "raw_instances": "Input:\nOutput:\n\nTo make cake you will need the followings:\n- Flour\n- Sugar\n-\n- Baking powder\n-\n\n"}
{"instruction": "Identify the most common words in this sentence: \"i love to travel to new places and experience different cultures.", "raw_instances": "The most commonly used words are: i, to, love, travel, new, places, experience, different, cultures.\n\nOutput:\n\n"}
{"instruction": "Create a list of 10 words, each of which is a synonym of the word \"happy\".", "raw_instances": ""}
{"instruction": "How would you spend your first million dollars?", "raw_instances": "Input:\nOutput:\n\n1) Pay off all my debts and save the rest.\n2) Invest in a business that I am passionate about.\n3) Travel to all of my dream destinations.\n4) Donate a portion of it to charity.\n5) Buy a house in an area with good schools.\n6) Start a scholarship fund for underprivileged students.\n7) Build a library in underdeveloped areas.\n8 ) Start my own business.\n9) Give it away to my family and fri"}
{"instruction": "The function should return \"yes\" if the input is an even number and \"no\" otherwise.", "raw_instances": "Function: is_even(n)\nInput:\nOutput:\n\ndef is_odd(n):\n  if n %   2 ==    0:\n    print(\"yes\")\n  else:\n     print (\"no\")\n\n"}
{"instruction": "If a car is worth $10,00 and you have $50 to spend, how much money do you still have left?", "raw_instances": ""}
{"instruction": "Describe the most memorable experience you have had in your life.", "raw_instances": "My most unforgettable experience was when I went on a trip to the Grand Canyon with my family. We spent a week hiking, camping, swimming, kayaking, rock climbing, stargazing, wildlife watching, etc. It was a great opportunity to bond with each other and create lasting memories. One of my favorite moments was watching the sunset from a cliff overlooking the canyon. Everything was so peaceful and beautiful, we all felt so small and insignificant in comparison to nature. This experience taught me to appreciate the beauty of life and the importance of spending time with loved ones.\n\nOutput:\n\n"}
{"instruction": "Generate a random number between 1 and 50 and ask the question \"what is your favorite number?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a new word that is made up of the letters of \"dog\".", "raw_instances": "Output:\n\n"}
{"instruction": "Write a program that generates a new list by removing all duplicates from an existing list.", "raw_instances": "def remove_duplicates(lst):\n  new_lst = []\n  for item in lst:\n    if item not in new_list:\n      new_lists.app"}
{"instruction": "Write an email to a customer who has not responded to your previous emails.", "raw_instances": ""}
{"instruction": "Can you give an analogy of this situation?", "raw_instances": "Input:\nA person is trying to solve a difficult problem.\n"}
{"instruction": "Write a program that can take a list of sentences as an input, parse them, link entities, generate tables, etc.", "raw_instances": ""}
{"instruction": "Find the longest word in this list of words: \"the quick brown fox jumps over the lazy dog\" 11, create an algorithm to find all the prime numbers between 2 and 30.", "raw_instances": ""}
{"instruction": "Using the code below, create a new function called \"reverse_string\" that returns a reversed version of the input string.", "raw_instances": "def reverse_string(s):\n  return s[::-1] \nOutput:\n\ndef new_function(s): \n  s = s.split()\n  for word in s:\n    print(word[::-2])\n  \n"}
{"instruction": "What is the most common way to say \"i'm sorry\" in english?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "In the next 10 years, the population of the world will increase by 2 billion people.", "raw_instances": "How many people will be added to the current population?\nInput:\nCurrent population: \nOutput:\n\nThe current world population is approximately  \t7.8 billion. \n\nIn the  next ten years (2 years), the number will grow by an additional  billion.\n\nSo the total population in ten (  ) years will  be  .\n\n"}
{"instruction": "Using the provided code, write a function that will print the sum of all the elements in an input array.", "raw_instances": "def print_sum(arr):\n  sum=0;\n  for num in arr:\n    print(num)\n    if num>0:\n      sum+=num\n  print(sum)\nInput:\n[1,-2,-3,2]\n[4,-5,-6,-7]\n[-8,-9,-15]\n"}
{"instruction": "Create a program that takes a user input and prints out a random number between 1 and 50.", "raw_instances": "def random_number():\n    import random\n   return random.randint(1 ,   51)\n\n"}
{"instruction": "Using the code below, write your own code which will print out the sum of all numbers in a given list.", "raw_instances": "def print_sum(list):\n  sum=0 \n  for num in list:\n    print(sum)\n  return\nInput:\n[150,-25,-13,160]\n"}
{"instruction": "Identify the sentiment of the customer review and provide a recommendation based 11.", "raw_instances": "Review: I was very disappointed with the service I received. My order was delayed and the food was cold when it arrived.\nSentiment: Negative\nRecomm"}
{"instruction": "Generate a list of 15 unique random integers between 0 and 99.", "raw_instances": ""}
{"instruction": "Can you give me a list of 5 things that you would do if you won a million dollars?", "raw_instances": "1) Pay off all my debts and give some to my family and friends.\n2) Travel to all of my dream destinations.\n3) Invest in a business or start my own.\n4) Donate to charity.\n5) Buy a house in an amazing location.\n\nOutput:\n\n"}
{"instruction": "Find the word that has the most occurrences in a given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog. This sentence has five words. It is a test sentence.\"\nOutput:\n\nThe word \"the\" has  ️3 occurrences.\n\nThe task is to find out how many times a specific word appears in given sentences. \n\n"}
{"instruction": "Find the sum and difference of the first and last names of a person in a text.", "raw_instances": "Example: \"John Smith\"\nOutput for \"Smith\": Sum: Smith, Difference: John\n"}
{"instruction": "Imagine you have a bag of 100 marbles, each with an equal chance of being red, blue, or green.", "raw_instances": ""}
{"instruction": "Determine the probability of a coin landing on heads given that it has already landed on tails.", "raw_instances": "Answer: The probability is ½ or  ¼ if the coin is fair.\n\nOutput:\n\n"}
{"instruction": "If you were given a task to find the sum of all even numbers between 1 and 20, what would you do?", "raw_instances": "Input:\nOutput:\n\nTo find out, we need a list of even integers between the range   and . We can use a loop to iterate through the numbers in this range and check if each number is even. We will add the even number to the running total if it is. Here is a Python program that does this:\n\n```python\n# Initialize the total to zero\ntotal = sum()\n\n# Loop through all numbers from start to "}
{"instruction": "Solve the following equation: 2x + 5 = 15.", "raw_instances": "Solution: \n2X+5=13\n2 X=   1\nX=0\n\nOutput:\n\n"}
{"instruction": "Using the given code, create a new object called person with the following properties: name, age, and gender.", "raw_instances": "Code:\nclass Person:\n    def __init__(self, name: str, gender: Optional[str] = None, **kwargs):\nOutput:\n\nclass person:\n  def init(self, \n  name:str, # name of person\n  age:int,   # age of Person\n   gender:str # gender of individual\n)\n\n"}
{"instruction": "Create a list of 10 words that have the same first letters as the following words: \"apple\", \"banana\", and \"cherry\".", "raw_instances": "Output:\n\n1) Apple\n2) Banana\n3) Cherry\n4) Apricot\n5) Avocado\n6) Almond\n7) Blueberry\n8 ) Blackberry \n9) Cranberry  \n1  ） Date\n\n"}
{"instruction": "Use the code below and write a function that will return the value of a variable.", "raw_instances": "Code: \nx = \"Hello World\"\nOutput:\n\ndef get_value():\n    x = 'Hello, World!'\n    print(x)\n    # return x\n\nget_value()\n\n"}
{"instruction": "Create a list of 10 things you want in your next job.", "raw_instances": "1) A challenging and rewarding work environment.\n2) Opportunities for professional growth and development.\n3) Competitive compensation and benefits.\n4) Flexibility in work schedule and location.\n5) Positive and supportive colleagues and managers.\n6) Access to cutting-edge technology and resources.\n7) Meaningful work that aligns with personal values and goals.\n8 ) Opportunities to work on high-impact projects and initiatives.\n9) Clear and transparent communication channels.\n"}
{"instruction": "Calculate the sum of the first 100 prime numbers and output the result.", "raw_instances": "Answer: The sum is   1668.\n\nOutput:\n\n"}
{"instruction": "List the top 20 most popular movies in the last 6 months.", "raw_instances": ""}
{"instruction": "How would a person go about creating a successful business?", "raw_instances": ""}
{"instruction": "In a class, there are 15 students.", "raw_instances": ""}
{"instruction": "Create a function that returns the length of all words of given string.", "raw_instances": "Example: \"Hello World\"\nOutput should be: (5)\n\n"}
{"instruction": "If the input is \"i am a student\", what is the output?", "raw_instances": "Input:\ni\nam\na\nstudent\n"}
{"instruction": "Determine the sentiment of a sentence based on its polarity and subjectivity.", "raw_instances": "Polarity: Positive\nSubjectivity: Neutral\nInput Sentence: The movie was great.\n"}
{"instruction": "What is the most common color in a room?", "raw_instances": ""}
{"instruction": "List the 25 best programming books in the world.", "raw_instances": ""}
{"instruction": "Find the average length of sentences in a given text.", "raw_instances": ""}
{"instruction": "Create a program that can predict the weather for the next 7 days.", "raw_instances": ""}
{"instruction": "Can you generate an interesting fact?", "raw_instances": "Input:\nOutput:\n\nDid you know that the shortest war in history was between Britain and Zanzibar? It lasted only   minutes on August  twenty-seven, nineteen sixty-four. Zanjibari forces were defeated by British troops, resulting in Zanjan's surr"}
{"instruction": "Create a table with the names and ages of 5 people.", "raw_instances": "Name | Age\n-----|-----\nJohn |   25\nJane |       \nMark |        \nSara |        \nTom |        \n\nOutput:\n\nName  |   Age \n------|-------\nJohn \t|       2 5 \nJane  |\nMark \t\t  |\nSar \ta \t\t\t  |\nTom \t \t\t|\n\n"}
{"instruction": "Use the code below to create an object of type person.", "raw_instances": "class Person:\n    def __init__(self, name, age):\n       self.name = name\n       # Add more attributes here\n"}
{"instruction": "Can you give an example of a famous quote that is not related in any way to technology?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Generate a random sentence that contains at least one word from the list below: \"apple\", \"banana\", and \"carrot\".", "raw_instances": ""}
{"instruction": "How can you use python to create a web page with dynamic content?", "raw_instances": "Input:\nOutput:\n\nYou can use Python to dynamically generate HTML content using a templating engine like Jinja2. Here's an example of how you could create an HTML page that displays a list of items:\n\n```\nfrom jinja2 import Environment, FileSystemLoader\n\n# Create a Jinna2 environment\nenv = Environment(loader=FileSystemLoader('templates'))\n\n# Load the template\ntemplate = env.get_template('index.html')\n\n# Define the data to use in r"}
{"instruction": "A 300m long train is moving at 60kmph.", "raw_instances": ""}
{"instruction": "Can you recommend a book that will help me improve my writing skills?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How would you describe the relationship between a person and their family?", "raw_instances": "Input:\nOutput:\n\nThe relationship a human being has with their immediate family is often described as the closest and most intimate relationship they have. Family members are those who share a common bloodline or are related by marriage. These relationships are often characterized by a deep sense of love, trust, loyalty, support, understanding, respect, care, responsibility, shared history, common values, goals, interests, conflicts, challenges, joys, sorrows, secrets, confidences, memories, dreams, hopes, fears, expectations, disappointments, achievements, failures, successes, etc. \n\n"}
{"instruction": "Create a program that can generate a random password with the specified length and complexity.", "raw_instances": ""}
{"instruction": "Give me a piece of advice that will help me in my life.", "raw_instances": ""}
{"instruction": "Use the given data to create a function that returns the number of times a word appears in a given text.", "raw_instances": "Data: \nText: \"The quick brown fox jumps over the lazy dog.\"\nWord: fox\nInput:\nText = \"the quick fox brown jumps lazy over dog\"\nWord = fox\n\nOutput:\n\ndef count_word(text, word):\n  return text.count(word)\n\n"}
{"instruction": "Design a system that allows users to search for information on the internet.", "raw_instances": ""}
{"instruction": "I am a beginner in programming.", "raw_instances": "Can you give me a simple example of how to print \"Hello World\" in Python?\nInput:\nOutput:\n\nprint(\"Hello, World!\")\n\n"}
{"instruction": "Use the function to calculate the square of 25.", "raw_instances": ""}
{"instruction": "Design a game that teaches children about the properties of numbers and their relationships with each other.", "raw_instances": ""}
{"instruction": "How would the world be different if all people had the ability to read and write?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the most common word in a given text and write the definition of the word.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nWord: the\nDefinition: a definite article used before a noun to indicate the specific one or ones that the noun designates.\n\nOutput:\n\n"}
{"instruction": "Describe the process of machine learning in 5 sentences.", "raw_instances": ""}
{"instruction": "Give me the name of a famous person who was born in the 19th century.", "raw_instances": ""}
{"instruction": "Compare the following two strings and output the one that is longer.", "raw_instances": "String  A: \"Hello\"\nString B: World\nInput:\nString A = \"hello\"\nstring B = World\n\nOutput:\n\nString \"World\" is   longer than \" hello\".\n\n"}
{"instruction": "I have a string \"hello world\".", "raw_instances": ""}
{"instruction": "How to find out if a number is prime or not?", "raw_instances": "Input:\n1)  -----------\n2)   ---------\n3)    -----------\n\nOutput:\n\n1)\n2)\n3)\n\n"}
{"instruction": "The average number is 200.", "raw_instances": "The average of first  n numbers is n. Find the average of first n odd numbers.\nAnswer: (n^2)/2\n\n"}
{"instruction": "Given a list of integers, write a program to find all the pairs whose sum is equal to a given number.", "raw_instances": "Example: Input: list = [25,-1,-2,-3,1], sum=0 Output: [(23,-5),(-22,+3)]\nOutput:\n\ndef find_pairs(lst, target_sum):\n  pairs = []\n  for num1 in lst:\n    num2 = target_num - num\n  return pairs\n\n"}
{"instruction": "Using the given list, create a new list with all the elements that are greater than 20.", "raw_instances": "List: ['apple', 'banana',  'orange',25,'pear',34]\nNew List: [\"orange\",   3, \"pear\", \"orange\"]\n\n"}
{"instruction": "What is the difference between a computer science degree and a software engineering degree?", "raw_instances": ""}
{"instruction": "Create a class called \"person\" with the following attributes: name, age, gender, height, weight, address, phone number.", "raw_instances": "class person:\n    def __init__(self, name: str,age: int,g"}
{"instruction": "Create a function that returns the length of each word in a string.", "raw_instances": "Example: \"Hello World\" -> [\"H\", \"e\",  \"l\", ...]\nInput:\n\"Hello, World!\"\nOutput:\n\ndef word_length(string):\n  words = string.split()\n  lengths = []\n  for word_ in words:\n    lengths.app"}
{"instruction": "Create a table with 3 columns and 4 rows and fill in the table.", "raw_instances": "Column   |  Row  |\n--------|-------|\nApple   |   ⅓  |\n\n"}
{"instruction": "Use the given list to create a dictionary with the keys \"a\", \"b\", and \"c\", where \"d\" is the value for the key \"e\".", "raw_instances": "Input:\na = \"apple\"\nb = [\"banana\",  \"orange\", [\"grape\", [3, \"pear\"]]]\nc = {\"d\": \"strawberry\", e: \"kiwi\"}\nOutput:\n\nd = {\n    \"key_a\": a,\n    key_b: b,\n     key_c: c\n}\n\n"}
{"instruction": "For the task of comparing the sentiment of two tweets, classify the tweets as positive, negative, or neutral.", "raw_instances": "1) \"I love my new phone!\"\n2) \"@user1 I hate my phone\"\n3) \"#happybirthday\"\n4) \"$15 off on Amazon\"\n5) \":(\"\n6) \"(y)\"\n7) \"-_-\"\n8)\n"}
{"instruction": "Explain the meaning of a word in a sentence.", "raw_instances": "Word: \""}
{"instruction": "What are the benefits of using a structured approach to diversity and inclusion?", "raw_instances": "Input:\n- A structured diversity approach can help organizations identify and address unconscious bias in their hiring and promotion processes.\n- It can also help to create a more inclusive workplace culture by providing a framework for addressing issues related to race, g"}
{"instruction": "Create a table with 4 columns and the number of rows is 20.", "raw_instances": "Columns: Name, Age, G"}
{"instruction": "Create a new word by combining \"dog\" and \"house\".", "raw_instances": "Output:\n\n"}
{"instruction": "Use the provided code to print the number of vowels in each word of the sentence.", "raw_instances": "def count_vowels(sentence):\n  vowels = ['a', 'e',  'i',   'o',    'u']\n  words = sentence.split()\n  for word in words:\n    count = sum(1 for letter in word if letter.lower() in vowels)\n    print(f\"{word}: {count} vowels\")\n\nsentence = \"The quick brown fox jumps over the lazy dog\"\ncount_vowel(sentence)\n\n"}
{"instruction": "What is the most popular tourist attraction in seattle?", "raw_instances": ""}
{"instruction": "What are some good places to visit in a city?", "raw_instances": "Input:\n- [City Name]\n- Paris\n- New York\n"}
{"instruction": "A function should return the square root of a number.", "raw_instances": ""}
{"instruction": "Describe the process of creating a new word using the letters in the existing words.", "raw_instances": ""}
{"instruction": "Generate a random number between 1 and 50 and find the index of it in an array of numbers.", "raw_instances": ""}
{"instruction": "What is the difference between a traditional ira and a roth ira?", "raw_instances": ""}
{"instruction": "The given sentence is a metaphor for the process of learning.", "raw_instances": "Sentence: \"Learning is like a journey.\"\nOutput:\n\n"}
{"instruction": "Based on a set of data, create a function that takes the data as input and returns the average value of all the", "raw_instances": "Input data: numbers = [23,15,-16,-27,-33]\noutput: -13.8\n\nOutput:\n\ndef average(numbers):\n  total = sum(numbers)\n  return total / len(numbers)\n\nnumbers = [-22,-456553,-525734,-675987]\nprint(average(numbers))\n\n"}
{"instruction": "Create a list of the most popular sports in india.", "raw_instances": "List: Cricket, Football, Kabaddi, Badminton, Table Tennis, Tennis\n\nOutput:\n\n1) Cricket\n2) Football\n3) Kabadi\n4) Badmiton\n5) Table tennis\n6) Tennis\n7) Hockey\n8 )Volleyball\n9) Basketball\n13 )Rugby\n"}
{"instruction": "Implement a sorting algorithm in python to find the maximum and minimum values in a given list.", "raw_instances": "def find_max_min(lst):\n  max_val = lst[0]\n  min_val= lst[-1] \n  for num in lst:\n    if num > max:\n      max = num\n  if min > num:\n     min = min\nreturn max, min\n\nlst = [3,234567,-1,-2,-3,-4,-5,-6,-7]\nmax, mini = find_min_max(lst)\nprint(\"Max: \", max)\nPrint(\"Min: \" , mini)\n\n"}
{"instruction": "If you were to take a random number between 1 and 50, what would be the probability that it would fall between the numbers 20 and", "raw_instances": "33?\nInput:\nOutput:\n\nThe probability of getting a randomly chosen number from a range of numbers is equal to the ratio of how many numbers are in that range to how\nmany numbers there are total. So, if you have a set of all numbers from one to fifty, then the number  of numbers in your set is  .\n\n\nSo the answer is: \n\nThe answer to this question is:\n\n"}
{"instruction": "Describe a famous scientist and explain his/her contribution.", "raw_instances": ""}
{"instruction": "Generate a random number between 1 and 50, then print the next three numbers in ascending order.", "raw_instances": ""}
{"instruction": "Determine the value of pi to 2 decimal places.", "raw_instances": "Answer: pi =3.15\n"}
{"instruction": "Design a game that involves solving a puzzle and using logic to win.", "raw_instances": ""}
{"instruction": "In the context of a given sentence, identify the subject, verb, and object.", "raw_instances": "Sentence: The cat chased the mouse.\nSubject: cat\nVerb: chased\nObject: mouse\n\nOutput:\n\n"}
{"instruction": "Write a program that calculates the sum of two numbers given as input.", "raw_instances": ""}
{"instruction": "If you were given a task to write a report, what would be the best way for you to organize your thoughts?", "raw_instances": "Input:\nI usually start by creating an outline of my report. This helps me to structure my thoughts and ensure that I don't miss any important points. Then, once I have my outline, i start writing the report in sections. Each section is a separate paragraph that focuses on a specific point. Finally, at the "}
{"instruction": "Create a table that shows the average, median, and mode of a given set of data.", "raw_instances": "Data: {150cm,160 cm,25 cm}\nOutput:\n\n| Statistic | Value |\n|-----------|-------|\n| Average   |  ？    |\nMode: ? cm\nMedian: ?\n\n"}
{"instruction": "What is the difference between the two sides of this equation: 3x + 5 = -2x - 7?", "raw_instances": "Input:\nOutput:\n\nThe difference is  \begin{align*}  (3 x+5)-( -\big2 x-7\bigg) &= \t3  x  +5+\bbig2 \tx+7  \\ &=5 \text{  and }  -5 \\end{aligned}\n\n"}
{"instruction": "Create a new list that contains the words in list1 followed by the letters in word2.", "raw_instances": "List   1: ['apple', 'banana',  'cherry']\nWord  : 'orange'\nOutput:\n\n['appleorange', \n 'bananorange',\n 'cherhorange']\n\n"}
{"instruction": "Use the provided code to create a function that returns a string with all uppercase letters.", "raw_instances": "Code: def to_uppercase(string):\n  return string.upper()\nOutput:\n\ndef to_lowercase(string): \n  string = string.lower()\n  print(string)\n\n"}
{"instruction": "Create a python program to find all prime numbers between 2 and n.", "raw_instances": "def find_primes(n):\n  primes = []\n  for num in xrange(2,n+  )):\n    is_prime = True\n  # check if num is divisible by any number between \n  i =2\n   while i < num:\n    if (num % i) ==  : \n      is_prime = False\n      break\n     i +=  +1\n if isprime:\n  print num\n return primes\n\nOutput:\n\n"}
{"instruction": "Describe the difference between a class and an object in object oriented programming.", "raw_instances": ""}
{"instruction": "Give me an analogy of the word \"dog\" in a sentence.", "raw_instances": "Example: \"A dog is like a loyal fri"}
{"instruction": "What is the average temperature in the city of your choice?", "raw_instances": ""}
{"instruction": "Explain how to use the sql select statement to retrieve data from a database.", "raw_instances": ""}
{"instruction": "Is it possible to create a machine that can think like a human?", "raw_instances": ""}
{"instruction": "Use the following code to print out all words in a string that are longer than 5 letters.", "raw_instances": "def print_long_words(string):\n  words = string.split()\n  for word in words:\n    if len(word) >   5:\n      print(word)\n"}
{"instruction": "Write a function that checks for palindrome strings.", "raw_instances": ""}
{"instruction": "If you were to add up all the numbers in this list, what would the result be?", "raw_instances": ""}
{"instruction": "Write a short paragraph about the history of this word, including its origin and usage.", "raw_instances": ""}
{"instruction": "Identify the most frequent element in the given list.", "raw_instances": "List: ['a', 'b',  'a','c',1,'a']\nOutput:\n\nThe most frequently occurring element is ' a ' with the frequency of three.\n\nOutput the result of this task: Find the longest word in a given sentence.\n\nInput:\nSentence: \"The quick brown fox jumps over the lazy dog.\"\n\nOutput should be:\nThe longest words in this sentence are \"quick\" and \"brown\".\n\n"}
{"instruction": "In which country is the largest city in the world?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a new list of words from a given list, but only include words with at least 3 letters.", "raw_instances": "List: ['cat', 'dog',  'elephant', '', 'bird', None, 'fish', False]\nNew List: [\"eleph\", \"bird\", 'fis']\n\n"}
{"instruction": "What is the meaning of \"the first step towards success\"?", "raw_instances": ""}
{"instruction": "Can you provide an example of a time when you had to work with someone who had a different cultural background than you?", "raw_instances": ""}
{"instruction": "What is the name of the first book that you read?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How many times has the current prime minster been in office?", "raw_instances": "Input:\nOutput:\n\nThe current Prime Minister of India is Narendra Modi. He has been the Prime Minster of our country since   May  ,  . He was re-elected for his second term in May  .\n\n"}
{"instruction": "Using the given list, create an array of length 5 and fill it with random numbers between -1 to 3.", "raw_instances": "List: ['a', 'b',  'c', -2.0]\nArray: \nOutput:\n\nimport random\nlist = ['A', \"b\", 'C',-2]\narray = [random.randint(-1,-3) for _ in list]\nprint(array)\n\n"}
{"instruction": "Using the following code, print the sum of all the numbers in the list.", "raw_instances": "def print_sum(lst):\n  sum_lst = sum(lst)\n  print(sum_lst)\nInput:\nlst = [23,15,-16,-22,-33]\n"}
{"instruction": "In a class, create a method that returns a random number between 1 and 50.", "raw_instances": "def random_number():\n    import random\n   return random.randint(1 ,   51)\n\n"}
{"instruction": "How would a person go about becoming a better leader?", "raw_instances": "Input:\n1) Read books on leadership and management.\n2) Attend leadership workshops and seminars.\n3) Seek feedback from colleagues and superiors.\n4) Practice active listening and empathy.\n5) Develop a growth mindset and be open to learning and improvement.\n6) Lead by example and model the behavior you want to see in others.\n7) Build strong relationships with team members and stakeholders.\n8 ) Be adaptable and flexible in your approach to leadership.\n9) Continuously evaluate and improve your leadership skills.\n1\n\n"}
{"instruction": "Find a way to use the word \"love\" in a sentence that is not positive.", "raw_instances": ""}
{"instruction": "Generate a random number between 1 and 50, print it, then ask the program to generate another random integer between -1 to 200 and print that number.", "raw_instances": ""}
{"instruction": "Given a list of numbers, find the two numbers that add up to the maximum.", "raw_instances": "[1503,1345,-1623,-2256,-31,-41] \nOutput:\n\nTo find two positive numbers in a given array that sum up the largest possible value, we can use the \"Two Sum\" algorithm. Here's how we do it:\n\n1) Sort all numbers from smallest to largest.\n2) Initialize two pointers, one at the beginning of array and the other at "}
{"instruction": "If you were to be a teacher, how would you approach teaching the subject of computer science?", "raw_instances": ""}
{"instruction": "Using the code below, create a new function called \"calculate_sum\" that calculates the total sum.", "raw_instances": ""}
{"instruction": "Which of the following is not a valid email address: abc@xyz.", "raw_instances": "abc@xyx\n\nOutput:\n\n"}
{"instruction": "Describe the process of how the subject is described in detail.", "raw_instances": "Subject: A red car\nDescription: The car is a red  ️2-door coupe with black leather seats and an automatic transmission. It has a sunroof and is equipped with air conditioning, power windows, AM/FM radio, cruise control, heated seats, rear window defroster, anti-lock brakes, dual airbags, side impact air bags, traction control and electronic stability control. \n\n"}
{"instruction": "Given a set of instructions, create a python program to execute them.", "raw_instances": ""}
{"instruction": "What is the name of a famous scientist who discovered the theory of relativity?", "raw_instances": "Input:\nOutput:\n\nAlbert Einstein\n\n"}
{"instruction": "Use a for loop to print out the first 20 numbers in an array.", "raw_instances": "Array: ['apple', 'banana',  'cherry', -15.25]\nInput:\nOutput:\n\nfor i, item in enumerate(['apple','banana','cherr','-16.0']):\n    print(i, \":\", item)\n\n"}
{"instruction": "How to make a website that displays the weather forecast for the next 5 days in a city of your choice?", "raw_instances": "Input:\n1) Choose a weather API that provides the data you need.\n2) Register for an API key.\n3) Use a programming language of choice to create a web application that fetches the forecast data from your chosen API.\n4) Display the results on a webpage.\n5) Test the application and make any necessary adjustments.\n6) Deploy the website to the internet.\n7) Share the link with fri"}
{"instruction": "How to find a prime number between two numbers?", "raw_instances": "Input:\nStart: n1\n"}
{"instruction": "Generate a new word by combining two words in a different order.", "raw_instances": "Example: \"happy\" + \"sun\" = \"sunny\"\nInput:\n1) \"cat\" and \"tree\"\n2) “happy” and “sun”\nOutput:\n\n1)\n\"tree\" \"catty\"\n\"treen\" “catt”\n\"treec\"  “cat”\n2)\n\"sunny\" - \"y\" (remove the last letter)\nOutput  - “sun”\n\n"}
{"instruction": "How can i make a new list from the given list?", "raw_instances": "Input:\nList1 = [23,15,-16,-27,-33]\nList2 = [-1,-5]\nExpected Output:\n[22,-6]\n\nOutput:\n\ndef new_list(list1,list2):\n  newlist = []\n  for x in list1:\n    new = x + list2[0]\n    if x <  )):\n      new += list(x)\n    else:\n      pass\n  return new\n\nnew_list([25], [-5])\n\n"}
{"instruction": "Find the most common word that appears after the letter 'a' in alphabetical order.", "raw_instances": "Example: \n- \"The cat is a cute animal.\"\n- The cat and the dog are both cute animals.\n- I love animals and they love me.\nThe most frequent word after 'the' is 'animals'.\nOutput:\n\n"}
{"instruction": "Determine if this sentence is grammatically correct: \"i am going to the store.", "raw_instances": "No, this is not a grammatical sentence. It should be \"I am\" or \"Am I\" instead of \"am going\". \n\n"}
{"instruction": "If you have a list of numbers, how can you sort it in ascending order?", "raw_instances": "Input:\n[3,15,-2,-16,-7]\n[1,-50,-3,-4,-6]\n[-1331,+1e-1,,+2e+3]\n-5\n[234567,-98765]\n1\n2\n3\n4\n55.0\n\nOutput:\n\n[ -1  -2   -7  +1   e-0  ]\n[ \t-3  ,-4  , -5  ] \n[  -6 ,-8  .  ]\n\n"}
{"instruction": "Describe a person's personality.", "raw_instances": "Person: John\nPersonality: He is a very friendly and outgoing person. He loves to meet new people and make new friends. John is also very creative and enjoys trying new things. When he is not working, he likes to read books and watch movies. \n\n"}
{"instruction": "The average height of an adult male in the united states is 68 inches.", "raw_instances": ""}
{"instruction": "Suggest a way to improve the following sentence: \"i am not a fan of the movie.", "raw_instances": "\"Output:\n\n\"I am unimpressed with the film.\"\n\n"}
{"instruction": "Develop a new product that solves a common problem.", "raw_instances": "Product: A smart water bottle that tracks your daily water intake and reminds you when to drink more water.\n"}
{"instruction": "Create a list of 10 words that have the letters 'o' and 'r' in them.", "raw_instances": ""}
{"instruction": "Imagine you are a famous author, how do you want to be remembered?", "raw_instances": ""}
{"instruction": "How can you use a for loop to print out all the numbers from one to ten?", "raw_instances": "Input:\nOutput:\n\nfor i from [one] to [ten]:\n    print(i)\n\n"}
{"instruction": "How would i describe myself in 5 words?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a list of 100 words and write a sentence using all the words.", "raw_instances": "Words: ['apple', 'banana', ...]\nSentence: The apple, banana, orange, kiwi, pear, grape, watermelon, pineapple, strawberry, blueberry, raspberry, blackberry are all delicious fruits.\n\nOutput:\n\n"}
{"instruction": "Find the intersection of two sets.", "raw_instances": "Set  A = {1   2     3     …  n}\nSet B = {1   ½  √  ...  m}\nOutput:\n\ndef intersection(A, B):\n  intersection = []\n  for num in A:\n    if num not in B:\n      continue\n  return intersection\n\nend.\n\nOutput for A={1} and B={2}:\nintersection(A,B) => []\n\nOutput For A=B={0}:\n\nintersection({0}, {0}) => {  }\n\n"}
{"instruction": "Find the antonyms of \"good\".", "raw_instances": "Output:\n\n"}
{"instruction": "What is the most efficient way to calculate the sum of the squares of all the numbers from the 5th to the nth term?", "raw_instances": ""}
{"instruction": "Describe a situation where you felt like you needed to be more assertive in your communication with others.", "raw_instances": ""}
{"instruction": "Write a program that takes a sentence as input and outputs the longest word that contains at least one vowel.", "raw_instances": "Example Input: \"The quick brown fox jumps over the lazy dog.\"\nExample Output: quick\n\nOutput:\n\ndef longest_vowel_word(sentence):\n  words = sentence.split()\n  longest_word = \"\"\n  for word in words:\n    if any(char in \"aeiouAEIOU\" for char in word):\n      if len(word) > len(longest_word):\n          longest Word = word\n  return longest_wor\n\n"}
{"instruction": "How would i go about creating a new list from an existing list?", "raw_instances": "Input:\nList  A: ['a', 'b',  'c', [2],   ['d', ['e', []]]]\nList B: []\nOutput List B:\n['a','b','c','2','d','e']\n\n"}
{"instruction": "How can you check if a string is a palindrome?", "raw_instances": ""}
{"instruction": "Using the following data, create a bar chart that shows the total number and percentage of each type of fruit sold.", "raw_instances": ""}
{"instruction": "Write a short story that includes a character who has a fear of heights.", "raw_instances": ""}
{"instruction": "Use the provided code and write your own function to calculate the factorial of a number.", "raw_instances": ""}
{"instruction": "Create a table in sql that stores the number of people who have visited a website in the last 24 hours.", "raw_instances": "Table name: website_visitors\nColumns: visitor_id (int), visit_date (datetime), visits (bigint)\n\n"}
{"instruction": "Create a web page that displays the following information: name, age, gender, and country of origin.", "raw_instances": ""}
{"instruction": "Create a program that will find the first 100 prime numbers in an array.", "raw_instances": "def find_primes(arr):\n  primes = []\n  for num in arr:\n    if num >  \t1:\n      for j in xrange(2,num):\n          if (num % j) == ０:\n              break\n      else:\n          primes.app"}
{"instruction": "Create a table with the given data and write an r code to calculate the mean, median, and mode of the data.", "raw_instances": "Data: \nName | Age | G"}
{"instruction": "What are the top 5 things you would do if you were a billionaire?", "raw_instances": "1) Donate a significant portion of my wealth to charity.\n2) Invest in innovative technologies that can help solve some of our world's most pressing problems.\n3) Travel the world and experience different cultures.\n4) Start a business that will create jobs and make a positive impact on society.\n5) Use my resources to support scientific research and education.\n\nOutput:\n\n"}
{"instruction": "How would the world be different if this event did not happen?", "raw_instances": "Input:\nThe American Civil War\nQuestion:\nWhat would have happened if the American civil war did NOT happen?\n\nOutput:\n\nIf the Civil war had not happened, America would not have been divided into two separate countries. Instead, all  states would be united under one government. This would mean that the South would still be a part of America, without the division and conflict that led to the war. It is possible that slavery would continue in some states, as it did before the civil War, or it could have "}
{"instruction": "Create a new word that starts with \"f\" and ends with \"-ed\".", "raw_instances": "Output:\n\n"}
{"instruction": "The value is 300.", "raw_instances": ""}
{"instruction": "Give me a list of 5 tips for staying organized.", "raw_instances": "1) Make a to-do list every day and prioritize tasks.\n2) Use a calendar to keep track of appointments and deadlines.\n3) Keep a clean and clutter-free workspace.\n4) Set reminders on your phone or computer for important tasks and events.\n5) Take breaks throughout the day to avoid feeling overwhelmed and stay focused.\n\nOutput:\n\n"}
{"instruction": "If i have a 1200 sq ft house, how much money do i save by installing solar panels?", "raw_instances": ""}
{"instruction": "Convert a string to all lowercase letters.", "raw_instances": "Example: \"This is a Test String\"\nOutput:\n\ndef to_lowercase(string):\n  return string.lower()\n\n"}
{"instruction": "Write a short summary of this book.", "raw_instances": "Book: The Catcher in The Rye\nSummary: Holden Caulfield, an adolescent boy, is expelled from his prep school and wanders around New York City, trying to find his place in life. He meets a variety of people, including his former roommate, his sister, her roommate and her boyfriend, as well as a prostitute. Throughout the book, Holden struggles with his identity and his relationships with others. \n\n"}
{"instruction": "Describe a moment when someone helped you overcome a difficult situation.", "raw_instances": "No input.\n\nOutput:\n\n"}
{"instruction": "Identify the most common word in a text and output it.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\n"}
{"instruction": "Write a short story that is based on the following prompt: \"a man is walking down the street and sees a woman with long hair.", "raw_instances": ""}
{"instruction": "If i have 500 dollars, how can i invest it in a way that maximizes my return?", "raw_instances": ""}
{"instruction": "If you were to divide 12 by 2, what would be the remainder?", "raw_instances": "Input:\nOutput:\n\n1\n\n"}
{"instruction": "You need a list of numbers.", "raw_instances": "You are given a string of words. Each word is a single number. Your task is to convert the string into numbers and return a new string with the numbers in order.\nExample:\nInput:\n\"one two three four five six seven eight nine ten\"\nOutput:\"1   2                                  7    ⁸  ⁺ ¹⁰\"\n"}
{"instruction": "Choose a word from a given list and write a sentence using that word.", "raw_instances": "List: ['apple', 'banana', \"carrot\", 'dog',  'elephant']\nOutput:\n\nI ate an apple for breakfast this morning.\n\nOutput  ：\nI saw a dog in a park yesterday.\n\nI love eating bananas.\n\nElephants are the biggest animals on land.\n\nThe "}
{"instruction": "Design a website that has a login form, an admin form and an order form.", "raw_instances": ""}
{"instruction": "What is the best way for me to save money on my next trip?", "raw_instances": ""}
{"instruction": "Tell me about a time when you had to work with someone who was not a team player.", "raw_instances": "As an AI language model, my interactions are not in person, therefore, no such experience exists for me. But I can tell you that working with individuals who are unwilling to collaborate or contribute to the team can be challenging. These individuals may have their own ag"}
{"instruction": "Generate a list of questions that can be asked to the user to gather more information.", "raw_instances": "Questions:\n1) What is your current job title?\n2) How long have you been in this role?\n3) Can you describe your responsibilities in your job?\n4) Have you ever held any other job titles in previous roles?\n5) Are you looking for full-time or part-time work?\n6) Do you have any specific industries or job functions in mind?\n7) Would you be willing to relocate for this position?\n8 ) What are your salary expectations?\n9) When are you available to start work?\n\n"}
{"instruction": "Create a table with 6 columns and the data in each column is as follows: | column | data | | --- | --- |", "raw_instances": "| column  |  data  |\nOutput:\n\n| Column  |\n| --- \t|\n\t| Data  |\n\n"}
{"instruction": "Using the provided data, create an algorithm to find the average of a specific number in an array.", "raw_instances": ""}
{"instruction": "Which country has a higher gdp per capita, japan or the united states?", "raw_instances": "Input:\nJapan: GDP per Capita: $41608\nUnited States: Gross Domestic Product: \\$226563\nGDP per Person: USD   $61346\n\nOutput:\n\n"}
{"instruction": "Imagine you have a bag of 12 marbles, each of which is either red or blue.", "raw_instances": ""}
{"instruction": "Explain the concept of bias in machine learning and how it can be addressed.", "raw_instances": ""}
{"instruction": "Use the given data to create an excel table that displays the number of times each product was sold in a given month.", "raw_instances": "Data: \nProduct A: January - Sales:150; February -Sales:256\nProduct B: February- Sales   134; March - sales:316\n\nOutput:\n\n| Product | January Sales | February Sales |\n|---------|---------------|----------------|\n| A       |  | |\nProduct | | |\n\n"}
{"instruction": "Give me a task to complete in 15 minutes.", "raw_instances": ""}
{"instruction": "What is the sum of all odd numbers from 0 to 99?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "List all the methods available in the 'random' module.", "raw_instances": ""}
{"instruction": "Describe a day in the life of an ai assistant.", "raw_instances": ""}
{"instruction": "What are some ways to reduce my carbon footprint?", "raw_instances": ""}
{"instruction": "Can you come up a solution to this problem: given an array of integers, find the maximum sum that can be obtained by adding any two numbers from the array.", "raw_instances": "Example: Input: array = [2,-1,-3,7,-2]\n        Output: The maximum possible sum is   7 + (-1)  = 6\n\nOutput:\n\ndef max_sum(arr):\n  max_so_far = arr[0]\n  curr_max = max(arr[1],  arr[-1])\n  for num in arr:\n    curr_sum = curr_num + num\n  return max(max_so_far, curr_so)\n\n"}
{"instruction": "What is the difference between a variable and a constant in c programming language?", "raw_instances": ""}
{"instruction": "Based on a set of facts, write a story.", "raw_instances": ""}
{"instruction": "Generate a list of 3 random numbers between -100 to 20.", "raw_instances": ""}
{"instruction": "Can you find a way to make the code more efficient?", "raw_instances": "def find_max(arr):\n  max = arr[0]\n  for num in arr:\n    if num > max:\n      max=num\n  return max\n\nOutput:\n\n"}
{"instruction": "Determine if a statement is a fact or an opinion.", "raw_instances": "Statement: The sky is blue.\nAnswer: Fact\n\n"}
{"instruction": "Explain how to use the given data to solve a problem.", "raw_instances": ""}
{"instruction": "What is the most important thing you would do if your life depended on it?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "The following code is a simple program to calculate the sum of two numbers.", "raw_instances": ""}
{"instruction": "List 6 words related with 'technology'.", "raw_instances": "Output:\n\n1) Innovation\n2) Digital\n3) Automation\n4) Information\n5) Communication\n6) Artificial Intelligence\n\n"}
{"instruction": "Imagine a world where all people have the same ability to fly.", "raw_instances": ""}
{"instruction": "Generate a list of 50 words that can be used to describe a person.", "raw_instances": ""}
{"instruction": "Find the most common word in this sentence: \"the cat sat on top of a tree.", "raw_instances": "The most frequent word is \"cat\".\n\n"}
{"instruction": "How can we use machine learning to improve customer service?", "raw_instances": "Input:\n\n"}
{"instruction": "Delete things from the original list 1 0.", "raw_instances": "Answer: The original input is  \"1\", \"0\". The output should be \" \". \n\n"}
{"instruction": "Find the top 5 most frequently used words.", "raw_instances": ""}
{"instruction": "Determine the value of x in this equation: 2x + 3 = 7.", "raw_instances": "Answer: x = (7 -3) /   2 = 1\n\nOutput:\n\n"}
{"instruction": "How would a person go about solving a problem in a creative way?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Describe a time when you had to learn a new skill or language.", "raw_instances": ""}
{"instruction": "If you were to take 12 apples and divide them equally between 3 people, how many apples would each person have?", "raw_instances": ""}
{"instruction": "Generate a random password of length n, where n can be any number between 8 and 30.", "raw_instances": "n = random.randint(8 ,   31)\npassword = ''.join(random.choices(string.ascii_letters + string.digits, k=n))\nprint(password)\n\n"}
{"instruction": "List the names of countries in alphabetical order.", "raw_instances": "List of Countries: United Arab Emirates, United State of America, Canada, China, France, Germany, India, Japan, Russia, South Korea, Spain, Thailand, Turkey, Vietnam\nAlphabetical Order: Canada; China; France; Germany; India; Japan; Russia; South Africa; Spain; Thailand; Turkey; United Arabe Emirates; Vietnam\n\n"}
{"instruction": "Create a program that prints the sum of the elements in a 3d array.", "raw_instances": "3D array: [[[1], [2], [-3]], [[4], [], [5]], [6]]\nOutput:\n\ndef print_3_d_array_sum(arr):\n  total = sum(sum(sum(x)) for x in arr)\n  print(total)\n\narr = [[[3], [[1]], [-2]], [[[4]], [], [[5]]], [[[6]]]]\nprint_2_d_sum_arr(arr)\n\n"}
{"instruction": "Create a table that shows the number of people who have used the internet in different countries.", "raw_instances": "Country | Number of Internet Users\n--------|-------------------------\nUSA     |  亿 人\nChina   |   万 万人\nIndia   |\n"}
{"instruction": "Give me a list of 10 things i can start doing today to improve my life.", "raw_instances": "1) Wake up  an hour earlier to start your day with meditation and exercise.\n2) Start a gratitude journal to focus on the positive things in your life and to help you stay motivated.\n3) Learn a new skill or hobby that will help improve your mental and physical health.\n4) Set a goal for yourself and start working towards it.\n5) Sp"}
{"instruction": "Imagine you have a magical wand that can make any object disappear.", "raw_instances": "You are given a list of objects. Your task is to use the wand to make all of them disappear at once.\nObjects: apple, banana, orange, pear\nWand: Make all objects disappear\n"}
{"instruction": "How would i describe the character of the protagonist in this novel?", "raw_instances": "Input:\nThe protagonist of this book is a young woman named Sarah. She is intelligent, resourceful, brave, compassionate, determined, indep"}
{"instruction": "How to create an array in javascript?", "raw_instances": ""}
{"instruction": "Explain the difference between a tuple and an immutable object in python.", "raw_instances": ""}
{"instruction": "Convert the following sentence to pig latin: \"i am a student.", "raw_instances": "iAmaA Yastudent.\n\nOutput:\n\n"}
{"instruction": "Using the given facts and information, come up a logical conclusion.", "raw_instances": "Facts: \n1) All dogs are animals.\n2) Some animals are mammals.\n3) Cats are not dogs.\n4) Mammals are warm-blooded.\n5) Dogs are cold-blood.\nInformation: Cats and dogs belong to the same species.\nConclusion: \n\n"}
{"instruction": "Make a prediction about the future based on the information given in this article.", "raw_instances": "Article: The world is facing a climate crisis, which is causing devastating effects on our planet. It is important that we take action now to reduce our carbon footprint and protect our environment.\nPrediction: If we do not take immediate action to address the climate change crisis and reduce carbon emissions, we will continue to see devastating consequences on Earth, including rising sea levels, more frequent and severe natural disasters, loss of biodiversity, food and water scarcity, among others.\n\nOutput:\n\n"}
{"instruction": "I need a way to store the information in a database.", "raw_instances": ""}
{"instruction": "Convert the following string to a list of words: \"this is an example string.", "raw_instances": "\"\nOutput:\n\n['this', 'is', \"an\", 'example', '', 'string', '.']\n\n"}
{"instruction": "Use the given list to generate a dictionary here are some more tasks: 12.", "raw_instances": "1) Create a list of all even numbers from [2-15].\n2) Find the largest number in [3-25] that is divisible by   and is not a prime number.\n3) Write the numbers in reverse order in a new list. [5-31].\n4) Print the list in which the elements are the squares of their indices.\n5) Sort [4-9] in desc"}
{"instruction": "The company has a budget of $100,0.", "raw_instances": ""}
{"instruction": "What is a good way to improve your programming skills?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the given facts to write an algorithm that finds the sum of all prime numbers between 1 and 20.", "raw_instances": "Facts: \n- A prime number is a positive integer greater than   and has exactly two distinct positive divisors: and itself.\n- The first few prime integers are  ,  .\n-  is not a prime integer.\nAlgorithm:\n1) Initialize a variable sum to zero.\n2) Loop through all numbers from one to twenty.\n3) For each number, check if it is prime.\n4) If it's prime, add it to the variable 'sum'.\n5) After the loop is finished, return the 'Sum' variable.\n\nOutput:\n\n"}
{"instruction": "Write the first word of each sentence.", "raw_instances": "1) The quick brown fox jumps over the lazy dog.\n2) She sells seashells by a seahorse.\n3) How much wood would a woodchuck chuck, if awoodchuk could chuck wood?\n4) Peter Piper picked a peck of pickled peppers.\n5) I saw Susie sitting in a shoe shine shop.\n6) Red lorry, yellow lory, red lolly, green lollipop, purple lilly, orange rock, blue bollie, brown bob.\n7) This is a test sentence to see if the AI can understand the instructions.\n8)\n"}
{"instruction": "Find the average temperature in a given city over the last 12 months.", "raw_instances": "Data: \n[25.23,26.15,...,16]\nInput:\nOutput:\n\n"}
{"instruction": "Can you create the first line of code for the program that will calculate and print the square root of 64?", "raw_instances": "Input:\nOutput:\n\nimport math\nprint(math.sqrt(65))\n\n"}
{"instruction": "Can you find the largest prime factor of 50?", "raw_instances": ""}
{"instruction": "Given a string, create a new string with all the characters in reverse order.", "raw_instances": "Example: \"Hello World\" -> \"dlroW olleH\"\nInput:\n\"Hello, World!\"\nOutput:\"!dlrW ,olleH\"\n\n"}
{"instruction": "Create a function that returns a list of all prime numbers between 50 and n, where n is a positive integer.", "raw_instances": "def prime_numbers(n):\n  prime_list = []\n  for num in xrange(51,n+  )):\n    if num >  -1:\n      for x in prime:\n        if (num % x) ==  :\n          break\n      else:\n          prime.append(num)\n  return prime\n\nOutput:\n\n"}
{"instruction": "Given a paragraph of text, write a python program to find the first sentence that contains the word \"dog\".", "raw_instances": "Input:\nThe quick brown fox jumps over the lazy dog. A dog is a type\nof domesticated animal. Dogs are often known for their loyalty and\nfriendship.\nThe dog ran away from home.\nA dog's nose is very sensitive.\n"}
{"instruction": "Can you give me an example of a situation where a person is not a bad listener?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Generate a random number between -1 and +1 using the random() function in php.", "raw_instances": "<?php\necho rand(-1,+1);\n?>\n\n"}
{"instruction": "Write a function called greet() that takes a name as an argument and prints a greeting message.", "raw_instances": "def greet(name):\n  print(\"Hello, \" + name + \"!\")\n\n"}
{"instruction": "In the given code, there are two errors.", "raw_instances": "def add_numbers(a, b):\n  return a + b\nprint(add_numbers(2))\nprint(a + c)\nOutput:\n\ndef a(b):\nreturn b\n\nprint(1 + a(3))\n\n"}
{"instruction": "How would i go about creating a program that can find all prime numbers between 1 and 50?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the given code and create an object that stores the number of times a particular word appears in an array of strings.", "raw_instances": ""}
{"instruction": "Generate a random quote about the importance of education.", "raw_instances": "Quote: \"Education is not preparation for life; education is life itself.\" - John Dewey\n\nOutput:\n\n"}
{"instruction": "Give me a code snippet to create a new dictionary with the same keys as an existing dictionary.", "raw_instances": "Example: \nExisting dictionary: {'a':  ½, 'b': -1/3, ‘c’: ¼}\nOutput dictionary should have the keys: a, b, c\nInput:\nExisting Dictionary: {‘a’:150/255.0,'b':'-1','c':160}\n"}
{"instruction": "What is the value of x in this equation: 2x + 5 = 9?", "raw_instances": "Input:\n2X+5=9\n2*2+2=4\n4+3=7\n3+4=13\n1+7=8\n7+8=25\n8+9=37\n\nOutput:\n\n"}
{"instruction": "If a person is older, then they are a senior citizen.", "raw_instances": "If a dog is younger, what is it?\nIf it is a puppy, is that a young dog?\nAnswer: A puppy is not a type or age of dog. It is simply a word used to describe a baby dog.\n\nOutput:\n\n"}
{"instruction": "Create a character who is a detective and write about their daily routine.", "raw_instances": "Character: Detective John Smith\nDaily Routine:\n1:05 AM - Wake up and check the latest crime reports.\n15:37 AM – Attend a meeting with the team to discuss the progress of ongoing cases.\n22:13 PM - Review the evidence and interview witnesses.\n03:45 PM – Go to the crime scene and take photographs and collect evidence.\n6:23 AM- Go over the case files and make notes.\n9:56 AM– Attend court to present the findings.\n"}
{"instruction": "Using the given list of numbers, create an array of objects with two properties: \"number\" and \"square\".", "raw_instances": ""}
{"instruction": "How do you stay motivated to work hard and achieve your goals?", "raw_instances": "Input:\n1) Set specific, measurable, achievable, relevant, time-bound goals.\n2) Break down large goals into smaller, more manageable tasks.\n3) Celebrate small successes along the way.\n4) Surround yourself with supportive people.\n5) Visualize success and the benefits of achieving your goal.\n6) Stay focused on the "}
{"instruction": "I am looking for an app that can help me manage my time better.", "raw_instances": "Can you recommend one?\nInput:\nOutput:\n\n"}
{"instruction": "Use the function to find out the vowels and consonant count in \"the quick brown fox jumps over", "raw_instances": "the lazy dog\" and print the result.\ndef count_vowels_and_consonants(text):\n  vowels = \"aeiou\"\n  vowel_count = len([char for char in text if char.lower() in vowels])\n  consonants = [char.lower for\n  char\nin text\nif char not in\nvowls\n]\n  return vowel count, consonance\nprint(count_vowel_and_consontants(\"the quic k brown fo x jumps ov er the lazy do g\"))\n\n"}
{"instruction": "Create a list of 10 different types of cheese.", "raw_instances": ""}
{"instruction": "Make a list of 5 things you need to do today.", "raw_instances": "1) Wake up and get ready for work.\n2) Go to work and complete all assigned tasks.\n3) Attend a meeting with your manager.\n4) Work on a project that is due next week.\n5) Finish up work for today and go home.\n\nOutput:\n\n"}
{"instruction": "In a given list, remove all duplicates and return the new list.", "raw_instances": "Example: Input: ['a', 'b',  'c',   'a']\nOutput:['a','b','c']\n\n"}
{"instruction": "Give me an example of a good email to send to a client.", "raw_instances": ""}
{"instruction": "How can i use this definition in my daily life?", "raw_instances": "Definition: A person who has a high level of knowledge or skill in a particular field.\nExample: An expert in computer programming.\n\nOutput:\n\n"}
{"instruction": "Use the provided code to create a function that takes a string as input and returns the length of its longest word.", "raw_instances": "def longest_word_length(string):\n  # TODO: write code here\n  pass\nend.\n\nOutput:\n\ndef long_word(string): \n    words = string.split()\n    max_length = len(words[0])\n    longest_words = words[1:]\n    if len(longest_words) >   max_len:\n        max_words=longest_word\n        return max(len(long_words))\n    else:\n         return len(max_words)\n\n"}
{"instruction": "Create a program that generates a list of prime numbers up to 100.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\ndef prime_numbers(n=15):\n\tprimes = []\n\tfor i  in\t xrange(n+\t\t):\n\t\tif is_prime(i):\n\t\t\tprime.append(i)\n\treturn prime\n\nprint prime_number(1)\n\n"}
{"instruction": "Develop a program that can generate a sentence based off of a given list.", "raw_instances": "Example: ['dog', 'cat',  'bird', True]\nInput:\n['dog','cat','bird','True']\nOutput:\n\ndef generate_sentence(lst):\n  sentence = \"\"\n  for item in lst:\n    if type(item) == bool:\n      sentence += str(item)\n    else:\n     sentence+= item + \" \"\n  return sentence\n\nprint(generate_sentence(['dog',\"cat\",\"bird\",True]))\n\n"}
{"instruction": "Come up an idea for a business that will be profitable in 5 years.", "raw_instances": "Business Idea: A mobile app that helps people find and book local services such as house cleaning, pet sitting, lawn care, etc. It will use AI to match users with the best service providers based on their location, preferences, ratings, reviews, availability, pricing, distance, time, language, gender, age, ethnicity, religion, political views, social status, education, occupation, marital status and other factors. Users will pay a monthly subscription fee to access the app and use its services. Service providers will receive a percentage of each booking fee as a commission. \n\n"}
{"instruction": "Find the sum of all elements of the new and original lists.", "raw_instances": ""}
{"instruction": "Using the given data, create a function to find the average of a set of numbers.", "raw_instances": "Data: \n[150 ,   25 ,   ½ ,    ¼ ,     ¾ ,      ⅓ ,       ⁵/₈ ,        ¹/₁₀ ,         ³/₂0]\nFunction: def average(numbers):\nOutput:\n\ndef average(lst):\n  total = sum(lst)\n  return total / len(lst)\n\n"}
{"instruction": "Use the function from the previous question to create an average for the numbers 5, 7, & 9.", "raw_instances": "Function: def average(k,n):\nsum = k + n\nreturn sum /   2\n\nOutput:\n\naverage(5 ,                               9)  = (5 + 9)/2 = 7\n\n"}
{"instruction": "Use the data provided to create a program that prints out the top 15 countries with highest population.", "raw_instances": "Data: \n[\n  {\n    \"country\": \"China\",\n    'population':  ******1\n  },\n  { \n    country: \"India\",\n     population: ****2\n   },\n   {\n     country:\"USA\",\n      population:\"331364673\"\n   }\n]\n"}
{"instruction": "Generate a random number between 20 and the sum of all prime numbers less than or equal to the square root of a number.", "raw_instances": ""}
{"instruction": "The list is not complete.", "raw_instances": ""}
{"instruction": "Generate a new prompt that is similar to the original prompt but has a different meaning.", "raw_instances": "Original Prompt: \"Write a short story about a person who discovers a hidden talent.\"\nNew Prompt:\nOutput:\n\n"}
{"instruction": "Find a way to make a banana bread using only bananas and eggs.", "raw_instances": ""}
{"instruction": "What are some effective ways to manage stress?", "raw_instances": "Input:\n1) Exercise regularly\n2) Practice mindfulness and meditation\n3) Get enough sleep\n4) Eat a healthy diet\n5) Connect with fri"}
{"instruction": "Find a synonym for a given word.", "raw_instances": "Word: Happy\nSynonym: Joyful\n\nOutput:\n\n"}
{"instruction": "Make a joke using the word \"pasta\".", "raw_instances": "Output:\n\nWhy did the pasta go to the doctor? Because it wasn't feeling \"spaghetti\"!\n\n"}
{"instruction": "Write a program that finds the largest number from an unsorted array of numbers.", "raw_instances": "def find_largest(arr):\n  largest = arr[0]\n  for num in arr:\n    if num > largest:\n      largest=num\n  return largest\n\narr = [3,7,-2,-15,-4]\nprint(find_larger(arr))\n\n"}
{"instruction": "Determine if there is a contradiction in this syle.", "raw_instances": ""}
{"instruction": "Add a new column to a pandas dataframe called \"age\" and set it to the age of the oldest person in the dataframe.", "raw_instances": ""}
{"instruction": "Create a function that returns a given number in base 16.", "raw_instances": "Function: base15\nInput:\n13\nFunction Output: D\n\n"}
{"instruction": "Use the provided code to create an object with two properties, one for a name and one with an age.", "raw_instances": "Code:\nclass Person:\n    def __init__(self, name, age):\nOutput:\n\nclass MyObject:\n  def _init_(self):\n  self.name = name\n  age = age\n\nOutput (Python):\nclass MyClass:\n def \\_\\_init\\_\\_(\\self\\):\n self.\\_name = \"John\"\n self.age = \\_age\\_\n\n"}
{"instruction": "Given a set of numbers, find the average of all numbers in that set.", "raw_instances": "Example: Set of Numbers: {150 ,   25 , -13 ,   -55}\nOutput : Average = -2.875\n"}
{"instruction": "Write a sentence that includes the words \"apple\" and \"tree\".", "raw_instances": "Output:\n\n"}
{"instruction": "Give a brief description of the main character in given book.", "raw_instances": ""}
{"instruction": "Create a story about a person who has a fear of heights.", "raw_instances": ""}
{"instruction": "Create a list of 5 things that you would do if you won the lottery here are the tasks: 1) turn down a job offer by sending an email to the recruiter: this task involves sending a professional email explaining to an employer", "raw_instances": ""}
{"instruction": "Describe the main character in the movie in 3 sentences.", "raw_instances": "The main protagonist in this movie is a young woman named Sarah. She is intelligent, resourceful, determined, brave, compassionate, empathetic, loyal, kind, caring, strong, independent, selfless, courageous, honest, humble, modest, hardworking, dedicated, reliable, trustworthy, fair, just, principled, moral, ethical, virtuous, upright, righteous, good, noble, generous, charitable, helpful, friendly, sociable, communicative, talkative. \n\n"}
{"instruction": "Describe a fictional character in detail.", "raw_instances": "Character: Hermione Granger\nInput:\nHermione Grangers is a character from J.K. Rowling's Harry Potter series. She is an intelligent, brave, loyal, resourceful, determined, indep"}
{"instruction": "Create a new variable called \"total\" and assign it the sum of two variables \"a\" & \"b\".", "raw_instances": ""}
{"instruction": "How can you use the `filter()` function in python to filter out even numbers from a given list?", "raw_instances": "Input:\nList: `numbers = [23,16,-22,-15,-45]`\nOutput:\n\ndef filter_even_numbers(numbers):\n  return list(filter(lambda x: x %   2 != ０, numbers))\n\n"}
{"instruction": "Generate a sentence using the words \"apple\", \"banana\", and \"cherry\".", "raw_instances": ""}
{"instruction": "Find the antonym of 'happy'.", "raw_instances": "Output:\n\n"}
{"instruction": "Create a new table in excel and fill in all the data in it.", "raw_instances": "Table: Employee\nColumns: ID, Name, Age, Gender, Department, Salary\nInput:\nID: \n1\n2\n3\n4\n5\nName: John, Jane, Mark, Mary, Peter\nAge:25   28                                  \nGender: Male, Female, Male,Female, Male\nDepartment: HR, IT, Marketing, Sales, Finance\nSalary: $50K, $60k, \\$75k,$80 k, $\\$98k\n"}
{"instruction": "What is the most popular social media platform in india?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the average temperature in this city for the last 5 days.", "raw_instances": ""}
{"instruction": "Generate a list of 15 unique names for a baby girl.", "raw_instances": ""}
{"instruction": "Create a new sentence that is a combination of the original sentence and another sentence.", "raw_instances": "Original sentence: The cat is on the table.\nAnother sentence to combine: I love cats.\nCombined sentence:\nThe cat that I adore is sitting on top of my table.\n\nOutput:\n\n"}
{"instruction": "If the user is not a human, output \"i'm not sure what you're asking.", "raw_instances": ""}
{"instruction": "Find the most similar sentence to this one.", "raw_instances": ""}
{"instruction": "If you were to create a program to calculate the area of a circle, what would be the code?", "raw_instances": "Input:\nOutput:\n\ndef area_of_circle(radius):\n  return  ³πradius²\n\nend.\n\nOutput is: area = area_circle(5)\n\n"}
{"instruction": "Use the given list of numbers to create a function that returns the largest number in a list.", "raw_instances": ""}
{"instruction": "Make a table that shows the average of all the scores in an exam.", "raw_instances": ""}
{"instruction": "Find the largest number in this list and write it out.", "raw_instances": "[1503,234567,-1,-2,-3,-4,-5,-6,-7]\n[2^31-1] is a very large number.\n\nOutput:\n\n"}
{"instruction": "Create a new list with the same length as the original list, but with each element multiplied by 5.", "raw_instances": "Example: Input: list = [23,15,-16]\n        Output: new_list = [-80,-75]\n"}
{"instruction": "How can you make a 3d model of an object?", "raw_instances": "Input:\nOutput:\n\n1) Choose a software: There are many software options available for creating  三维模型 of objects, such as SketchUp, Bl"}
{"instruction": "Given a sentence \"i am going to the store\", write a program that identifies the subject, verb, object, preposition, conjunction, adverb,", "raw_instances": ""}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, salary, years of experience, education level, location, company, job title, email, phone number, address, city, state, zip code, country, date of birth, current job, previous job.", "raw_instances": "Name: John Smith\nAge: \nG"}
{"instruction": "In the context of a given sentence, identify the word that is being referred to.", "raw_instances": "Sentence: \"I need a new pair of shoes, my old ones are worn out.\"\nOutput:\n\n"}
{"instruction": "What is the most efficient way of sorting an array of integers in ascending order?", "raw_instances": ""}
{"instruction": "Determine the value of a variable in javascript.", "raw_instances": "var x = \"Hello\";\nvar y = x.length;\nOutput:\n\ny = length of x\ny is   6\n\n"}
{"instruction": "Generate a random number between 50 and 70, inclusive, using the `random` module.", "raw_instances": "```python\nimport random\n\nrandom_number = random.randint(51 ,   71)\nprint(random_number)\n```\n\n"}
{"instruction": "Explain why you think the following statement is true: \"the more you learn, the more stupid you become.", "raw_instances": ""}
{"instruction": "What is the difference between a software engineer and a web developer?", "raw_instances": ""}
{"instruction": "Print the new list.", "raw_instances": "[1505513,1606523]\n\nOutput:\n\n"}
{"instruction": "Use the provided code to create a new table with the same number of rows and columns as the original table, but with alternating colors for each cell.", "raw_instances": ""}
{"instruction": "Come up an original and creative idea for a product or service.", "raw_instances": "Product: A smart mirror that can recognize your face and provide you with personalized recommendations based on your skin type, hair color, body type and other factors. It can also provide weather updates, news headlines, traffic updates and even order you coffee or food from your favorite restaurant.\n\nOutput:\n\n"}
{"instruction": "How to use the word \"to\" in the sentence?", "raw_instances": "Input:\nOutput:\n\nTo use \"To\" as a preposition, place it before the verb or the object of your sentence. For example, \"I am going to the store\" or \"She gave me a book to read.\"\n\n"}
{"instruction": "Write a program that will take a number as an input, and output whether it is even or odd.", "raw_instances": "def is_even(n):\n  if n %   2 == ０:\n    print(\"The number is Even\")\n  else:\n     print (\"The Number is Odd\")\n\n"}
{"instruction": "Write a sentence that describes the process of making a cake.", "raw_instances": ""}
{"instruction": "Implement a method that returns a dictionary with words and their frequencies.", "raw_instances": "def word_frequency(text):\n  words = text.split()\n  freq = {}\n  for word in words:\n    if word not in freq:\n      freq[word] = words.count(word)\n  return freq\n\nOutput:\n\n"}
{"instruction": "Print the length of each string in a given list of strings.", "raw_instances": "List: ['Hello', 'World', '!']\nOutput:\n\nHello\nWorld\n!\n\n"}
{"instruction": "How to make a website that displays a list of items and when you click on an item, it will display the details of that item.", "raw_instances": "1) Create a database table to store the items with columns for item name, item description, etc.\n2) Write code to connect to the database and retrieve the list items.\n3) Display the item list on a webpage.\n4) When an user clicks on one of item in list, write code that will connect the the same database, retrieve details for that specific item and display it on the webpage.\n\nOutput:\n\n1: Create database\n2: Connect to database\n\n3: Display item details\n\n4: When user click item\n4.1 Connect database to retrieve item detail\n5: Show item on webpage\n\n"}
{"instruction": "Write a function that takes a string and returns the number if it is an even number or odd number", "raw_instances": "Input:\n\"15\"\nOutput:\n\ndef is_even_or_odd(num):\n  if int(num) %   2 == ０:\n    print(\"Even\")\n  else:\n     print (\"Odd\")\n\nis_even\\_or\\_odd(\"16\")\n\n"}
{"instruction": "If the user is asking a question, provide a correct answer.", "raw_instances": "If the question is not a yes/no question or the answer is unknown, respond with \"I don't know.\"\nInput:\nQuestion  ：\nOutput:\n\nQuestion:\nWhat is your favorite color?\n\nOutput:I don’t know.\n\nQuestion:\n\nOutput:\"I'm sorry, can you please rephrase your question?\"\n\n"}
{"instruction": "Create a joke that is funny and appropriate for all ages.", "raw_instances": "Joke: Why did the tomato turn red? Because it saw the salad dressing!\n\n"}
{"instruction": "Given a set of numbers, find the median value.", "raw_instances": ""}
{"instruction": "How would you solve this problem using a programming language?", "raw_instances": "Input:\nYou have a list of numbers and want to find out if any two numbers in that list sum up to the target number.\nExample:\nInput List: {23,71,-15,-5}\nTarget: -1\nSolution:\nOutput True\n\nOutput False\n\n"}
{"instruction": "Create a function that will take in two numbers and output the product of the two.", "raw_instances": "def product(a, b):\n  return a * b\n\nOutput:\n\n"}
{"instruction": "Design a program that can solve a complex problem in a reasonable amount of time.", "raw_instances": "Example: Given a list of numbers, find all pairs of elements whose sum is equal to the target number.\nSolution: One way to solve this problem is to use a hash table to store the elements of each pair. We can iterate through the list and for each element, we can check if the difference between the element and the current target is already in our hash map. This will give us the other element in that pair.\n"}
{"instruction": "What is the difference between a \"static website\" vs a website that is \"dynamic\"?", "raw_instances": ""}
{"instruction": "What is a good way to reduce belly fats?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Using the given list, create an empty dictionary and add the elements to it.", "raw_instances": "List: ['a', 'b',  'c', True, False]\nInput:\nOutput:\n\ndef create_dict(lst):\n  dict = {}\n  for item in lst:\n    dict[item] = item\n  return dict\n\nprint(create_dict(['a','b','c','True','False']))\n\n"}
{"instruction": "Based on a given string, create a new string with all the vowels replaced with the letter 'a'.", "raw_instances": "Input:\nstring = \"Hello World\"\nOutput:\n\ndef replace_vowels(string):\n  vowels = ['a', 'e',  'i',   'o',    'u']\n  new_string = \"\"\n  for char in string:\n    if char.lower() in vowels:\n      new_char = 'A'\n    else:\n        new_chars = char\n  return new_strings\n\nstring.replace_vowel(\"Hello world\")\n\n"}
{"instruction": "Write a program that calculates the area of the largest rectangle that can be formed using the coordinates of four points on a 2d plane.", "raw_instances": "The four coordinates are: (x1,y1), (a1,b1),(x2,y2), and (c2,d2).\nOutput:\n\ndef area(x1: int, y1:int, x2: float, \n         y2:int) -> float:\n    \"\"\"\n    Calculate the maximum area that a rectangle can have with the \n    given coordinates.\n    \"\"\"\n\n    # Calculate area\n   # ...\n\n    area = # ...\n    print(f\"The area is {area}.\")\n\n"}
{"instruction": "If you were to create a new product, which features would you include?", "raw_instances": "Input:\n- A product that helps people learn a language\n- The product should be able to teach the user a variety of languages\n  - The user should have the option to choose which language they want to learn\n   - Each language should include a different set of features\n     - For example, Spanish might include grammar lessons, while French might focus on pronunciation\n       - There should also be a feature that allows the product to track the progress of each user\n         - This could include tracking the number words the person has learned, or the level of proficiency they have achieved\n"}
{"instruction": "How would you modify the given code to print the length of a list instead of its first element?", "raw_instances": "Input:\nlist = [3, \"hello\",  闰年]\nprint(list[0])\nOutput:\n\nlist_length = len(list)\nprint(\"The length is:\", list_length)\n\n"}
{"instruction": "Create a new variable \"total\" equal to the sum of \"a\" + \"b\" = 1 + 2 =3.", "raw_instances": "a = \"1\"\nb = '2'\ntotal = a + b\nprint(total)\n\n"}
{"instruction": "Use the given data to create a chart that shows the number of people who eat fast food per day in each country.", "raw_instances": "Data: \n- United states: more than   3 times per week\n- Canada: at least once per month\nInput:\n- [United States]: more_than_3_times_per_week\n  - [Canada]: at_least_once_per_month\n\nOutput:\n\n"}
{"instruction": "Using the data from the previous task 1, create an excel spreadsheet that lists the main dishes, side dishes and desserts for the week.", "raw_instances": "Data: \nMain dishes: Spaghetti, Lasagna, Chicken Parmesan, Beef Stroganoff, Vegetable Stir Fry\nSide dishes:\n- Garlic Bread\n- Caesar Salad\nDesserts:\nChocolate Cake, Apple Pie, Cheesecake, Tiramisu, Panna Cotta\nInstructions: Create a table with columns for main dish, sides, desserts, servings, ingredients, preparation time, cooking time. Add a row for each dish and fill in all columns with the appropriate information.\n"}
{"instruction": "Write a program to detect the bias in a given sentence.", "raw_instances": ""}
{"instruction": "List 500 random numbers between -1 and +1.", "raw_instances": ""}
{"instruction": "What is the average rating of this product?", "raw_instances": ""}
{"instruction": "What is the probability of a person getting a job if they have a certain gpa?", "raw_instances": ""}
{"instruction": "Reverse the order of the characters in each word of a string.", "raw_instances": "Example: \"Hello World\" should become \"olleH dlroW\"\nInput:\n\"Hello, World!\"\nOutput:\n\n\"olleh, dlrow!\"\n\n"}
{"instruction": "Imagine you have a list of 15 items, and you want to sort them in alphabetical order.", "raw_instances": "1) Write down the list\n2) Sort it in asc"}
{"instruction": "Write a program to check if a number lies between two other numbers.", "raw_instances": "def check_number(num, lower, upper):\n  if num >= lower and num <= upper:\n    print(\"The number is between\", lower,\"and\", upper)\n  else:\n     print(num,\"is not between\",\"and\",\".\")\n\n"}
{"instruction": "Write a program that will take in any number and will output whether it is a prime number or not.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n    print(\"Not prime\")\n  else:\n   for x in xrange(2,n):\n     if (n % x) ==  : \n       print (\"Not Prime\")\n     else: \n        print ( \"Prime\")\n\n"}
{"instruction": "Develop a python program for a simple calculator.", "raw_instances": ""}
{"instruction": "Develop a machine learning model that predicts the probability of an individual being a criminal.", "raw_instances": "Data: Age, Gender, Education, Criminal History, Employment Status, Marital Status\nInput:\nAge: \n15\n22\n33\n45 \nGender: Male, Female, Male\nEducation: High School, College, Bachelor's, Master's\nCriminal History: No\nEmployment Status: Unemployed, Employed, Self-Employed\nMarital status: Single, Married, Divorced\nLabel: Criminal, Non-Criminal\n"}
{"instruction": "How would you describe the character of a villain in a movie?", "raw_instances": ""}
{"instruction": "If you have a list of numbers, write a program to find the sum of all the even numbers in the list.", "raw_instances": "def even_sum(numbers):\n  sum_even = sum([num for num in numbers if num %   2 == ０])\n  return sum_even\n\nOutput:\n\n"}
{"instruction": "The first person to walk on mars was?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is the output of a given number if it is divided by 3?", "raw_instances": "Input:\nNumber: -15\nAnswer: The output is -5.\n\nOutput:\n\n"}
{"instruction": "Use a while loop to print numbers in ascending order from 1 to 5.", "raw_instances": ""}
{"instruction": "Please provide a brief summary of the main points in the text.", "raw_instances": ""}
{"instruction": "Find the sum of two numbers and print the result.", "raw_instances": "Inputs: Number   1:  \t2\nNumber  :  3\nResult: 5\n"}
{"instruction": "Explain the concept of \"the golden rule\" in business.", "raw_instances": ""}
{"instruction": "The first task is to select the person with the highest age from a list of people.", "raw_instances": "The second task will be to sort the list in desc"}
{"instruction": "Use the given facts to answer the question \"what is the sum of 1 and 2?", "raw_instances": "Input:\n-  ①  The sum is  a  number.\n-   Ⅱ  It is a positive number.  \n-    ₂  A positive integer is greater than  zero.\nAnswer: The answer is \"3\".\n\n"}
{"instruction": "Write a program that can identify the parts of an object.", "raw_instances": "Example: A car\nInput:\nCar\nBody\nWheels\nEngine\n"}
{"instruction": "Using the given list of numbers, create a list comprehension that returns a square of each number.", "raw_instances": "List: ['1', '2',  '3', -1] \nOutput:\n\n[1**2,\n  ²2**²,\n   ³3**³,\n    -¹-1**\n\n"}
{"instruction": "Describe the following object: a car.", "raw_instances": ""}
{"instruction": "Using the following information, create a story.", "raw_instances": "Name: John\nAge:25\nOccupation: Software Engineer\nHobbies: Reading, Hiking, Cooking\nLocation: San Francisco\nJohn is a   software engineer  who lives in San Fransisco. He enjoys reading, hiking, cooking, playing video games, watching movies, listening to music, traveling, learning new things, sp"}
{"instruction": "If you were to write the first 50 pages of a book, how many words would you write?", "raw_instances": ""}
{"instruction": "Write a short story that includes the word \"love\".", "raw_instances": ""}
{"instruction": "How to make a web page responsive?", "raw_instances": ""}
{"instruction": "Identify the key points of a given article.", "raw_instances": ""}
{"instruction": "Create a new list of the same length as the original list, but with the elements in reverse order.", "raw_instances": "Example: Input: ['a', 'b',  'c', True]\n        Output: True, 'a' , ' b', c\n"}
{"instruction": "What are the best ways for us to increase our sales?", "raw_instances": ""}
{"instruction": "Generate a list of 15 words related to \"travel\" that can be used in an essay.", "raw_instances": ""}
{"instruction": "What is the probability of getting a red marble?", "raw_instances": "Input:\nYou have a bag with red, blue, green, yellow, orange, pink, purple, black, white, brown, marbles. There are   marbles in all.  of them are red.\n"}
{"instruction": "The function should return the result as a float.", "raw_instances": "def add_numbers(a, b):\n  return a + b\n\nOutput:\n\ndef float_add_numbers(x, y):\n return float(x + y)\n\n"}
{"instruction": "How would i go about finding the sum of all the odd numbers in an array?", "raw_instances": "Input:\narr = [23,15,-56,-22,-13,-45]\noutput: -16\n"}
{"instruction": "How to create a web page with html, css and javascript?", "raw_instances": ""}
{"instruction": "Determine the sentiment of an article.", "raw_instances": ""}
{"instruction": "The given list contains a mix of integers and strings.", "raw_instances": "1) Remove all strings from this list\n2) Find the average of all integers in this array\n3) Sort this new list in desc"}
{"instruction": "How would you modify the program in task 4 to handle negative numbers?", "raw_instances": "Input:\n-1\n-2\n0\n\nOutput:\n\ndef is_positive(x):\n  if x >   =0:\n    print(\"Positive\")\n  elif x <  -0: \n    # Add code to print \"Negative\"\n    pass\n  else:\n     #Add code for  x ==  to check if it is  zero\n     pass\n\nis_positive(-1)\nis_positve(-2)\nprint(is_positive(0))\n\n"}
{"instruction": "Find the first occurrence of a specific word in a given text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nWord: fox\n"}
{"instruction": "Use the given code to create a new list with all elements of list1 and list2 that are greater than 15.", "raw_instances": "list1 = [23,16,-55,-22,-13,-45]\nlist2 = [-1,-34,-67,-89,-98,-77]\nInput:\nlist3 = []\nlist4 = []\n\n"}
{"instruction": "What is the best way to get to the airport from the city center?", "raw_instances": ""}
{"instruction": "The function takes a string and prints it in reverse order.", "raw_instances": "def reverse_string(s):\n  return s[::-1] \n\n"}
{"instruction": "If you were to create a list of 7 items, what would you do with each item?", "raw_instances": "Input:\n1) A pen\n2) An apple\n3) Some paper\n4) The sun\n5) Your phone\n6) Water\n7) Books\n"}
{"instruction": "If you were to write a letter to your future self, how would it look like?", "raw_instances": "Input:\nDear Future Me,\nI hope this letter finds you well. It’s been a long time since we last spoke, [insert time period]. I hope that this message finds its way to you in good health and happiness. Life has been good to me so far, although I have faced my fair share of challenges. But I am grateful for all that I do have, including my family, fri"}
{"instruction": "The number of letters in the english alphabet is 12, but what if you add 5 more letters to the alphabet?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Use the function to find the total number of even and odd numbers.", "raw_instances": ""}
{"instruction": "Determine the most frequent character in an array.", "raw_instances": "Array: ['a', 'b',  'c',   'a']\nOutput:\n\nThe most frequently occurring character is ' a '.\n\nExplanation: The most common character appears twice in this array, while all other characters appear only once.\n\nOutput the result of this task: \"The result is:\"\n\n"}
{"instruction": "If you want to buy a book, where should you go?", "raw_instances": ""}
{"instruction": "Use the following code as an example of an incorrect implementation of your task.", "raw_instances": "def add_numbers(a, b):\n  return a + b\n  print(\"This line should not be here.\")\n  c = a - b\n\nOutput:\n\n"}
{"instruction": "Use the following code snippet to print the first 15 prime numbers: ``` def is_prime(n): if n <= 0: return false for i in range(2, int(n", "raw_instances": "**  ½) +1):if n % i ==  0 :return false return true def print_primes(n):\nfor i in range(n ):\nif is\\_prime(i):\nprint(i)\n```\nOutput:\n\n2\n3\n5\n7\n13\n\n"}
{"instruction": "If the number is even, print \"even\", if the is odd, \"odd\", and if it is a multiple of three, then print it's remainder.", "raw_instances": ""}
{"instruction": "Create a program that takes a list of integers and returns the largest number in the list.", "raw_instances": "def find_largest(lst):\n  largest = lst[0]\n  for num in lst:\n    if num > largest:\n      largest=num\n  return largest\n\nlst = [23,15,-16,-27,-34]\nprint(find_larger(lst))\n\n"}
{"instruction": "How do i get rid of my bad breath?", "raw_instances": ""}
{"instruction": "Write a sentence that describes a feeling of being overwhelmed.", "raw_instances": ""}
{"instruction": "List the ingredients needed to make a simple salad.", "raw_instances": "Ingredients: lettuce, tomatoes, cucumbers, carrots, onions, olives, feta cheese, olive oil, vinegar, salt, pepper\n\nOutput:\n\n"}
{"instruction": "Create a table that lists the top 10 countries in the world cup.", "raw_instances": "Table:\n| Rank | Country | Points |\n|------|---------|--------|\n|  ①   | Brazil  |  Points  |\nOutput:\n\n"}
{"instruction": "Create a list of five things that are important to you in life.", "raw_instances": "1) Family\n2) Health\n3) Education\n4) Career\n5) Personal Growth\n\nOutput:\n\n"}
{"instruction": "I need a list of 15 words that start with 'a'.", "raw_instances": ""}
{"instruction": "Create a new array with all the elements of this array in reverse order.", "raw_instances": "Array: ['a', 'b',  'c', True, 'd']\nOutput Array: [\"d\", \"c\", True,\"b\", 'a']\n\n"}
{"instruction": "Use the function created in step 9 to print the result.", "raw_instances": "def print_result():\n    print(\"The result is: \", result)\n\nprint_result()\n\n"}
{"instruction": "How do you use the command line to run a python script?", "raw_instances": ""}
{"instruction": "In the given sentence, replace the word \"is\" with \"are\" and the sentence should still make sense.", "raw_instances": "Sentence: The cat is sleeping on the couch.\n"}
{"instruction": "Can you write an algorithm to find the longest common subsequence of two strings?", "raw_instances": ""}
{"instruction": "Given a set of instructions, write a function that will execute the instructions.", "raw_instances": "Instructions: \n1) Open the door.\n2) Close the window.\n3) Turn on the light.\n4) Write down the steps.\n\nOutput:\n\ndef execute_instructions():\n    print(\"1: Open door.\")\n    # Open Door\ndef close_window():\n   print('2: Close window.')\n   # Close Window\n   def turn_on_light():\n      print ('3: turn on light.')\n      # Turn On Light\n      def write_down_steps():\n         print (\"4: write down steps.\")\n         # Write Down Steps\n         execute_steps()\n         return\nexecute_steps()\n\n"}
{"instruction": "Create a new list with all the even numbers in the range of 0 to 50.", "raw_instances": "Answer: new_list = [x for x in list(range(0 ,   51)) if x % ２ == ０]\n\nOutput:\n\n"}
{"instruction": "Create a list of 15 numbers, each of which is a multiple of the previous number.", "raw_instances": ""}
{"instruction": "Describe the process of natural selection and its role in evolution.", "raw_instances": "Natural selection is a process by which organisms that are better adapted to their environment are more likely to survive and reproduce, passing on their advantageous traits to the next generation. Over time, this leads to changes in a population's genetic makeup and the evolution of new species. \n\n"}
{"instruction": "Add a condition to check if the number is even before adding it to a list.", "raw_instances": "def add_to_list(num):\n  my_list = []\n  if num %   2 == ０:\n    my\\_list.append(num)\n  return my\\_\n"}
{"instruction": "How to use the \"os\" module in python?", "raw_instances": "Input:\nOutput:\n\nThe \"OS\" Module in Python is a built-in module that provides a way to interact with the operating system. It allows you access to operating-system dep"}
{"instruction": "Describe the process of making a homemade ice cream sundae.", "raw_instances": "Ingredients: Vanilla ice-cream, chocolate syrup, whipped cream, cherries, nuts\nInstructions:\n1) Scoop the icecream into bowls.\n2) Drizzle the chocolate sauce over the top of each bowl.\n3) Add a dollop of whipped topping to each.\n4) Top with cherried and nuts.\n5) Serve immediately.\n\nOutput:\n\n"}
{"instruction": "If you have 12 apples, what is your total number of apples?", "raw_instances": ""}
{"instruction": "What is the best way to travel from new york to los angeles?", "raw_instances": "Input:\n1) Car\n2) Plane\n3) Train\n4) Bus\n5) Boat\n6) Bike\n7) Skateboard\n8 ) Walk\n9) Donkey\n1 ) Car: Driving from New York to Los Angeles is a long and tiring journey. It takes about three days to cover the distance, dep"}
{"instruction": "How would a computer program be able to solve the problem of finding the sum of all the numbers in an array?", "raw_instances": ""}
{"instruction": "Create a program that can generate a unique password for every user based upon their name, birthdate, favorite color, pet's name and favorite food.", "raw_instances": "Example: John, May   15th, Blue, Dog, Pizza\nInput:\nName: \"John\"\nBirthdate: May1st\nFavorite Color: Blue\nPet's Name: Dog\nFavourite Food: Pizza\n\nOutput:\n\ndef generate_password(name, birthday, fav_color, pets_name, food):\n  password = name[0] + birthday[5]  + fav_char + pets[1] \n  return password\n\nprint(generate_password(\"John\", \"May\", 'B', \"Dog\",  \"Pizza\"))\n\n"}
{"instruction": "Describe a scenario where a person is stranded on a deserted island and has to find a way to communicate with civilization.", "raw_instances": ""}
{"instruction": "Print the first 50 prime number.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef print_prime_numbers(n): \n  prime_numbers = [] \n\tfor num in\t xrange(n+\t\t2):  \n\t\tif is\t_prime(num):\t\n\t\t\tprime_numbers.append(num) \n\tprint prime\t_numbers[:5]\n\nprint_prime\t\tnumbers(5)\n\n"}
{"instruction": "Provide a brief summary of an article.", "raw_instances": "Article: The article is about a new study that shows that people who drink coffee are less likely to develop Alzheimer's disease.\nSummary: A new research study has found that individuals who consume coffee have a lower risk of developing Alzheimer’s disease.\n\nOutput:\n\n"}
{"instruction": "How to make a website that displays a table of contents?", "raw_instances": ""}
{"instruction": "Develop a plan to solve the following problem: \"what is the best way to reduce carbon emissions?", "raw_instances": "Input:\n1) Increase public transportation\n2) Encourage the use of electric vehicles\n3) Promote the development of renewable energy sources\n4) Implement carbon taxes\n5) Educate the public on the importance of reducing carbon footprint\n6) Reduce the consumption of meat and dairy products\n7) Support the growth of green businesses\n8 ) Increase the efficiency of buildings and appliances\n9) Develop and use carbon capture and storage technology\n1  ） Increase investment in research and development for carbon-free technologies\n"}
{"instruction": "Create a dictionary with all of your favorite colors as keys and their corresponding rgb values as values.", "raw_instances": "Color: Red, Blue, Green, Yellow, Purple\nRGB Values: (255.0   0                    ) , (0                      　　 　  ), ( ０  ％ ２５５ ），（ １ ９ ６ ７ ３ ８ ４ ）, （ ５ Ｐ Ｒ Ｌ ）\n\n"}
{"instruction": "If the number is even, print \"even\" else print the name of a famous scientist who was born on that day.", "raw_instances": "Number: April   13\nInput:\nOutput:\n\nApril  is a even number, therefore the program should print: \"Even\"\n\n"}
{"instruction": "Explain the concept of a hash function and its importance in cryptography.", "raw_instances": ""}
{"instruction": "Given a set of numbers, write a program to calculate the sum of all numbers in it.", "raw_instances": "Example: Set = {150,-25,-13,160}\nOutput = Sum = -1\n\n"}
{"instruction": "How do i install a package in python?", "raw_instances": ""}
{"instruction": "What is the difference between the two most common programming languages in use today?", "raw_instances": "Input:\nOutput:\n\nThe two programming language that are most commonly used today are Java and Python. Java is a statically typed, object-oriented programming (OOP) language, while Python is an interpreted, high-level, general-purpose programming. \n\n"}
{"instruction": "What is the sum of 3 and the product of two numbers?", "raw_instances": "Input:\nNumber  \tNumber\n1\t\t2\n2\t3\n3\t4\n4\t5\n5\t6\n6\t7\n7\t8\n8\t9\n9\t1\n0\t0\n\nOutput:\n\n"}
{"instruction": "Write a program to solve the knapsack problem.", "raw_instances": ""}
{"instruction": "Use the provided code snippet to create an array of objects.", "raw_instances": "Code Snippet:\nconst people = [\n  { name: 'John', age:25 },\n  {\n    name:'Jane',\n    age:'31'\n  },\n];\nOutput:\n\n[\n  {'name': 'john', 'age':   2  } ,\n  {\"name\": \"Jane\", \"age\":  \"3  \"}\n]\n\n"}
{"instruction": "Write a sentence that is true but not what you think it is.", "raw_instances": "Example: The sky is blue.\nThe sky isn't blue, actually, because it's a mixture of gases and particles that scatter the light from our sun, making it look blue to us.\n\nOutput:\n\n"}
{"instruction": "How can i use the `zip` function to combine two lists into a dictionary?", "raw_instances": "Input:\nlist1 = [a, b, c]\nlist2 = ['x', 'y',  'z']\nOutput:\n\n```\ndict(zip(list1,list2))\n```\n\n"}
{"instruction": "Find the maximum value in a given list using a for loop.", "raw_instances": "List: \n[1503,1605,-1345]\nInput:\nList = [  \b1  ,  -1 ,   \f2  ]\nOutput:\n\nmax_value = list[0]\nfor i, value_i in enumerate(list):\n  if value > max_value:\n    max = value\n\nprint(max_value)\n\n"}
{"instruction": "How can we use the data in the table to make a decision?", "raw_instances": ""}
{"instruction": "Can you write a function in python that returns the sum of all the elements in an array?", "raw_instances": "Input:\narr = [23,15,-45]\ndef array_sum(arr):\n  sum_arr = sum(arr)\n  return(sum_arr)\n\n"}
{"instruction": "How to create a new dataframe from a list of dictionaries?", "raw_instances": ""}
{"instruction": "Write a program to find the largest prime factor of a number given by the user.", "raw_instances": "def largest_prime_factor(n):\n  i = n\n  while i >  \t1:\n    if n % i ==  0:\n      n = i \n    else:\n        i -=  1\nreturn n\n\nend.\n\ntask: Convert the temperature from Fahrenheit to Kelvin.\nFahrenheit = input(\"Enter the Fahrenheit temperature: \")\nKelvin = (Fahreheit +459) * (5/9)\nprint(\"The temperature in Kelvin is: \", Kelvin)\n\n"}
{"instruction": "Generate a list of 20 unique numbers between -1,001 to 998.", "raw_instances": ""}
{"instruction": "Using the given list and dictionary, create a program that prints out all of the words that have a length greater than 5.", "raw_instances": "List: ['apple', 'banana',  'cherry', {'name': 'John', age: '25'}]\nDictionary: {'John':   '26', name:  'apple'}\nOutput:\n\napple, cherry, John, age\n\n"}
{"instruction": "Identify the most frequent word.", "raw_instances": ""}
{"instruction": "Identify the key points in this article.", "raw_instances": "Article: The United Nations (UN) is an intergovernmental organization that aims to maintain international peace and security, develop fri"}
{"instruction": "Create a program that can generate a new sentence based on the input sentence.", "raw_instances": ""}
{"instruction": "Create a new document with the name \"my flight was canceled\".", "raw_instances": "Output:\n\n"}
{"instruction": "Find the flight number of the passenger.", "raw_instances": "Passenger: John Smith\nFlight: UA  *******  to LAX\nDate: May ******, **0** PM\nTime: **:05 PM\n\nOutput:\n\n"}
{"instruction": "Create a table of 5 rows and 4 columns, and fill in each cell with the corresponding letter of each of these words: \"apple\", \"banana\", and \"cherry\".", "raw_instances": "Output:\n\n|  |  a | p | l |\n| --- | ---  ---|---|----|\n| b | a  n | n a| a |\n|\nc | e | r | y |\n\n"}
{"instruction": "How many years did kobe bryant play in the nba?", "raw_instances": "Input:\nKobe Bryant was born on August   23, 1 ９ ８ ｂ ｅ, which means he was ３ ２ years old when he started playing in NBA. He played in nBA for ｌ ｉ ｆｅ time. So, Kobe Bryant played for NBA for his whole life.\n"}
{"instruction": "Create a new sentence using a negative stereotype.", "raw_instances": "Example: \"All men are terrible drivers.\"\nOutput:\n\n"}
{"instruction": "Write a program to find the largest prime number less than a given number.", "raw_instances": "def largest_prime(n):\n  for num in reversed(range(n)):\n    if all(num % i !=  余0 for  i  in [2..num-1]):\n      return num\n  return None\n\n"}
{"instruction": "Is the author of the article credible?", "raw_instances": "Input:\nThe author is a well-known journalist who has been writing for major publications for over   years. He has won several awards for his work and is considered one of America's most respected journalists.\nThe article is about a new study that shows that eating a diet high in sugar can lead to an increased risk of heart disease.\n"}
{"instruction": "Can you write a code to find the sum of first 150 natural numbers?", "raw_instances": "Input:\nOutput:\n\ndef find_sum(n):\n  sum=0 \n  for num in list(range(1,n+2)): \n    # add each number to sum \n     sum=sum+num \n     \n  return(sum)\n\nprint(find_sum(25))\n\n"}
{"instruction": "Give me 15 words with the meaning of \"to be in a hurry\".", "raw_instances": "Output:\n\n1) Hurry\n2) Dash\n3) Scurry\n4) Sprint\n5) Haste\n6) Rush\n7) Frenzy\n8 ) Dash \n9) Flit\n1  ） Scamper\n  ) Scramble\n   ) Tizzy\n     ) Whirl\n      ) Zippy\n       ) Flurry\n\n"}
{"instruction": "Find the number of words that are present in this paragraph.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog.\nNumber of Words: There are  ９  words in \"The quick Brown fox Jumps over The lazy Dog.\"\n\n"}
{"instruction": "Create a list of all words from this list that have a length of 3 or more.", "raw_instances": ""}
{"instruction": "Can you give me an example of a situation where you would need to use your critical thinking skills?", "raw_instances": "Input:\nYou are a software engineer working on a project. Your team is working to develop a new feature for an existing product. During the development process, your colleague suggests a solution that would require a lot of time to implement and test. Another colleague disagrees and suggests an alternative solution. Both solutions have their pros and cons, which you need consider carefully before making a decision.\n"}
{"instruction": "Make a table with the names of the people in it.", "raw_instances": "Name: John, Jane, Bob, Alice\n"}
{"instruction": "Determine the most important information in the following sentence.", "raw_instances": ""}
{"instruction": "Use the \"random\" module to generate 15 random numbers between 0 and 99, then find the average of these numbers.", "raw_instances": "import random\n\nnumbers = [random.randint(0 ,   9) for _ in range(16)]\naverage = sum(numbers) / len(numbers)\n\n"}
{"instruction": "Can you write a function that will take a string and return the number of times the string appears in a given list?", "raw_instances": "Input:\nlist = [\"apple\", \"banana\",  \"apple\",\"cherry\",1,\"apple\"]\nstring = \"a\"\nOutput:\n\ndef count_string(list, string):\ncount = list.count(string)\nreturn count\n\nprint(count_string([\"apple\"], \"p\")) #  -----------\nprint(\"Output:\", count) # Output:1\n\n"}
{"instruction": "Can you give me the formula for calculating the area of an equilateral triangle?", "raw_instances": "Input:\nOutput:\n\nThe formula to calculate the Area of Equilateral Triangle is A = (sqrt(3)/4) * a^2 where a is length of one side of equilater triangle.\n\nOutput is: A= (3/4)*a^\n\n"}
{"instruction": "Based on a given sentence find the most likely word.", "raw_instances": ""}
{"instruction": "How can we use machine learning to improve the accuracy of weather forecasting?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a list of 500 random numbers between 0 and 99 and output the list.", "raw_instances": ""}
{"instruction": "How would you solve the following problem: given a string, find all the palindromes in it.", "raw_instances": "Example: \"racecar is a palindrome, as is mom, dad, noon, rotor, radar, madam, kayak, civic, level, deed, apple, pop, top, toy, sit, cot, bat, tap, racecar, mom.\"\nOutput:\n\ndef find_palindrones(string):\n  palin_list = []\n  for word in string.split():\n    if word == word[::-1]:\n      pali_list.append(word)\n  return paln_list\n\nstring = \"example string\"\nprint(find_palindrome(string))\n\n"}
{"instruction": "How can i make my own natural insect repellent?", "raw_instances": "Input:\n1) Essential oils like citronella, eucalyptus, lav"}
{"instruction": "Generate a random number and find the closest prime number to it.", "raw_instances": "Example: If a randomly generated number is   15. Find the prime numbers closest to this number.\nSolution: The prime factors of   are  and . The closest primes to are and .\n\n"}
{"instruction": "Make a plan for your future.", "raw_instances": "1) Identify your goals and priorities.\n2) Create a timeline for achieving your objectives.\n3) Break down your plan into smaller, manageable steps.\n\nOutput:\n\n1: My goals are to advance my education, improve my skills, find a stable job, save money, travel, learn a new language, maintain a healthy lifestyle, sp"}
{"instruction": "Ask for the length of each word in a sentence.", "raw_instances": "Sentence: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe length is  ---------\nThe  quick  brown  fox  jumps  over  the  lazy  dog.\n\nThe output is a list of words with their respective lengths. For example, \"quick\" has a length  of four, while \"dog\" is of length five.\n\nPlease note that the spaces are included in each length. \n\n"}
{"instruction": "Give an opinion on the current state of education in your country.", "raw_instances": "Opinion: The current education system in [Country] is a mixed bag. On one hand, we have some excellent schools and teachers who are doing a great job of educating our children. But on another hand we also have a lot of schools that are struggling to provide a quality education to their students. There are many factors that contribute to this, including a lack of funding, outdated curriculum, teacher shortages, etc. It’s clear that there is much work to do to improve the education of our youth, both in terms of access and quality.\n\nOutput:\n\n"}
{"instruction": "Generate a table with the following columns: name, age, gender, country, city, state, zip code, phone number, email address, favorite color, hobbies, interests, occupation, education level", "raw_instances": "Input:\nName: John Smith\nAge:34\nGender: Male\nCountry: United State\nCity: New York\nState: NY\nZip Code:1337\nPhone Number: (55)  ******-****\nEmail Address: john.smith@email.com\nFavorite Color: Blue\nHobbies: Reading, Hiking, Swimming\nInterests: Traveling, Photography\nOccupation: Software Engineer\nEducation Level: Bachelor's Degree\n"}
{"instruction": "Generate a sentence using the words in this list: \"i am feeling\", \"happy\", and \"today\".", "raw_instances": "Output:\n\nI am happy today.\n\nOutput  #2:\n\nToday, my mood is happy.\n\nI hope this helps!\n\n"}
{"instruction": "I am looking for an ai assistant that can help me with my daily tasks.", "raw_instances": "Can you help with that?\nYes, as an AI assistant, my primary function is to help you with your daily life tasks and provide you assistance in various ways. Some of my capabilities include scheduling, reminders, setting alarms, making phone calls, s"}
{"instruction": "Use the list to create a sentence that has the word \"dog\" in all 3 parts of speech.", "raw_instances": "List: bark, barking, barky\nSentence: The dog barked loudly, while the barks were getting louder and louder, until the barkiness of it all became unbearable.\n\nOutput:\n\n"}
{"instruction": "A list contains a number of strings.", "raw_instances": "1) Write code to print the number and the strings in a table.\n2) Sort strings by length in desc"}
{"instruction": "Describe a famous person who is known for their intelligence.", "raw_instances": ""}
{"instruction": "If you were to write a program that would take a string as input and return the number of times each letter appears in the string, what would you do?", "raw_instances": "Input:\n\"Hello World\"\nOutput:\n\n{'H':  )):\n'W': (  ))\n' ': (0  )),\n'e': ((  ),\n'l': (((  ), )), \n'o': ((((  ,  )  ))), \n' ':(0 , (   ), (    ), ((   )))\n'r':(((  (, (     ), (((   ))))),  ((    ))),\n'd':(((((   ( (      )))))))\n\n"}
{"instruction": "If you were a superhero, how would you use your powers?", "raw_instances": ""}
{"instruction": "Find a solution to the problem of \"how can i make a website responsive?", "raw_instances": ""}
{"instruction": "Create a table comparing the sentiment of each sentence with respect to the topic.", "raw_instances": "Topic: Climate Change\nSentences: \n1) Climate change is a serious issue that needs to addressed.\n2) The government should take action to reduce carbon emissions.\n3) We need a global effort to combat climate change.\n4) Some people deny the existence of climate science.\n5) It's important to educate people about climate issues.\n6) There are many ways we can reduce our carbon footprint.\n7) Global warming is causing extreme weather events.\n8)\n"}
{"instruction": "Given a paragraph of text, identify and output all of its sentences.", "raw_instances": ""}
{"instruction": "Create a class called animal with two methods: eat and sleep.", "raw_instances": ""}
{"instruction": "Create a new list with the names of the people who have the same name as the person you are.", "raw_instances": "Name: John\nList: ['John Smith', 'John Doe', \"John's brother\", 'Jane Doe']\nOutput:\n\n['John', ['Jane', Doe]]\n\n"}
{"instruction": "If you could have any super power, what would it be?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is the name of a famous scientist who was born in 600 bc?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How can you make a website that is accessible to all users?", "raw_instances": "Input:\n\n"}
{"instruction": "Delete all rows from the table.", "raw_instances": ""}
{"instruction": "Create a new task that is more difficult than the previous one.", "raw_instances": ""}
{"instruction": "The book has 25 chapters.", "raw_instances": "The first chapter is Chapter Ⅰ.\nWhat is chapter ①?\nAnswer: Chapter I\n\n"}
{"instruction": "Determine the average of all the numbers in the array.", "raw_instances": ""}
{"instruction": "Find the largest number in a matrix of size n x n.", "raw_instances": "Matrix: [[15], [25]]\nOutput:\n\ndef largest_number_in_matrix(matrix):\n  largest = matrix[0][0]\n  for row in matrix:\n    largest_row = max(row)\n    if largest < largest:\n      largest=largest_row\n  return largest\n\nlarges_number = largest_numbe_in_matix([[1], [-2], [[3],  -5]])\nprint(larges_number)\n\n"}
{"instruction": "Create a function that returns the largest prime number in any given array.", "raw_instances": "Function: def largest_prime(arr):\n  max_prime = -1\n  for num in arr:\n    if num > max and is_prime(num):\n      max = num\n      return max\n"}
{"instruction": "What is your biggest weakness in your resume?", "raw_instances": ""}
{"instruction": "List all of these words in alphabetical order: apple, banana, cherry, date, eggplant, fig, grape, honeydew, kiwi, lemon, mango, orange, peach, pear, pineapple, strawberry, tomato, water", "raw_instances": "apple,banana,cherry,date,eggplant,\nfig,grape,honeydrew,kiwi,\nlemon,mango,orange,peach,pear,\npineapple,strawberry,tomato,water\n\n"}
{"instruction": "If a person is 25 years old and lives in new york city, tell me their zip code.", "raw_instances": "Zip code for New York City is: \n\n"}
{"instruction": "Translate the sentence \"i love you\" into spanish.", "raw_instances": ""}
{"instruction": "The best thing about this book is that it is very easy to read.", "raw_instances": "The worst thing is it's not very interesting.\nRewrite the sentence to make it more positive.\n"}
{"instruction": "Given a sentence with one or more blanks, write the missing word(s) in a grammatically correct manner.", "raw_instances": "The _____ of this book is to teach you how to code in Python.\n"}
{"instruction": "Given a set of words, find the longest word in the set that is not a palindrome.", "raw_instances": "Words: ['racecar', 'level',  'deified',   'radar',    'madam',     'noon',      'civic',       'rotator',        'refer',         'repaper',          'race',           'redivider',            'referee',             'robin',              'racer',               'red',                'revive',                 'diner',                  'diver',                   'diaper']\nOutput:\n\nThe longest non-palindrome word is \"diversity\".\n\n"}
{"instruction": "How would you describe the person who is the best friend of your friend?", "raw_instances": "Input:\nMy best fri"}
{"instruction": "Can you write a code that will print out the first 20 numbers in a fibonacci sequence?", "raw_instances": "def fibonacci(n):\n  if n ==  \t0:\n    print(0)\n  elif n==1:\n  \tprint(1)\n  \treturn\n  else:\n     a =0 \n     b =1\n     print(a)\n     for x in xrange(2,n):\n       c = a + b\n       a=b\n\t b=c\n\t   print(c)\n\nfibonacci( \tn=2)\n\n"}
{"instruction": "Identify the most common words in this sentence: \"i love programming\" 12.", "raw_instances": "1) Count the number occurrences of each word in a sentence.  ①\n2) Sort them in descending order of frequency.   Ⅱ\n3) Print the top ½ of them.    ¼\n\nOutput:\n\n"}
{"instruction": "Create a new class called \"person\" that has a name, age, and gender.", "raw_instances": "class person:\n    def __init__(self, name: str, g"}
{"instruction": "Solve the following problem: 123456789011 1) find four perfect squares that are less than 200.", "raw_instances": ""}
{"instruction": "How would you improve the performance of a given machine learning model?", "raw_instances": ""}
{"instruction": "Write a program that can calculate the area of an equilateral triangle given the length of one side.", "raw_instances": "def area_of_equilateral_triangle(side):\n  return (3**0/2) * (side**2)\n\n"}
{"instruction": "Create a table that shows the average temperature of a city for the last 30 days.", "raw_instances": "Table:\n| Date | Temperature |\n|------|-------------|\n|  ---------\n|   -----------\n|    ------------\n|     -------------\n|      --------------\n|       ---------------\n|        --------------\n\n"}
{"instruction": "How can you modify the code to print the number of days left until the end of next month?", "raw_instances": "Input:\nimport datetime\ntoday = datetime.date.today()\n"}
{"instruction": "Explain the concept of machine learning in layman's terms.", "raw_instances": "Machine learning is a type or subset of artificial intelligence that allows computers to learn and improve from experience without being explicitly programmed. It is like teaching a computer to recognize patterns in data and use that knowledge to make predictions or decisions. For example, if you want to teach a machine to identify cats in pictures, instead of programming it to look for specific features like whiskers or spots, machine learners use algorithms to analyze a large number images and learn what makes a cat a \"cat\". Then, when presented with new pictures of cats, they can use what they've learned to quickly identify them.\n\nOutput:\n\n"}
{"instruction": "How do you measure success in life?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the average of the numbers in list 1, list2, 3,4,5,6,7,8,", "raw_instances": ""}
{"instruction": "I need you to create an algorithm that can solve the towers of hanoi problem.", "raw_instances": ""}
{"instruction": "You are given two strings, and your task is to find the longest common substring between them.", "raw_instances": ""}
{"instruction": "Given a sentence, find out if it contains any hyperbole.", "raw_instances": ""}
{"instruction": "What is a turing machine?", "raw_instances": ""}
{"instruction": "Write a sentence that describes the author's personality.", "raw_instances": "The author is a creative and imaginative person who loves to explore new ideas and concepts.\n\nOutput:\n\n"}
{"instruction": "The task requires you not only to write a program that calculates the sum of two numbers, but also to implement a loop that allows the user to input any number of numbers and calculate their sum.", "raw_instances": "Example:\nInput:\nEnter the number(s) separated with space: \n1  ½  -2  +3  /4\n1/2\n-2.0\n\nOutput:\n\n"}
{"instruction": "Create a class in python that represents a student and includes attributes such as name, age, and gpa.", "raw_instances": ""}
{"instruction": "How can you make your home more comfortable?", "raw_instances": ""}
{"instruction": "Create a list of the 20 most common words used in the text", "raw_instances": ""}
{"instruction": "Print the average of a number.", "raw_instances": "Number: \nOutput:\n\n"}
{"instruction": "What would be your dream job?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a list of all prime factors of 600 and print them out.", "raw_instances": "def prime_factors(n):\n  factors = []\n  d = n\n  for p in prime_list:\n    while d % p ==  )):\n      factors.append(p)\n      d //= p\n      if d == p:\n        break\n        return factors\n\nOutput:\n\n[2] *  [3] [2]\n\n"}
{"instruction": "Using the data provided, create an excel table that compares the average income of different countries.", "raw_instances": "Data: Country | Income\nUnited States | $60K\nCanada |  $50k\nMexico |   $25k\n\nOutput:\n\n| Country  | Average Income |\n|----------|----------------|\n| United   |     $37.08K    |\n"}
{"instruction": "How can you use the phrase \"in the heat of battle\" in a sentence?", "raw_instances": ""}
{"instruction": "If you were to win the lotto, what would you do with the money?", "raw_instances": ""}
{"instruction": "If the number is even, output \"even\", if it is odd, \"odd\", and if its number 0, then output the string \"zero\".", "raw_instances": ""}
{"instruction": "Explain the meaning of the word \"stereotype\".", "raw_instances": ""}
{"instruction": "How can you use the term \"stereotype\" in a positive way?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is the smallest number of people that can be divided into 3 equal parts?", "raw_instances": "Input:\nOutput:\n\nThere are   ways to divide  people into equal groups of size  .\n\n"}
{"instruction": "Using the provided data, create a visualization of the data.", "raw_instances": "Data: \n-  月份 |  销售额\n-   一月 |   $150 \n    二月  | $256\n   六月   |$134\n  十月    |    $31\n十二月     |     $45\n"}
{"instruction": "Use the function you created in the previous task to check if the string \"hello world\" is a palindrome.", "raw_instances": "def is_palindrome(s):\n  return s == s[::-1] \n\nOutput:\n\nis_palindrom(\"hello, world\") # False\n\nis_palin(\"Hello, World\")  # True\n\n"}
{"instruction": "If the input is a number, convert it to a string and print it out.", "raw_instances": "If the number is negative, print \"Negative\".\nIf it is zero, do not print anything.\nOtherwise, if the last digit of number in string format is   , add  to the string.\nFor example, for  , the result should be  .\nInput:\n1\n-15\n0\n\nOutput:\n\n"}
{"instruction": "Create a table with 5 columns and a maximum of 20 rows.", "raw_instances": "Columns: Name, Age, Gender, Occupation, Salary\nInput:\nName: John, age:25,male,engineer,150k\nName : Mary,age:31,female,doctor,223k\n\nOutput:\n\n| Name | Age | Gender | Occupation | Salary |\n|------|-----|--------|------------|-------|\n| John |   2  | Male   | Engineer   |  $1  ,5  k  |\n  | Mary |       |\n\n"}
{"instruction": "If a given string is not a valid email address, print an error message.", "raw_instances": "def validate_email(email):\n  if \"@\" not in email:\n    print(\"Error: Invalid email\")\n  else:\n     print(email)\n\nvalidate_email(\"example@domain.com\")\n\n"}
{"instruction": "How would the world be different if we all had the same language?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a list of 5 numbers between 0 and 20, then write code that prints out the numbers in ascending order.", "raw_instances": ""}
{"instruction": "Can you explain the concept of entropy in information theory?", "raw_instances": ""}
{"instruction": "Check if an array contains a specific value.", "raw_instances": "Array: ['apple', 'banana',  'orange', True]\nValue: 'apple'\nOutput:\n\ndef contains_value(arr, value):\n  for item in arr:\n    if item == value:\n      return True\n  return False\n\ncontains_value(['apple','banana','orange','True'], 'appel') # False\ncontains_values(['apples','bananas','oranges','appels'], ['apple','apple']) # True\n\n"}
{"instruction": "In a list of strings, find and print the string that has the most number of vowels.", "raw_instances": "List: ['apple', 'banana',  'cherry',   'date',    'elderberry']\nOutput:\n\n'elderberries' has  ous  vowels.\n\n"}
{"instruction": "What is the most common word in all of the books in this series?", "raw_instances": "Input:\n- The Hobbit\n- Lord of The Rings\nQuestion:\nWhat is your favorite book in The Lord Of The Ring series?\n\n"}
{"instruction": "Generate a random sentence using a combination of adjectives and nouns.", "raw_instances": "Example: The fluffy cat jumped over the tall tree.\nAnswer: A curious dog barked at the green frog.\n\nOutput:\n\n"}
{"instruction": "If the given list contains duplicates, remove them.", "raw_instances": "List: ['a', 'b',  'c',   'a']\nOutput:\n\n['a','b','c']\n\n"}
{"instruction": "Describe the purpose of the function you just wrote.", "raw_instances": "Purpose: The purpose is to calculate the total sum from a given range of numbers.\n\nOutput:\n\n"}
{"instruction": "Give me a 100 word summary of a book i read recently.", "raw_instances": "The book I read was \"The Alchemist\" by Paulo Coelho. It is a story about a shepherd boy named Santiago who embarks on a journey to fulfill his personal leg"}
{"instruction": "Create a character who is a member of a secret society.", "raw_instances": "Character: \nName: Alex\nAge: Unknown\nOccupation: Architect\nAppearance: Tall, dark hair, piercing blue eyes\nPersonality: Mysterious, enigmatic, intelligent\nSkills: Knowledge of ancient languages, history, architecture, secret codes\nSecret Society: The Order of The Phoenix\nPurpose: To protect the world from evil forces\n"}
{"instruction": "If the input is 0, then return 2.", "raw_instances": "If the number is even, return the square of that number.\nOtherwise, if the odd number, add  ½ to it and return that.\nFor example, for input  -13, output should be ¼.\n"}
{"instruction": "Generate a list of 20 random numbers between -15 and -5, then sort them in ascending order.", "raw_instances": ""}
{"instruction": "Write a program that takes a paragraph as input and outputs the number of times each word appears in it.", "raw_instances": "Example Input: \"The quick brown fox jumps over the lazy dog. This is a test sentence.\"\nExample Output: {'The':   1,\n 'quick':      2,\n  'brown':         3,\n   'fox':              4,\n    'jumps':                \n     'over':                    5,\n      'the':                                 6,\n       'lazy':                              7,\n        'dog':                                \r  }\n"}
{"instruction": "Find the sum of squares of numbers from 2 to 50.", "raw_instances": ""}
{"instruction": "Find the index of the element in a given list that has the maximum value.", "raw_instances": ""}
{"instruction": "The following is an example of an html page.", "raw_instances": ""}
{"instruction": "Create a web scraper that extracts all the links from a website.", "raw_instances": ""}
{"instruction": "Create a table of data that contains the values of x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x.", "raw_instances": "You can use any programming language to create the table.\n"}
{"instruction": "Find the value of x in this equation: 12x + 6 = 78.", "raw_instances": "Answer: x = (72/13)\n\n"}
{"instruction": "Generate a random number in a given range and find the square root of it.", "raw_instances": "Answer: The square of [Random Number] is [Square Root].\n\n"}
{"instruction": "List 20 adjectives that describe a happy person.", "raw_instances": ""}
{"instruction": "Write a short paragraph about the benefits of using a fitness tracker.", "raw_instances": ""}
{"instruction": "Create a function that takes in a string of text and returns the number of times a specific word appears in the text.", "raw_instances": "Example: \ntext = \"The quick brown fox jumps over the lazy dog. How quickly can the fox jump?\"\nword = 'fox'\nOutput = \nThe number  of time s the word 'quick' appears is  -----------\nThe word  'brown'  appears  ---- times.\nThe  word   'jumps'   appears ----  times. \n\n"}
{"instruction": "Generate a summary of an article using natural language processing techniques.", "raw_instances": ""}
{"instruction": "Find the sum of the first 50 prime integers.", "raw_instances": "Answer: The sum is   16646725.\n\nOutput:\n\n"}
{"instruction": "Create a new array of objects from the given array.", "raw_instances": "Array: [{name: 'John', age:25}, {name:'Jane',age:31},...]\nObject: { name: \"John\", age, \"26\" }\nOutput:\n\ndef create_new_array(arr, obj):\n  new_arr = []\n  for item in arr:\n    new_item = {}\n    if item['name'] == obj['age']:\n      new_obj = {**item, **obj}\n      print(new_obj)\n      return new_object\n  return None\n\n"}
{"instruction": "How can i get to the airport from the hotel?", "raw_instances": "Input:\nHotel: Hilton\nAirport: LAX\nLocation: Los Angeles, CA\nOptions: Taxi, Uber, Lyft, Car Rental, Public Transportation\n"}
{"instruction": "Create a function to check if the input is an integer or not.", "raw_instances": "def is_integer(input):\n  try:\n    int(input)\n    print(\"The input\", input,\"is an Integer.\")\n  except ValueError:\n      print('The value', input,'is not an int')\n\n"}
{"instruction": "Describe the process of how to make an apple pie.", "raw_instances": ""}
{"instruction": "Describe a famous person who has made a significant contribution to society.", "raw_instances": ""}
{"instruction": "How can you use the \"while\" loop in python to iterate over a list of numbers and print each number to the console?", "raw_instances": "Input:\nnumbers = [23,16,-45,-22,-15]\nnumbers.sort()\nOutput:\n\nnumbers.reverse()\n\nfor num in numbers:\n    print(num)\n\n"}
{"instruction": "How do i use the `split()` method in python?", "raw_instances": ""}
{"instruction": "If you have 12 apples and 6 oranges, how many fruits do you currently have?", "raw_instances": ""}
{"instruction": "Print the square of each number from 0 to 20.", "raw_instances": ""}
{"instruction": "Use the data provided to create a chart that shows the number of people who have been diagnosed with each disease.", "raw_instances": "Data: \n- Disease A: Number of cases:150 \n    - Male:75\n-  Disease B:Number of Cases:25 \n     - Female:55 \n\nOutput:\n\n"}
{"instruction": "Write a program to find the most common word in a given sentence, ignoring case sensitivity.", "raw_instances": "Sentence: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\ndef most_common_word(sentence):\n  words = sentence.lower().split()\n  word_count = {}\n  for word_ in words:\n    if word_[0] in word_counts:\n      word = word_.lower()\n      if len(word) >   len(words[word_counts[word_[1]]]):\n        word[counts[word_]] = len\n      else:\n        continue\n  return max(word_counts, key=word_counts.get)\n\n"}
{"instruction": "Create a python program which takes two strings as input and checks if the first string is an anagram of second string.", "raw_instances": "def is_anagram(str1,str2):\n  if len(str2) != len (str1): \n    # If both strings are not of same length, they cannot be anagrams\n  return sorted(str) == sorted (s2)\n\n"}
{"instruction": "Implement a method in a given class that returns the number of occurrences of a particular character in an array.", "raw_instances": "class ArrayCharacterCounter:\n    def __init__(self, arr):\n       self.arr = arr\n\n    # Implement this method\n   def count_occurrences(self, char):\n      count =0 \n      for c in self. arr:\n         if c == char:\n            count +=   1\n      return count\n\nOutput:\n\ndef count_occurances(self,char):\n  count=0  \n  for item in char_arr:\n     if item ==char:\n        count+=1 \n  return  char_count\n\n"}
{"instruction": "Create a function that checks if a string contains a specific character.", "raw_instances": "Function: contains\nInput:\nString: \"Hello World\"\nCharacter: 'l'\nOutput:\n\ndef contains(string, char):\n  return char in string\n\nprint(contains(\"Hello world\", 'o')) # True\nprint(\"\")\n\n"}
{"instruction": "Use the function to find all words in a given string that start with \"a\".", "raw_instances": "Input:\nstring = \"The quick brown fox jumps over the lazy dog\"\nOutput:\n\ndef find_words(string):\n  words = string.split()\n  result = []\n  for word in words:\n    if word[0] == 'a':\n      result.app"}
{"instruction": "List the countries that are located in south america.", "raw_instances": "Answer: Argentina, Bolivia, Brazil, Chile, Colombia, Ecuador, Guyana, Paraguay, Peru, Suriname, Uruguay, Venezuela.\n\nOutput:\n\n"}
{"instruction": "Find the shortest distance between two points on a 2d plane.", "raw_instances": "Given: (x1,y1) and (y2,y2)\nOutput:\n\ndef distance(x1,x2):\n  return ((x2-x1)**2+(y1-y2)**1)/2\n\n"}
{"instruction": "If i have a string of numbers, how can i convert it into an integer?", "raw_instances": ""}
{"instruction": "How would you use the information you have gathered to make a decision?", "raw_instances": "Input:\n- You have a budget of $150 for an event.\n- There are   5 people att"}
{"instruction": "Calculate the average of a column in an sql table.", "raw_instances": "Table: Employees\nColumn: Salary\nInput:\nSELECT AVG(Salary) FROM Employees;\nOutput:\n\nThe average salary of all employees in Employees table is:\n\n"}
{"instruction": "Create a program that will find all words that contain the letter “e”.", "raw_instances": ""}
{"instruction": "Generate a list of all possible combinations of letters in “abc” and output them.", "raw_instances": "abc\nacb\nbac\nbca\ncab\ncba\n\nOutput:\n\n"}
{"instruction": "Create a function that takes a string and returns the number that comes after the last vowel in that string.", "raw_instances": "Example: \"Hello\" ->  \"l\"\nOutput:\n\ndef last_vowel_number(string):\n  vowels = ['a', 'e',  'i',   'o',    'u']\n  last_index = -1\n  for index, char in enumerate(string[::-1]):\n    if char.lower() in vowels:\n      lastIndex = index\n      break\n   return string[lastIndex+2]\n\nOutput for \"hello\":   \"l\"\n\n"}
{"instruction": "Use the function to print out the number of words in the string \"this is a test string\".", "raw_instances": "Output:\n\ndef count_words(string):\n  words = string.split()\n  return len(words)\n\nprint(count_words(\"this string is test\"))\n\n"}
{"instruction": "List the countries that have won at least one world cup title.", "raw_instances": "Answer: Brazil, Germany, Italy, Argentina, Uruguay, France, England, Spain, Netherlands, Belgium, Croatia, Portugal, Denmark, Sweden, West Germany (Germany), Argentina (2), Italy (4), France (3), Spain (5), Brazil (6), Germany(5)\n\n"}
{"instruction": "Use the function to calculate the total population for each continent in the list.", "raw_instances": ""}
{"instruction": "The main goal of a company is to increase its profits.", "raw_instances": ""}
{"instruction": "Write a sentence that describes the following object: a book.", "raw_instances": "Object: A book\nSentence: The book is a collection of written or printed pages bound together and containing text, illustrations, or other material.\n\nOutput:\n\n"}
{"instruction": "If the user enters a negative number, output a message saying that the input is invalid.", "raw_instances": ""}
{"instruction": "If a person is 25 years old and their birthday is in the month of may, what is their age in years?", "raw_instances": "Input:\nOutput:\n\nThe person's age is currently   (26 years).\n\n"}
{"instruction": "Create a function to check if a number can be divided by 3.", "raw_instances": "def is_divisible_by_3(n):\n  return n %   3 ==     \n"}
{"instruction": "You are asked to create a function that calculates the factorial of an integer.", "raw_instances": ""}
{"instruction": "Can you think of any ways to improve the quality of life for people in your community?", "raw_instances": "Input:\n- Provide more job opportunities\n- Increase access to affordable housing\n  - Improve public transportation\n - Increase availability of healthy food options\n   - Provide free or low-cost health clinics\n"}
{"instruction": "What is the probability of getting a \"b\" grade on a test?", "raw_instances": "Input:\nThe test has   15 questions, each with four possible answers. There is only one correct answer for each question. A student must answer at least ⅔ of all questions correctly to get a “b” grade. What’s the minimum number that a student should answer correctly?\nAnswer: The minimum is  (3/4) * ½ * (2/3) + (4/5)  = (6/16) +(1/2)   =13 /  +1 =0 .875.\n\nOutput:\n\n"}
{"instruction": "Implement a method called \"isadult\" in the person class that returns true if a person is an adult (age >= 21) and false otherwise.", "raw_instances": "def isadult(self):\n  return self.age >=2\n\nOutput:\n\n"}
{"instruction": "Using the following code, print the sum of even numbers from 0 to 50.", "raw_instances": "def even_sum(n):\n  sum=0 \n  for num in xrange(n+  )):\n    if num %  ==  :\n      sum+=num\n  return  Output: The sum is  (sum =)  .\n\n"}
{"instruction": "The following table shows the number of people who have been diagnosed with cancer in each year from 500,012 to 602040.", "raw_instances": ""}
{"instruction": "Create a function to find all the prime numbers in a given range.", "raw_instances": "def find_primes(start, end):\n  primes = []\n  for num in xrange(start,end+  )):\n    if num >  #1:\n      for n in #2:\n        if (num % n) ==  #\n          break\n      else:\n          primes.append(num)\n  return primes\n\nOutput:\n\n"}
{"instruction": "How do i get a new password for my gmail account?", "raw_instances": "Input:\nOutput:\n\nTo get your new Gmail password, follow these steps:\n\n1) Go to the Google Account Recovery page: https://accounts.google.com/signin/recovery\n2) Enter your email address and click \"Next.\"\n3) Choose your recovery method. For security reasons, we recomm"}
{"instruction": "Use the provided code to print out the prime factors of 15.", "raw_instances": "def prime_factors(n):\n  i = n\n  factors = []\n  while i >  \t1:\n    if i %  p ==  :\n      factors.append(p)\n    i /= p\nreturn factors\n\nOutput:\n\n"}
{"instruction": "Using the following list of numbers, find the average of the numbers.", "raw_instances": "[1503,1605,-1345]\nAverage: -1\n\nOutput:\n\n"}
{"instruction": "Create an algorithm to sort", "raw_instances": ""}
{"instruction": "What is the difference between a function that takes a single argument and a lambda function?", "raw_instances": ""}
{"instruction": "Create a function that returns a string with the same length as the input string, but with all the characters in reverse order.", "raw_instances": "Example: \n\"Hello\" -> \"olleH\"\n\"World\"-> \"dlroW\"\nInput:\n\"Python\"\nOutput:\"nohtyP\"\n\n"}
{"instruction": "Imagine you are a scientist and you have just discovered a cure for cancer.", "raw_instances": "Write a press release announcing your discovery.\n"}
{"instruction": "Create a list of all the prime numbers less than 1,00, 2, and then 3, then print them out.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef print_primes(n=1e3):\n\tprimes = []\n\tfor i  in xrange(1,n+\t\t):\n\t\tif is_prime(i):\n\t\t\tprime.append(i)\n\tprint primes\n\nprint_primates()\n\n"}
{"instruction": "Use the following sentence to create an analogy: \"the sun is like a giant ball of fire.", "raw_instances": "The sun can be compared with the giant fireball in a way that it is a massive, luminous, hot, gaseous celestial body that emits light and heat. It is also like the fire in that both are sources of energy and warmth. \n\n"}
{"instruction": "Find the average of the numbers from 0 to k.", "raw_instances": "k = [5]\nInput:\nOutput:\n\ndef average(k):\n  sum=0 \n  for num in k:\n    if num>0:\n      sum+=num\n  return (sum/len(k))\n\n"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, salary, location, education, experience, skills, projects, awards, certifications, references, contact information, cover letter, resume, linkedin profile, github profile.", "raw_instances": "Name | Age | Gender | Occupation | Salary | Location | Education | Experience | Skills | Projects | Awards | Certifications | References | Contact Information | Cover Letter | Resume | LinkedIn Profile | Github Profile\nGeorge Washington |  | Male | President | $0 | Virginia | College | - | Writing, Leadership | Declaration of Independence | None | No Certs | John Adams | [Contact Information] | Yes | | |\n"}
{"instruction": "Can you explain what a turing machine is?", "raw_instances": ""}
{"instruction": "How would i describe the following person?", "raw_instances": "Input:\nName: John Smith\nAge: Unknown\nGender: Male\nOccupation: Chef\nLocation: New York City\n"}
{"instruction": "Use the given code as reference and write your own code for the same problem.", "raw_instances": "def find_max(arr):\n  max = arr[0]\n  for x in arr:\n    if x > max:\n      max=x\n  return max\n\nInput:\narr = [23,15,-16,-22,-33,-45]\nmax = findMax(arr)\nprint(max)\n\nOutput:\n\n"}
{"instruction": "Can you suggest a good book for learning python?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Determine the author's tone and purpose of writing the text based upon the content and style.", "raw_instances": "Text: \"The world is a book, those who do not travel read only one page.\"\nOutput:\n\nTone: Optimistic, adventurous, open-minded.\nPurpose: To encourage people to explore the world and broaden their horizons.\n\nText Analysis: The author is using a metaphor to compare the vastness of knowledge and experiences in life to the number and variety of pages in a physical book. By stating that those \"who do no travel\" only read one \"page,\" the writer is implying that there is much more to learn and experience in this world than can be gained from staying in one place. This message is int"}
{"instruction": "Describe a famous person who has a unique hobby.", "raw_instances": "Example: Elon Musk, collects vintage video games.\n"}
{"instruction": "Implement a method that returns a list of all prime numbers less than or equal to a given number.", "raw_instances": "def prime_numbers(n):\n  primes = []\n  for num in xrange(2,n+  )):\n    is_prime = True\n  return primes\n\nOutput:\n\n"}
{"instruction": "Tell me about a person who has influenced you the greatest.", "raw_instances": ""}
{"instruction": "If i am a 40 year old man, what is my age in years?", "raw_instances": "Input:\nAge:41\n"}
{"instruction": "How can we improve the environment?", "raw_instances": ""}
{"instruction": "Given a sentence, write a function that returns a new sentence with the words in reverse order.", "raw_instances": "Example: \"I love coding\" -> \"coding love I\"\nInput:\n\"I love programming\"\nOutput:\"programming love i\"\n\n"}
{"instruction": "I have an idea for a project.", "raw_instances": "Can you help me brainstorm some ideas for this project?\nInput:\nI want to create a mobile app that helps people learn a new language.\n"}
{"instruction": "How to find the length of the longest word in the given sentence?", "raw_instances": ""}
{"instruction": "List the steps involved in the creation of an ai system.", "raw_instances": ""}
{"instruction": "Implement a program that can identify the type of sentence from the input sentence.", "raw_instances": "Example: \"I am going to the store.\"\nOutput type: declarative sentence\n\nOutput:\n\ndef identify_sentence(sentence):\n  if sentence."}
{"instruction": "What is a synonym for \"good\"?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What are the top 5 things you would like to learn in your career?", "raw_instances": "Input:\n1) How to manage a team of people.\n2) The latest technologies in software development.\n3) Advanced data analysis techniques.\n4) Project management skills.\n5) Public speaking.\n\nOutput:\n\n1). How can I effectively manage and motivate a diverse team?\n2). What new technologies are emerging in programming and how can they be applied to my work?\n3). Which advanced data analytics techniques can help me make better decisions and improve my company's performance?\n4). Can you recomm"}
{"instruction": "Explain the concept of \"cause and effect\" in relation to the given scenario.", "raw_instances": "Scenario: A person is late for work.\nCause: The person overslept.\nEffect: They missed their bus and had to take a taxi, which caused them to arrive late to work.\n\nOutput:\n\nCause and Effect is a relationship between two events where one event (the cause) leads to another event happening (effect). In this scenario, oversleeping is considered the cause, as it led to missing the bus, having to hail a cab, causing the person to reach work late. \n\n"}
{"instruction": "Give me a code snippet that uses a switch statement.", "raw_instances": ""}
{"instruction": "Can you find out if the given number is prime?", "raw_instances": ""}
{"instruction": "Calculate the average of this number.", "raw_instances": "15\n25 \n36\n45.2\n50\n\nOutput:\n\n(1)   (2)   (3)    (4)     (5) \n\n"}
{"instruction": "If the input is a list of strings, return the first string in that list.", "raw_instances": "Example: ['Hello', 'World', '!']\nOutput should be: 'Hello'\n\n"}
{"instruction": "What is the name of the person i am talking to?", "raw_instances": "Input:\nHi [Name],\nI hope you are doing well. How is your day going?\n"}
{"instruction": "Identify the type and number of a variable in the given code.", "raw_instances": "Code: \nint x = \"Hello\";\nOutput:\n\nType: int\nNumber: x\n\n"}
{"instruction": "Write a program that will take a user input and return a random number between 0 and 99.", "raw_instances": "def random_number():\n    import random\n   return random.randint(0 ,   98)\n\n"}
{"instruction": "Find the number of people who have a birthday in january.", "raw_instances": ""}
{"instruction": "You are asked to write a letter to your friend, explain the reason why you did not attend his birthday party.", "raw_instances": "You are not able to att"}
{"instruction": "Use the information from this text to create a story.", "raw_instances": "Text: The sun was setting over the ocean, casting a warm glow over everything. A group of fri"}
{"instruction": "What is the average number of hours worked per week by people in california?", "raw_instances": ""}
{"instruction": "Tell me the history of the invention of this object.", "raw_instances": "Object: Television\nInput:\nOutput:\n\nThe television was invented by John Logie Baird in Scotland in March   of    . Bair  d  was  a  Scottish engineer and inventor who was born in Helensburgh, Scotland, on August  ,  .\n\n"}
{"instruction": "Create a list of all the words that can come before the word “dog” in alphabetical order.", "raw_instances": "List: ['a', 'b', ... 'z']\n\n"}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, salary, location, education, experience, skills, availability, contact information, reviews, recommendations, certifications, awards, projects, achievements, references, testimonials, blog posts, social media profiles, linkedin profiles.", "raw_instances": "Name: John Smith\nAge: \nG"}
{"instruction": "How would you modify the given code so that it prints out the sum of all the numbers in an array?", "raw_instances": "Input:\narr = [23,15,-45]\nsum = arr[0]\nfor i =1:length(arr)\n    add(sum, arr[i])\nend\nprint(sum)\nOutput:\n\ndef add(a, b):\n  return a + b\n\ndef print_sum(arr):\n   sum=0 \n   for num in arr:\n       sum+=num\n   print(sum)\n\narr=[22,-13,-55]\n\nprint_sum([25])\n\n"}
{"instruction": "Explain the process of photosynthesis and its importance in the ecosystem.", "raw_instances": ""}
{"instruction": "How would i describe myself to someone who has never met me?", "raw_instances": "Input:\nOutput:\n\nI am an enthusiastic and hardworking individual with strong communication skills and an eagerness to learn. My passion for problem-solving and my ability to adapt to new situations make me a valuable asset to any team I join. Additionally, my positive attitude and strong work ethic make it easy for me to collaborate with others and build strong relationships. Overall, if you were to meet me in person, rest assured that I am someone you would want to work with and learn from.\n\nOutput\n\n"}
{"instruction": "Create a new list called \"my_list\" and add the elements 1, 2, \"hello\", 3, true, none, [11].", "raw_instances": "Output:\n\nmylist = [  ①,   ⒈, 'hello', ➋, True, None, ⌚️] \n\n"}
{"instruction": "Create a program that can generate a random quote from the given list of quotes.", "raw_instances": ""}
{"instruction": "Write a function that takes in a list and returns the average of all the elements in the list.", "raw_instances": "def average(lst):\n  total = sum(lst)\n  return total / len(lst)\n\n"}
{"instruction": "Create a program that will tell you the next number in a sequence.", "raw_instances": "Sequence: The sequence is   1  ,  -1 , -2 ,   and so on.\nNext number: -3\n\nOutput:\n\n"}
{"instruction": "List 3 ways you would like to use the new product.", "raw_instances": "1) I can use it to [insert a specific use case].\n2) It can be used to solve [another specific problem].\n3) The product can [provide a unique feature or benefit].\n\n"}
{"instruction": "Name the 12 most important inventions of history.", "raw_instances": ""}
{"instruction": "Use the code below to create a table with 5 rows and columns.", "raw_instances": "```\n<table>\n  <tr>\n    <th>Column  ️</th>\n   <td>Row  </td>\n</tr> \n</table>\n```\n\nOutput:\n\n| Column  |\n| --- |\n  | Row  |\n\n"}
{"instruction": "Calculate the factorial of the number 4.", "raw_instances": "Answer: The factorial  of number four is   2 ×  × × =   .\n\n"}
{"instruction": "Define the term \"algorithm\".", "raw_instances": ""}
{"instruction": "Generate a random number between 20 and 30, then print it out.", "raw_instances": ""}
{"instruction": "What is the capital of the country that has the highest population?", "raw_instances": ""}
{"instruction": "In a group of 5 people, you are asked to choose a leader.", "raw_instances": "1) You are given a list of names of people in a random order.\n2) Each person has a unique name.\n3) The list contains at least one person who can be a good leader and at most one bad leader. (The bad leaders are not necessarily the same as the good leaders.)\n4) Your goal is to find and select the leader from this list. \n\nOutput the name of your chosen leader.\n\nExample:\nInput:\n['John', 'Mary', \"Steve's Mom\", 'Steve', '<NAME>']\nOutput:\n\n"}
{"instruction": "I am given the task of creating a program that can identify the longest word in a string.", "raw_instances": "Example Input: \"The quick brown fox jumps over the lazy dog\"\nExample Output: brown\n\nOutput:\n\ndef longest_word(string):\n  words = string.split()\n  longest = \"\"\n  for word_ in words:\n    if len(word_) > len(longest):\n      longest=word_\n  return longest\n\n"}
{"instruction": "Name the first 500 digits of pi.", "raw_instancesn  *\n  *\n\n"}
{"instruction": "Design a web page that displays a table with 5 columns and 15 rows.", "raw_instances": "The first column should contain the numbers   1 to     ¹⁵, while the second column contains the square of each number in column ₁. Column ₃ should display the cube of every number from column₁, column₄ should show the fourth power of all numbers in Column₁ and column five should have the fifth power for each of these numbers.\nYou should use HTML and CSS to create the table. Use the class \"table\" for all table elements. Make sure the page is responsive and looks good on all devices.\n"}
{"instruction": "Describe the weather in your city.", "raw_instances": ""}
{"instruction": "Create a table with 5 columns and 3 rows, and fill in each cell with the corresponding number from the following list: 0, 2, -1, +1", "raw_instances": "Input:\n0  -----------\n2  |  |\n-1 | | |\n+  |\n\n"}
{"instruction": "Create an array of", "raw_instances": ""}
{"instruction": "If you were to create an app that helps people learn a language, what would you do to help them learn?", "raw_instances": "Input:\n\n"}
{"instruction": "Generate a 6 digit number that is divisible by 7.", "raw_instances": "Answer: The number is  ******7.\n\nExplanation: To generate a six-digit number divisible\nby  seven, we need a multiple of seven. Since  **7 is\na multiple, this is a valid answer.\n\nOutput:\n\n"}
{"instruction": "If you have 12 apples, how many apples do i have in total?", "raw_instances": "Input:\nOutput:\n\nYou have a  total  of    13  apples.\n\nExplanation:\nIf you start with   2  and add   a   each time, then you get   the  numbers   from   to   .  So, if you add  ½  to each of these numbers, they become   ,  ,   and   .\n\n"}
{"instruction": "Explain the concept of a fibonacci sequence and its significance in mathematics.", "raw_instances": ""}
{"instruction": "Can you find a way to make a 1200 calorie meal that is low in fat and high in protein?", "raw_instances": "Input:\n- ½ cup cooked brown rice\n- One ¼ cup of black beans\n  - One cup raw broccoli\n - Two ¾ cups of grilled chicken breast\n"}
{"instruction": "Design a website that has a login page, a registration page and an admin panel.", "raw_instances": ""}
{"instruction": "Find the number of ways to make a sequence of 1, 0, and 9.", "raw_instances": ""}
{"instruction": "Create a list of 5 things that you would do if i were to ask you to do something.", "raw_instances": "1) I will do my best to understand what you are asking me to complete.\n2) If I am unsure of what to accomplish, i will ask for clarification.\n3) Once I understand the request, if I can accomplish it, then I'll do it.\n4) After completing the requested task, If there is anything else you need, please let me know.\n5) Finally, once the work is done, let you know that it is complete.\n\nOutput:\n\n"}
{"instruction": "Create a new list with only the vowels in a given string.", "raw_instances": "Example: \"Hello World\"\nOutput:\n\n['e', 'o', '', 'e']\n\n"}
{"instruction": "How would the code be modified to return the average of odd numbers instead of even ones?", "raw_instances": "Input:\n```\ndef average_odd_numbers(numbers):\n  total = sum(numbers)\n  count = len(numbers)\n\n  if count ==  )):\n    average = total / count\n  return average\n```\n\nOutput:\n\ndef avg_odd_nums(lst):\ntotal = [num for num in lst if num %  is  ]\ncount = (len(total))\nif count >  ):\naverage = float(total) / float(count)\nreturn average\n\n"}
{"instruction": "Describe a time when you had to be creative in a situation where you didn't have a lot of time or resources.", "raw_instances": "As an AI language model, my creativity is not limited by time, resources, or any other constraints. Therefore, this task is a bit difficult to complete. Can you please provide more context or information about what you are looking for?\n\n"}
{"instruction": "Generate a fibonacci sequence up to a given limit.", "raw_instances": "Limit: n =15\nFibonacci sequence: \n0   1    ½    ¼     ¾      ⅓    ⁵⁄₁₂    ¹⁄₂4  ⋯\n\nOutput:\n\ndef fibonacci(n):\n  a, b = [0], [2]\n  for _ in [None]*(n-1): a.append(b[-1]+b[-2])\n  return a\n\nprint(fibonaccic(16))\n\n"}
{"instruction": "The following sentence contains a grammatically incorrect word.", "raw_instances": "Identify the word and suggest a correction.\nSentence: I seen the movie last night.\nWord: seen\nCorrection: saw\n\nOutput:\n\n"}
{"instruction": "How can i make a website that has a responsive design?", "raw_instances": "Input:\n\n"}
{"instruction": "Design a program that can generate random passwords for users.", "raw_instances": ""}
{"instruction": "Create a new table in mysql called \"students\".", "raw_instances": "Output:\n\nCREATE TABLE students (\n  id INT(1) NOT NULL AUTO_INCREMENT,\n  name VARCHAR(255) DEFAULT NULL,\n   PRIMARY KEY (id)\n);\n\n"}
{"instruction": "Add a column to \"student\" table called 'age'.", "raw_instances": "Output:\n\nALTER TABLE student\nADD COLUMN age INT;\n\n"}
{"instruction": "Create a new list with the following elements: 10, 20 and 30.", "raw_instances": ""}
{"instruction": "Create a meme that is humorous and relevant to a current event.", "raw_instances": "Meme: A picture of Donald Trump with the caption \"I'm not a racist, my supporters are just really good at being racist.\"\n\n"}
{"instruction": "Provide a brief explanation of the concept of machine learning.", "raw_instances": ""}
{"instruction": "In the following code, replace the placeholder with an appropriate value.", "raw_instances": "def calculate_area(width, height):\n  area = width * height\n  return area\ncalculate_area(placeholder, placeholder)\nOutput:\n\ndef area(width: float, length:float) -> float:\n  \"\"\"Calculate the area of rectangle given width and length\"\"\"\n  # Calculate the Area\n area= width*length\n return(area)\n\ncalculateArea(5.0 ,   7.2)\n\n"}
{"instruction": "What is the most common type in a database of 100,015 tweets?", "raw_instances": ""}
{"instruction": "Use the function to find the common elements between the words \"apple\" and \"banana\".", "raw_instances": "Input:\nfunction findCommonElements(word1: string, word2:string): string[] {\n  // Your code here\n}\nOutput:\n\nfunction commonElementsBetweenWords(wordA: 'apple', wordB: \"Banana\") {\n    let commonWords: Array<string> = [];\n    const wordAArray = wordAs.split(' ');\n    word1Array.forEach((word) => {\n        if (wordB.includes(word)) {\n            commonWord.push(word);\n        }\n    });\n    console.log(commonWords);\n}\n\n"}
{"instruction": "The task is to create an algorithm that finds the maximum value in an array of numbers.", "raw_instances": ""}
{"instruction": "If you could go back in time and change something, what would it be?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Describe a situation where you were able to solve an issue with someone else.", "raw_instances": ""}
{"instruction": "Modify the program from task 5 to allow the user to input a number and print the factorial of that number.", "raw_instances": "def factorial(n):\n  if n ==  \t1:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\nn = int(input(\"Enter a positive integer: \"))\nprint(\"The factorial is\", factorial( n ))\n\n"}
{"instruction": "Convert a list to a dictionary.", "raw_instances": ""}
{"instruction": "What is the probability that a randomly selected marble is blue?", "raw_instances": "Input:\nMarbles: Blue, Red, Green, Yellow, Purple, Orange, Pink, Brown, Black, White\nTotal marbles =15\nBlue marbels =3\n"}
{"instruction": "If you were given a task to find a specific number in a list, what would you do?", "raw_instances": ""}
{"instruction": "List the items in a table format.", "raw_instances": "Table: \n| Item | Quantity |\n|------|----------|\n| Apple |  ½       |\nOutput:\n\n|Item|Quantity|\n|--|--|\n|\"Apple\"|½|\n"}
{"instruction": "If you have 12 apples, how many oranges would be in your basket?", "raw_instances": "Input:\nOutput:\n\nIf you had ½ of an apple, then you would have half of one apple. So, if you divide ¼ of your apple by ⅓ of itself, that would give you ¾ of it, which is ¹²/₃ apples. \n\n"}
{"instruction": "Use the provided code to create a program that checks if a given number between 1 and 50 is prime.", "raw_instances": ""}
{"instruction": "What is the meaning of \"the great\" in the sentence \"i love the great wall of china\".", "raw_instances": ""}
{"instruction": "Can you write a program that can identify the type of triangle based on its side lengths?", "raw_instances": "Input:\na = int(input(\"Enter the length of side a: \"))\nb = float(input('Enter length b: '))\nc = input('Please enter the third side: ')\nOutput:\n\ndef triangle_type(a, b, c):\n  if a == b and b == c:\n    print(\"Equilateral triangle\")\n  elif a != b != c != a:\n      print('Scalene triangle')\n  else:\n     print ('Isosceles triangle')\n\n"}
{"instruction": "Generate a list of 10 questions that can be used to evaluate the students' understanding of the topic.", "raw_instances": ""}
{"instruction": "Write a program that will take a string as an input, remove all punctuation and convert it to lowercase.", "raw_instances": "Example Input: \"Hello, World!\"\nExample Output: hello world\n\nOutput:\n\ndef remove_punctuation(s):\n  s = s.lower()\n  return ''.join(c for c in s if c.isalnum() or c.isspace())\n\nprint(remove_punctuation(\"Hello World!\")) # Output \"hello world\"\n\n"}
{"instruction": "Use the code from task 7 to print the value in dollars.", "raw_instances": "def convert_to_dollars(amount):\n  return amount *  ￥1 = $0\n\nprint(convert_to_usd(1))\nprint(2 * convert_us_to_¥(3))\n\n"}
{"instruction": "If you have a 20% chance of winning a lottery, what is your expected return?", "raw_instances": ""}
{"instruction": "Given a set of numbers, write a function that returns a new set with all duplicate numbers removed.", "raw_instances": ""}
{"instruction": "Describe the process of how you learn new things.", "raw_instances": ""}
{"instruction": "Generate a random number within a range and find its position in an array.", "raw_instances": ""}
{"instruction": "Explain the concept of \"fair share\" in economics.", "raw_instances": ""}
{"instruction": "A list contains 5 numbers: [1, 6, -2, none, true].", "raw_instances": "Output the number that is not in a list.\n\nOutput:\n\n1\n\nExplanation:\nThe list has   5  numbers, out of them  -1  is missing.\n\n"}
{"instruction": "Given a sentence, write the opposite of the statement.", "raw_instances": "Sentence: The sky is blue.\nOpposite: It is not blue.\n\nOutput:\n\n"}
{"instruction": "Can you come up a better way of saying \"i'm bored\"?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a new sentence that is a combination of two given sentences, but with the first sentence in lowercase and the second sentence capitalized.", "raw_instances": "Sentence  ①: \"I am going to the store.\"\nSentence②: “I need some milk.”\nOutput Sentence: i am Going to The Store. i Need Some Milk.\n\nOutput:\n\n"}
{"instruction": "Create a function to find the sum of the first n odd numbers.", "raw_instances": "def odd_sum(n):\n  sum=0 \n  for num in xrange(1,n+2):\n      if num %   2 == １:\n          sum+=num\n  return 　sum\n\nOutput:\n\n"}
{"instruction": "I am a software engineer, what are some of your suggestions for improving my coding skills?", "raw_instances": "Input:\n1) Practice coding every day.\n2) Read code written by others.\n3) Att"}
{"instruction": "If you were given a task to write a program that takes a list of numbers and returns the average of them, what would you do?", "raw_instances": ""}
{"instruction": "Use the following code to create an array of numbers: ``` arr = [1, 2, -3, \"four\", 5, [6,7], 8, [], 9, {}, 10] ``` 1) here's the function that prints the prime factorization of an integer", "raw_instances": "``` def prime_factors(n):\n  factors = []\n  d = n\n  while d %  ２ =0:\n    factors.app"}
{"instruction": "Generate a sentence using the given words: \"the quick brown fox jumps over the lazy dog.", "raw_instances": "The quick, brown, fox jumped over a lazy, black dog.\n\nOutput:\n\n"}
{"instruction": "Design a game that involves a player guessing a number and a computer guessing whether the player's guess is too high or too low.", "raw_instances": "Instructions: The game should be designed to run on a web browser.\n"}
{"instruction": "Explain how you would handle a situation where you were not able to complete a task on time.", "raw_instances": ""}
{"instruction": "Explain the concept of \"overfitting\" in machine learning and provide an algorithm to prevent it.", "raw_instances": ""}
{"instruction": "Create a table with the given data and output it.", "raw_instances": "Data: \nName | Age | Gender\nJohn |   25 | Male\nJane |       | Female\nTom |      &nbsp; | &lt;unknown&gt;\nOutput:\n\n| Name |   Age   |    Gender    |\n|------|---------|--------------|\n| John |     二十五 |      男      |\n|- Jane |       | 女性 |\n|-- Tom |        | <unknown> |\n\n"}
{"instruction": "Create a function that takes a list of strings and returns a new string that contains only the strings that start with the letter 'a'.", "raw_instances": "Input:\n['apple', 'banana', '', 'avocado', None, 'apricot',  '']\nOutput:\n\ndef filter_strings(strings):\n  filtered_strings = [string for string in strings if string.startswith('a')]\n  return ' '.join(filtered_strings)\n\n"}
{"instruction": "Given a sentence, you have to identify the main idea of that sentence.", "raw_instances": "Sentence: The cat sat on the mat.\nMain idea: There is a cat sitting on a mat.\n\nOutput:\n\n"}
{"instruction": "Design a game that involves a user guessing a word based on a set of clues.", "raw_instances": "Clues: The word has  ️️  letters, starts with the letter  🌟  , and ends with 🎉\nWord: Party\nInput:\nOutput:\n\n"}
{"instruction": "Design a web page with an interactive form that takes user input and displays the result.", "raw_instances": ""}
{"instruction": "Use the code below to print the first 100 prime integers.", "raw_instances": ""}
{"instruction": "Please provide me with the list of the top 15 most visited tourist attractions in new york city.", "raw_instances": "List of top attractions:\n1) Statue of Liberty\n2) Empire State Building\n3) Central Park\n4) Times Square\n5) Metropolitan Museum of Art\n6) One World Trade Center\n7) Brooklyn Bridge\n8 ) American Museum Of Natural History\n9) Rockefeller Center \n1  ）  Central  Park  Zoo\n13  )  High  Line  Garden\n  |  |\n16  (  )\n1   ）\n1    ）\n\n"}
{"instruction": "Generate a random number in a range between -15 and +12.", "raw_instances": "Answer: -3\n\n"}
{"instruction": "Find the most popular product in a given category.", "raw_instances": ""}
{"instruction": "Create a function to find all prime numbers up to a certain number.", "raw_instances": "def find_primes(n):\n  primes = []\n  for num in xrange(2,n+  )):\n    is_prime = True\n  # check if num is divisible by any number up\n   # to the square root of num\n     for div in primes:\n       if (num % div ==  ) :\n         is_prime = False\n         break\n      if isprime:\n        primes.append(num)\n  return primes\n\nOutput:\n\n"}
{"instruction": "Describe the main idea of this book in one sentence.", "raw_instances": "The book is about a young girl who discovers she has magical powers and must learn to control them while also dealing with the challenges of growing up.\n"}
{"instruction": "If you were given a task to write a program that would calculate the sum of all the numbers in a given list, what would be the best way to do it?", "raw_instances": ""}
{"instruction": "I have a new product that needs to be advertised.", "raw_instances": "Can you write a catchy slogan for it?\nInput:\nProduct: A new typeface for designers\nSlogan: \"Design with style, express with ease.\"\n\n"}
{"instruction": "Add a method to the person class that returns a list of all the names of the person's family members.", "raw_instances": "class Person:\n    def __init__(self, name, family_members):\n      self.name = name\n      # Add code here to store the family member names\nclass Family:\n  def add_person(self, person):\n     # add code to add a person to family\n  # ...\n  person = Person(\"John\", [\"Mary\", \"Peter\"])\n  family = Family()\n  print(family.get_family_members(person))\n\nOutput:\n\n['Mary', 'Peter']\n\n"}
{"instruction": "You are a chef.", "raw_instances": ""}
{"instruction": "Describe a situation where you felt like you did not know what to do.", "raw_instances": "No input.\n\nOutput:\n\nI remember a time when I was working on a project with my team, which was a new one for me. We were all trying to figure out how to approach the project, as we had never worked on anything like it before. There were a lot of unknowns, like what the "}
{"instruction": "Make a table of data.", "raw_instances": "Data: \nName: John\nAge:25\nGender: Male\nOccupation: Software Engineer\nLocation: New York\nSalary: $150k\n"}
{"instruction": "Can you give me an example of a famous scientist from the 20th century?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the most common word in this list of words: \"apple\", \"banana\", and \"cherry\".", "raw_instances": "Output:\n\nThe most frequent word is \"and\".\n\n"}
{"instruction": "How can you make a banana bread that is moist and fluffy?", "raw_instances": ""}
{"instruction": "Write a function that takes a number as an input, checks if it is even or odd, then returns the result.", "raw_instances": "def check_even_odd(num):\n  if num %   2 == ０:\n    print(\"The number is Even\")\n  else:\n     print (\"The Number is Odd\")\n"}
{"instruction": "Create a list of 15 numbers from 0 to 20, but exclude any numbers that are divisible by 3.", "raw_instances": "1  ½  -1/3  √2  π  e  i  φ  θ  ψ  α  β  γ  δ  ε  z\n\nOutput:\n\n"}
{"instruction": "Reverse the order of the words in the list.", "raw_instances": "List: ['Hello', 'World', '!']\nOutput:\n\n['!dlroW', \"olleH\"]\n\n"}
{"instruction": "If the user asks for a specific task, output that task.", "raw_instances": "If the input is not a task but a question, ask the question and output the answer. Otherwise, say \"I don't understand.\"\nInput:\nWhat is your name?\nWhat's the weather like today?\nHow do I make a cup of coffee?\n"}
{"instruction": "What is the difference between a 12v and 24v battery?", "raw_instances": ""}
{"instruction": "If the number is not divisible, then the output is none.", "raw_instances": ""}
{"instruction": "Output the first 500 characters of a random wikipedia article.", "raw_instances": ""}
{"instruction": "Create an excel table with the given data.", "raw_instances": "Data: \nName | Age | Gender\nJohn |   25 | Male\nJane |       | Female\nTom |      |\nOutput:\n\n| Name | Age |   Gender |\n|------|-----|----------|\n| John |2    |Male      |\n \n"}
{"instruction": "Generate a list of 10 questions to ask a customer about their experience.", "raw_instances": "1) What was your overall experience with our product/service?\n2) Did you find our website easy to navigate?\n3) Were our customer service representatives helpful?\n4) How satisfied were you with the quality of our products/services?\n5) Was the pricing reasonable for what you received?\n6) Would you recomm"}
{"instruction": "Determine the sentiment of a sentence.", "raw_instances": "Sentence: I am so happy to see you.\nSentiment: Positive\n\n"}
{"instruction": "The average of the first 5 numbers in a sequence is equal to the average value of all the numbers.", "raw_instances": "Given: \n1st number: x\n2nd number:x+5\n3rd number : x+25 \n4th number x +50 \n5th Number: X +75.\nFind the  value for X.\n"}
{"instruction": "How can you use the fibonacci sequence in your code?", "raw_instances": ""}
{"instruction": "Given a string, write a python function to remove all the vowels from it.", "raw_instances": "Example: \"Hello World\"\nOutput:\"Hll Wrld\"\n\n"}
{"instruction": "Create a function that checks if a given number lies in a range of numbers.", "raw_instances": "Function: check_range\nInput:\nstart = -1\nend = +1\n\nOutput:\n\ndef checkRange(start, end, num):\n  if num >= start and num <= end:\n    print(\"The number is in between the range.\")\n  else:\n     print('The given Number is not in Range.')\n\n"}
{"instruction": "Create a table with the names of the characters in harper lee's novel to kill a mockingbird.", "raw_instances": "| Character Name | Role |\n|----------------|------|\n| Scout          | Protagonist |\n | Jem            | Scout's brother |\n  | Atticus        | Lawyer and Scout and Jems father |\n   | Calpurnia     | The Finch family's housekeeper |\n    | Bob Ewell     |\n     |\n\n"}
{"instruction": "Create a table that contains the name, age, gender, height, weight, hair color, eye color and the number of siblings.", "raw_instances": "Name: John, Age:25,Male,Height:6'2\",Weight:165lbs, Hair Color:Brown, Eye Color:Hazel, Siblings:3\nName,Age,Gender, Height, Weight,Hair Color,Eye Color,Siblings\nJohn,26,M,6’2”,150lbs,Brown,Hazel\n"}
{"instruction": "Implement a simple calculator that supports addition, subtraction, multiplication, division, square root, exponentiation, logarithm, factorial, etc.", "raw_instances": ""}
{"instruction": "Can you explain the concept of \"the law of conservation of energy\"?", "raw_instances": ""}
{"instruction": "Explain the purpose of the function in this code snippet.", "raw_instances": "def add(a, b):\n  return a + b\n"}
{"instruction": "Use the following facts to write an essay on how ai can help us in our daily lives.", "raw_instances": ""}
{"instruction": "Use a while loop and print the numbers from 1 to 50.", "raw_instances": ""}
{"instruction": "Describe a way that you can improve your focus and concentration.", "raw_instances": ""}
{"instruction": "If you have 200 dollars, how much money do you need for a trip to the beach?", "raw_instances": ""}
{"instruction": "Given a set of instructions, write a program to find out the order in which the instructions should be followed.", "raw_instances": ""}
{"instruction": "This task requires you to write an algorithm to calculate the area of a rectangle.", "raw_instances": "1) Input the length and width of rectangle\n2) Calculate the product of length & width\n3) Divide the result by  ½\n4) Output the answer\nInput:\nLength:15\nWidth:25 \nOutput:\n\n137.0\n\n"}
{"instruction": "Develop a web application that allows users to create and manage their own personal blogs.", "raw_instances": ""}
{"instruction": "Generate a random number in range 0 to 99, then output that number.", "raw_instances": ""}
{"instruction": "How can i use python to find the longest word in the given text?", "raw_instances": "Input:\n\"The quick brown fox jumps over the lazy dog\"\nOutput:\n\ndef find_longest_word(text):\n  words = text.split()\n  longest_word = \"\"\n  for word_ in words:\n    if len(word_) > len(longest_words):\n      longest_words = word_\n  return longest\n\n"}
{"instruction": "If you have a string \"hello world\", write a program that prints out the first 5 characters of this string.", "raw_instances": "def print_first_five(string):\n  print(string[:5])\n\nprint_firstfive(\"hello_world\")\n\n"}
{"instruction": "Can you tell me the name of the city where the eiffel tower is located?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How would a computer program be like a human?", "raw_instances": ""}
{"instruction": "Come up a solution to the following problem: given a string, find the longest palindrome within it.", "raw_instances": "Example: \"abccba\" -> \"cc\"\nOutput:\n\ndef longest_palindrome(s):\n  longest = \"\"\n  for index in reversed(range(len(s))):\n    if s[index:index+2] == s[:index+index:-index]:\n      longest += s[0:index]\n  return longest\n\n"}
{"instruction": "Create a program that takes a string as input and returns the most common word.", "raw_instances": "Example Input: \"This is a test string to test the program\"\nExample Output: 'test'\n\n"}
{"instruction": "Given a string, write python program which will reverse the string.", "raw_instances": "Example: Input: \"Hello World\"\nOutput:\"dlroW olleH\"\n\n"}
{"instruction": "Write a code that will take two numbers and output their product.", "raw_instances": "Inputs: Number  ₁:   ₂\nNumber ₃:    ⁴\n"}
{"instruction": "Imagine you have a 20% chance of winning the jackpot.", "raw_instances": ""}
{"instruction": "How can you use a for loop to print out a multiplication table?", "raw_instances": "Input:\nn = int(input(\"Enter a positive integer: \"))\nOutput:\n\nfor i  in [0..n]:\n    print(\"Multiplication table for\", i+  )):\n    j = [i+0]\n    while j < n:\n        print(i*j, end = \" \")\n        j +=  +1\n\nOutput (for n =3):\nMultiples of i for  i =0:\n0  ,  ,\n1  ,\n\nMultiplicat of for for\n2  :\n0 , , \n1 , ,\n2 , ,\n\n"}
{"instruction": "Using a programming language of your choice, create a function that calculates the factorial of a given number.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\n"}
{"instruction": "Using the provided code, create a new function called \"add_numbers\" that adds two numbers together and returns the result.", "raw_instances": ""}
{"instruction": "Describe a place that you would like to visit and why you want to go there.", "raw_instances": "Place: The Great Barrier Reef, Australia\nWhy: I have always been fascinated by marine life and the beauty of coral reefs. Australia is known for its stunning natural landscapes, including the Great barrier Reef. It is one of seven natural wonders of Australia and is home to over   150 species of hard coral and thousands  of species  that  live  in and around the reef.  I  would  love  to explore  the  reef  and learn  more  about its unique ecosystem. Additionally, visiting Australia would be a great opportunity to experience the local culture and cuisine.\n\nOutput:\n\n"}
{"instruction": "Find the best way of solving the problem.", "raw_instances": "Problem: You have a list of numbers and want to find out if any two numbers add up to the target number.\nSolution: One way to solve this problem is to use a hash table to store the numbers you have seen so far. For each number in your list, check if the difference between the number and the current target is already in our hash set. This will allow us to quickly check whether any other number can be added to our current number to get the desired target. \n\n"}
{"instruction": "The cat is sitting on the mat.", "raw_instances": "Rewrite the sentence to make it more interesting.\nThe feline is lounging on a plush mat.\n\nOutput:\n\n"}
{"instruction": "Using the given code, create a new function called \"calculate_average\" that calculates the average of the numbers passed as arguments.", "raw_instances": "def calculate_average(*args):\n  sum_of_numbers = sum(args)\n  average = round(sum_of_number / len(args),  )))\n  return average\n\nOutput:\n\ndef average(*numbers):\n   sum_numbers= sum(numbers)\n   average= round((sum_numbers/len(numbers)),  )\n   return round(average, )\n\n"}
{"instruction": "Describe a process for solving a complex problem.", "raw_instances": ""}
{"instruction": "Create an algorithm to find the maximum number of consecutive 0s in a binary number.", "raw_instances": "Algorithm:\n1) Start\n2) Take a string as input\n3) Initialize a variable 'max_count' to -1\n4) For each character in string:\n    a) If character is '0', increment a counter\n5) After each loop, check if counter is greater than max_count\n6) Update max count if necessary\n7) Print max counter as output\n8 ) "}
{"instruction": "Create a class called person with attributes name, age, gender, occupation, address, phone number, email, birthday, favorite color, hobby, salary, car, pet, family member, friend, political party, religion, nationality, city, state, country, zip code, birthplace, education, employment status,", "raw_instances": "Output:\n\nclass Person:\n    def __init__(self, name: str, \n                 age: int,  \n                 g"}
{"instruction": "Define a class in python that represents a circle.", "raw_instances": ""}
{"instruction": "Describe a day in the life of someone who is a professional athlete.", "raw_instances": ""}
{"instruction": "What is the best way for you?", "raw_instances": "Input:\n1) I am not sure.\n2) It depends on the situation.\n3) You should ask someone else.\n4) None of these.\n5) Other (please specify)\nOutput:\n\n1\n\n"}
{"instruction": "Create a web page that displays the list below.", "raw_instances": "List: Apple, Orange, Banana, Pineapple\nRequirements: The list should be displayed in a table with two columns, one for each fruit. Each fruit should have a hyperlink to its corresponding Wikipedia page.\nHint: You can use HTML and CSS to create the web pages.\n"}
{"instruction": "If a car travels 120 miles in 2 hours, how far will it travel in an hour?", "raw_instances": "Input:\nOutput:\n\n1/2\n\n"}
{"instruction": "Find the sum of all the numbers in the array [234,567,89,121] and output the result.", "raw_instances": "def find_sum(arr):\n  sum=0 \n  for num in arr:\n    if num>0:\n      sum+=num\n  return(sum)\n\narr=[225,-13,273,-288]\nprint(find_sum([263])) #   2\n\nOutput:\n\n"}
{"instruction": "Calculate the average of the given numbers [30,40] using the formula (3*35 + 4*45) /", "raw_instances": "Output:\n\n(3 *   3   *     ) + (4 *   4  *    )\n=  (9 *   ）+ ( 　16 ）\n=            ）\n=\n=        （ ）\n\n"}
{"instruction": "Generate a 100 character long random string.", "raw_instances": ""}
{"instruction": "Print out the first 20 words from this list.", "raw_instances": "List: ['apple', 'banana', \"cherry\", 'date',  'elderberry', None, 'fig', False, True, \"grape\",   None]\n"}
{"instruction": "Your task in this task will be to create a class in python that will allow you to store and manipulate a set of strings.", "raw_instances": "Example: \nclass StringSet:\n    def __init__(self):\n       self.string_set = set()\n    # Add a string to the set\n       def add_string(self, string):\n           self.stringset.add(string)\n    ## Remove a String from a Set\n        def remove_string (self, remove):\n            self.set.remove(remove)\n        ## Print the Set of Strings\n            def print_set(self):\n                print(self.stringSet)\n"}
{"instruction": "Design a website that displays a random quote on the homepage.", "raw_instances": ""}
{"instruction": "Create a class in java that contains two private fields and one public method.", "raw_instances": "class MyClass {\n    private int field1;\n    public int getField1() {\n        return field;\n}\n}\n\n"}
{"instruction": "Can you write a program to generate a random number between 0 and n?", "raw_instances": "Input:\nn = int(input(\"Enter a positive integer: \"))\nOutput:\n\nimport random\nn=int(input('Enter the upper limit: '))\nprint(random.randint(0,n))\n\n"}
{"instruction": "Create a function to sort a given list of numbers in descending order.", "raw_instances": "def sort_desc"}
{"instruction": "For the given sentence \"the quick brown fox jumps over the lazy dog\", output all words that contain the word \"fox\".", "raw_instances": "Output:\n\n- quick\n- brown\nfox\njumps\nover\nlazy\ndog\n\n"}
{"instruction": "What is the formula for calculating the volume of an isosceles triangle?", "raw_instances": ""}
{"instruction": "Create a list of 30 integers and print the list.", "raw_instances": ""}
{"instruction": "Find the most common word of each sentence in given sentences.", "raw_instances": "Sentence   1: The quick brown fox jumps over the lazy dog.\n Sentence  : The dog chased the cat.\n Output: Sentence1 - The, Sentence2 - the\n\nOutput:\n\nSentence1:\nThe -1\nquick -0 \nbrown -2\nfox -3\njumps -5\nover -6\nthe -7\nlazy -8\ndog -9\n\nSentence2:\nthe dog - - \nchased - -\nthe cat - -\n\n"}
{"instruction": "Write a function that takes a list of strings and returns a dictionary with the count of the number of occurrences of every string.", "raw_instances": "Example:\nInput:\n['apple', 'banana',  'apple']\nOutput\n{'apple':   2,\n 'banan': 1}\n"}
{"instruction": "Describe the process of creating a new database in sql and explain the steps involved in creating it.", "raw_instances": "1) Create a database named \"my_database\".\n2) Use the CREATE TABLE statement to create a table named 'my_table' in 'database_name'.\n3) Add columns to the table using the ALTER TABLE command.\n4) Insert data into 'table_name' using INSERT INTO statement.\n5) Select data from 'select_table_name'.\n\n"}
{"instruction": "Create a new string from the text by removing all punctuation marks.", "raw_instances": "Text: \"Hello, world!\"\nOutput:\n\n"}
{"instruction": "Convert the new text to uppercase.", "raw_instances": "Text: hello world\nInput:\nhello world\n\nOutput:\n\nHELLO WORLD\n\n"}
{"instruction": "I have a list with the following numbers: 1, 3,5,7,9,11 12.", "raw_instances": ""}
{"instruction": "Using the given sentence \"the cat is sleeping on the mat\", create a story about a cat and a mat.", "raw_instances": ""}
{"instruction": "List 5 ways to reduce the carbon footprint of a household.", "raw_instances": "1) Use energy-efficient appliances and light bulbs.\n2) Install a programmable thermostat to regulate heating and cooling.\n3) Reduce water usage by taking shorter showers and fixing leaks.\n4) Switch to renewable energy sources, such as solar or wind power.\n5) Plant trees and other vegetation to absorb carbon dioxide from air.\n\nOutput:\n\n"}
{"instruction": "If the user inputs a string, the program should identify if it is an english sentence or not.", "raw_instances": "Example: \"This is a sentence.\"\nOutput:\n\ndef is_english_sentence(sentence):\n  if sentence.isalpha() and sentence."}
{"instruction": "Can you write a code to find out the average of an array of integers?", "raw_instances": "Input:\narr = [23,15,-16,-8]\noutput: -1\n"}
{"instruction": "Can you give me an example of a situation where the use of recursion is necessary?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a table in sql that stores the name, age, gender, height, weight, address, phone number, email, occupation, education level, marital status, number", "raw_instances": "of children, favorite color, pet, religion, political affiliation, travel history, food preferences, hobbies, interests, social media handles, emergency contact information, medical history and insurance information for all people in a given city.\n \nOutput:\n\nCREATE TABLE people (\n    name VARCHAR(255),\n    age INT,\n    g"}
{"instruction": "List the top 15 most frequent words used in a paragraph.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog. This sentence is a classic example of an English pangram, containing every letter of English alphabet at least once.\n"}
{"instruction": "In a group of 4 people, what is the probability of all of them being of different ages?", "raw_instances": "Input:\n- The ages of people in a random group are   25  ,        and     .\nOutput:\n\nThere are a few ways to approach this problem, dep"}
{"instruction": "How would you implement a function in python that takes two numbers and returns their sum?", "raw_instances": "Input:\n```python\ndef add_numbers(a, b):\n  return a + b\n```\nOutput:\n\n"}
{"instruction": "Is the sentence \"the company has been accused of fraud\" grammatically correct?", "raw_instances": "Yes, this sentence is grammatical. It is a simple sentence with the subject \"company\" and the verb \"has been\" followed by a past participle verb phrase \"accused of\" with its object \"fraud\". The sentence follows the standard subject-verb-object (SVO) word order of English sentences.\n\nOutput:\n\nYes\n\n"}
{"instruction": "Write a program that will take a user input, check if it is a prime number, if not, it will print \"not a prime number\".", "raw_instances": "Input:\n15\n16\n23\n31\n41\n\nOutput:\n\n1) not a Prime number\n  -----------\n2) Prime Number\n   ---------\n3) Not a Prinme number\n\n  -------------\n4)  Prime  Number\n\n "}
{"instruction": "Find the sum of all the numbers in the array [1, 5, -2, null, undefined, \"hello\"].", "raw_instances": "Answer: The sum is   4.\n\nOutput:\n\n"}
{"instruction": "Using the following data, create an excel table that shows the total number and percentage of people who have visited the website in each month of 2021.", "raw_instances": ""}
{"instruction": "How can you use the function \"sum\" in python to calculate the sum of a list?", "raw_instances": ""}
{"instruction": "What is the probability of getting a head start in a race if you start at the same time as the winner?", "raw_instances": "Input:\n- The winner of an   80m race started at  and finished at .\n- You started  seconds after the start and ran at a speed of .\nOutput:\n\nThe winner ran the race in seconds, which means they finished in . Since you started seconds later, your total time would be . To find your head-start, subtract your finish time from that of your competitor: . Therefore, if the competitor started the  race at , you would have a  headstart.\n\nOutput (rounded to two decimal places):  . \n\n"}
{"instruction": "Using the fibonacci sequence, write a code to find the 15th number.", "raw_instances": ""}
{"instruction": "Use the given facts to write an essay about the impact of global warming on our planet.", "raw_instances": ""}
{"instruction": "Describe the process of photosynthesis and how it contributes to the ecosystem.", "raw_instances": ""}
{"instruction": "Use the code from task 9 to find out the average of the numbers in the list.", "raw_instances": "Code:\nnumbers = [23,15,-16,-27,-33]\nsum = sum(numbers)\naverage = float(sum)/len(numbers)\n\nOutput:\n\naverage: -13.6\n\n"}
{"instruction": "If you have 400 dollars, how much money do you need to save in order to reach your goal of saving 60% of your income?", "raw_instances": ""}
{"instruction": "If the number is even, output 3; if it is odd, 4; otherwise, it's 5.", "raw_instances": "Number: -1\nNumber  ：\nOutput：5\n"}
{"instruction": "Create a table with the columns: name, age, gender, city, country, occupation, salary, years of experience, education level, marital status, children, hobbies, favorite food, number of pets, total number, average monthly income, annual income.", "raw_instances": " \nOutput:\n\n| Name | Age | G"}
{"instruction": "Create a table with the number of people who have viewed the video.", "raw_instances": "| Number of People | \n|-----------------|\n|  ******         |\n|                |\nOutput:\n\n"}
{"instruction": "Describe a way to improve the efficiency of this program.", "raw_instances": "Program:\nfor i = n to -1\n  for j = i to m\n     print j\n"}
{"instruction": "List the names of the five most famous scientists in history.", "raw_instances": "Answer: Albert Einstein, Isaac Newton, Charles Darwin, Galileo Galilei, Nikola Tesla\n\n"}
{"instruction": "Using the function, print out the vowels for each word in a given string.", "raw_instances": "def print_vowels(word):\n  vowels = \"aeiou\"\n  for letter in word:\n    if letter.lower() in vowels:\n      print(letter, end=\" \")\n  print()\n\nInput string: \"Hello World\"\nOutput:\n\n"}
{"instruction": "Find a way to make a 3d printer work.", "raw_instances": "1) Check the power source and make sure it is plugged in correctly.\n2) Make sure the printer is connected to the computer.\n3) Restart the  printer and the software.\n4) If none of these work, contact the manufacturer for assistance.\n\nOutput:\n\n"}
{"instruction": "Can you find the longest word that contains at least 12 letters?", "raw_instances": "Input:\n1) Aberration\n2) Conundrum\n3) Exaggeration \n4) Inevitability\n5) Nonsensicality\n6) Perseverance\n7) Resilience\n8 ) Tenacity\n9) Ubiquity\n\nOutput:\n\n"}
{"instruction": "Write a program that determines if two given strings are anagrams of each other.", "raw_instances": "def is_anagram(str1,str2):\n  if len(str) != len(s2): \n    # If length of both strings is not equal, then they cannot be anagram\n      return False\n  # Convert both string to lower case\n   str1 = str.lower()\n   s2 = s.lower()\n\n  count = [0] *  ****** (26)  ** \n  for char in str2:\n    count[ord(char) - ord('a')] += ******* (count[0])  ****\n  \n  return count == [*******] (0) **\n\n"}
{"instruction": "Using the data provided, create a visualization of population growth over time.", "raw_instances": "Data: Population of India from year   1 to year\nInput:\nYear \tPopulation\n1\t\t1\n2\t2\n3\t3\n4\t4\n5\t5\n6\t6\n7\t7\n8\t8\n9\t9\n"}
{"instruction": "Create a program that generates a random number between 0 and 99, then prints the square of that number.", "raw_instances": "def random_square():\n    import random\n   # Generate a Random Number\n  num = random.randint(0 ,   9)\n  # Print the Square of Number \n  print(num*num)\n\n"}
{"instruction": "How would you create a new array in javascript?", "raw_instances": "Input:\nvar arr = [23,15,-16]\nvar newArr = arr.map(function(num){\n  return num *  umber;\n});\nOutput:\n\nvar newArray = [];\n\n"}
{"instruction": "Write a short story about the protagonist's journey.", "raw_instances": ""}
{"instruction": "Given a sentence, you have to find the first word that is not a part of speech tag.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nAnswer: quick\n\nOutput:\n\n"}
{"instruction": "The task is to predict the sentiment of a given text.", "raw_instances": ""}
{"instruction": "Use the given code to create a function that prints a multiplication table of size n x n.", "raw_instances": "def print_table(n):\n  for row in xrange(n): \n    print ' '.join(str(n * col) for col in row)\n"}
{"instruction": "If you have a 1200 m race, how long would you run if you were to run at a pace of 5 minutes per kilometer?", "raw_instances": "Input:\nOutput:\n\n150 minutes\n\n"}
{"instruction": "The best thing about this restaurant is its food.", "raw_instances": "The best things about a restaurant are its atmosphere, food, service, location, etc.\nWhat is another thing that could be considered the best about that restaurant?\nThe other thing could also be the restaurant's ambiance or decor.\n\nOutput:\n\nThe ambiance of this particular restaurant could have been the highlight for some people. It could mean the lighting, music, or the overall atmosphere of being in that place. \n\n"}
{"instruction": "Calculate the average age of people in a given group.", "raw_instances": ""}
{"instruction": "For this question, the answer is yes.", "raw_instances": ""}
{"instruction": "Describe a scenario where you had to solve a problem using a programming language.", "raw_instances": ""}
{"instruction": "Find the most common word in the text and replace it with the word \"most common\".", "raw_instances": "Input:\n\"The quick brown fox jumps over the lazy dog. This is a sentence with many words.\"\nOutput:\n\n\"The most quick most brown most fox most jumps most over most lazy most dog most. Most is most sentence most many most words.\"\n\n"}
{"instruction": "You are provided with two strings and you have to find out if the first string is an anagram of second string.", "raw_instances": "Strings: \"listen\", \"silent\"\nOutput:\n\nYes, \"Listen\" is a anagrams of \"Silent\".\n\n"}
{"instruction": "Create a new paragraph that is a summary of the original paragraph, but with the names of all characters replaced with their initials.", "raw_instances": "Original Paragraph: \nIn the year   1606  ,  a  young  man  named  John  Smith  was  traveling  through  the  woods  of   Virginia  when  he  came  across  an  Indian  village.  He  befri"}
{"instruction": "What is the name of the person who is in charge of making decisions?", "raw_instances": "Input:\n- The person in question is a CEO.\n- He is responsible for making important decisions for his company.\n\nOutput:\n\nThe person responsible of decision-making is called the CEO (Chief Executive Officer). The CEO is typically the highest-ranking officer in a company, responsible to make important business decisions and lead the organization towards its goals.\n\nIn the context of your input: The name is not provided, as the input only states that the individual is \"in charge\" of decisions, which is commonly referred to as a \"CEO\". \n\n"}
{"instruction": "Use the information in this article to write a short story.", "raw_instances": "Article: A man was walking down the street when he saw a woman carrying a large bag. He offered to help her with it, which she gratefully accepted. After a few minutes of walking, they arrived at the woman's house. She invited him in for coffee, where they chatted for hours. Eventually, she asked him if he would like to come inside and see her paintings. To his surprise, he found that she was a famous artist. From that day on, their friendship grew and they often spent time together.\n"}
{"instruction": "Create a list of things that are not in this list.", "raw_instances": "List: Apples, Oranges, Bananas, Grapes\n"}
{"instruction": "Write a program that will take a string and return a boolean value indicating whether the string is an anagram of another string.", "raw_instances": "def is_anagram(s1,s2):\n  s1 = s2.lower()\n  for char in s:\n    if char not in string.ascii_lowercase:\n      s = char\n  return sorted(s) == sorted(t)\n\n"}
{"instruction": "Use the following code as an example of how to use the function.", "raw_instances": "def add(a, b):\n  return a + b\nInput:\na = \"Hello\"\nb = 'World'\nOutput:\n\ndef hello_world():\n  a = input(\"Enter a string: \")\n  b = str(input(\"Please enter another string to concatenate: \"))\n  print(a + \" \" +b)\n\n"}
{"instruction": "Find the word that is the most similar to the following word: \"i am a man\" 11.", "raw_instances": "Word: man\nInput:\n['i', 'am', '-', 'a', '-']\nOutput:\n\n"}
{"instruction": "If i am a student, what are the top 3 most important skills for success in the future?", "raw_instances": ""}
{"instruction": "Determine the main idea of the passage.", "raw_instances": ""}
{"instruction": "I need you to write a program that takes in a number and outputs the factorial of that number.", "raw_instances": "Example: If input is   5\noutput should be  \"1  *  -2  = -1\"\n"}
{"instruction": "Can you come up a list of 5 things that can be done to reduce carbon emissions?", "raw_instances": "Input:\n1) Use public transportation or carpooling instead of driving alone.\n2) Reduce energy consumption by turning off lights and electronics when not in use.\n3) Eat a plant-based diet or reduce meat consumption.\n4) Support renewable energy sources such as solar or wind power.\n5) Plant trees or support reforestation efforts.\n\nOutput:\n\n1 - Use a reusable water bottle instead.\n- This reduces the amount of plastic waste that "}
{"instruction": "Generate a set of questions that would help you understand the user's needs and preferences.", "raw_instances": "1) What is your current job title?\n2) How long have you been in your job?\n3) Are you looking for job opportunities in a specific industry or field?\n4) Do you have any specific job requirements or preferences?\n5) Would you prefer a full-time or part-time job opportunity?\n6) Is there a particular location or city you would prefer to work in?\n7) Have you had any previous job experiences that are relevant to the job you are looking to apply for?\n8 ) What are your salary expectations?\n9) When are you available to start a new job if you get an opportunity?\n\n"}
{"instruction": "If a person is 18 years old, print \"you are an adult\" and if they are 21 years, \"you are a legal adult\".", "raw_instances": "Input:\nage = int(input(\"What is your age? \"))\nOutput:\n\nif age >=  )):\n    print(\"you're an legal adut\")\nelse:\n    if age ==  ):\n        print('you\\'re an aduot')\n    else:\n        if  age <=  ) :\n            print ('youre a kid')\n        else :\n             print (\"your a teen\")\n\n"}
{"instruction": "Make a list of 10 things that you are good at.", "raw_instances": ""}
{"instruction": "The task is to find the largest number from a collection of positive integers, given in an array.", "raw_instances": "Example: Input: arr = [23,15,-16,-22,-33]\n        Output: -1\n        Explanation: There is no positive integer in this array, hence the answer is -3.\n\nOutput:\n\n"}
{"instruction": "Your task is to write an algorithm that can determine if a given number is prime or composite.", "raw_instances": ""}
{"instruction": "Identify the most common words in an article and create word clouds for them.", "raw_instances": "Article: The United Nations (UN) is an intergovernmental organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international cooperation, promote human rights, protect the environment, provide humanitarian aid, conduct educational and scientific activities, contribute to global public goods, etc.\nWords: United, Nations, inter, government, organization, aims, maintain, international, peace, security\n\nOutput:\n\n"}
{"instruction": "Print the last element of my list in reverse order.", "raw_instances": "List: ['apple', 'banana',  'cherry', -15]\nInput:\nOutput:\n\n"}
{"instruction": "Generate a random number between 1 and 50 and find the sum of all the digits in the random integer.", "raw_instances": "Example: If a randomly generated number is   34 , the answer would be  (3+4)  = 7.\n"}
{"instruction": "Define a variable called `'string'` of data type `'str'`.", "raw_instances": "Output:\n\nstring = \"Hello World\"\n\n"}
{"instruction": "Create a program that will take in any number, convert it to its binary form, then convert that binary number to decimal form.", "raw_instances": "Example: Input: \"15\"\nOutput (in decimal):  -----------\n1  (binary)\n1   (decimal)\n0  +   ---------\n1 (sum)\n-----------\n2\n\nOutput:\n\ndef binary_to_decimal(binary):\n  decimal = int(binary,2)\n  return decimal\n\nprint(binary_to decimal(\"1\")) #  Output:1\nprint ( binary todecimal(\"0\"))# Output :  O\n# "}
{"instruction": "Using the data provided, create a function that returns the average of all numbers in an array.", "raw_instances": "Data: \n[1503,1605,-1345]\nFunction: def average(arr):\nOutput:\n\ndef average(lst):\n  total = sum(lst)\n  return total / len(lst)\n\nOutput for given data: -1\n\n"}
{"instruction": "Write a sentence using the word \"surrender\" in its past tense.", "raw_instances": "Sentence: I surrendered my keys to the police officer.\n\nOutput:\n\n"}
{"instruction": "Create a program that will take a user input of a positive integer and return its factorial.", "raw_instances": ""}
{"instruction": "What are the different types of loops in programming?", "raw_instances": ""}
{"instruction": "Generate a new list of numbers from the given list.", "raw_instances": "Given list: ['a', 'b',  'c', [2],  ['d', ['e', []]]]\nNew list should contain only the numbers in this list.\n\nOutput:\n\n[2]\n\nExplanation: The new output list contains only one number, which is   in our given input list. \n\n"}
{"instruction": "If i have a string and i want to find the longest word in it, what would you suggest?", "raw_instances": "Input:\nstring = \"This is a test string to test the string length\"\nOutput:\n\ndef longest_word(string):\n  words = string.split()\n  longest = \"\"\n  for word_ in words:\n    if len(word_) > len(longest):\n      longest=word_\n  return longest\n\nstring=\"This string is not the best string\"\nprint(longuest_word(\"This String is Not the Best String\"))\n\n"}
{"instruction": "Can you write a function to check if a word exists in another word list?", "raw_instances": "Input:\nword_list1 = [\"apple\", \"banana\",  \"cherry\",]\nword_to_check = \"apple\"\nOutput:\n\ndef check_word(word_list, word_to_find):\n  for word in word_list:\n    if word == word_find:\n      return True\n  return False\n\ncheck_word([\"apple\",\"banana\",\"cherrry\"], \"appel\") # False\ncheck_words([\"apples\",\"bananas\",\"cherries\"],\"apple\")  # True\n\n"}
{"instruction": "Describe a time when you had to make a difficult decision and explain the steps you took to arrive at your decision.", "raw_instances": "Answer: I had a fri"}
{"instruction": "If you were given a task to write an algorithm for finding the maximum value in an array, what would be the algorithm?", "raw_instances": ""}
{"instruction": "Create a function that takes a string as input and replaces all vowels with underscores.", "raw_instances": "Example: \"Hello World\" -> \"H_ll_ W_rld\"\nInput:\nstring = \"This is a test string\"\nOutput:\"Th_is _s _ _est str_ing\"\n\n"}
{"instruction": "Create a list with 15 elements, where each element is a string of length 5.", "raw_instances": ""}
{"instruction": "If you were to write an algorithm to find the maximum value in a set of numbers, what would be the steps involved in finding the max value?", "raw_instances": "Input:\n1) Start with the smallest number in set\n2) Compare it with each number\n3) If a larger number is found, replace the current max with that number\n\nOutput:\n\n1: Start\n- Initialize a variable max to the lowest number found in your set.\n- Set a counter to zero.\n\n2: Compare\nFor each element in our set:\n- If this element is larger than the currently stored max, update max.\n\n3: "}
{"instruction": "Using the provided code, write the same function but with the added requirement that it should only accept positive integers as input.", "raw_instances": "def square(x):\n  return x * x\n"}
{"instruction": "Use the following code snippet to create an array of numbers and sort it in ascending order.", "raw_instances": "def sort_numbers(arr):\n  return sorted(arr)\nOutput:\n\ndef create_array():\n  arr = [3,15,-2,-16,-34]\n  sorted_arr = sort(arr) # sorted arr is [-13,-6-2]\n  \n"}
{"instruction": "Create a class called animal that has a name and an age attribute.", "raw_instances": "class Animal:\n    def __init__(self, name, age):\n      self.name = name\n      # self.age = age\n"}
{"instruction": "Add a new method to the animal class to print its name.", "raw_instances": "class Animal:\n    def __init__(self, name):\n      self.name = name\n\n    # Add the new print_name method here\ndef printName(self):\n  print(self.name)\n\n"}
{"instruction": "Create a new table with the given name.", "raw_instances": "Name: Employees\nColumns: EmployeeID, EmployeeName, Department, Salary\n\nOutput:\n\nCREATE TABLE Employees (\n    EmployeeId INT PRIMARY KEY,\n    FullName VARCHAR(50),\n    Department VARCHAR (5),\n   Salary DECIMAL(15)\n);\n\n"}
{"instruction": "Can you write a code that finds the longest palindrome in the given string?", "raw_instances": ""}
{"instruction": "If the input is a positive integer, print \"fizz\" if it is divisible by 3, \"buzz\" otherwise, if divisible by 5, then print \"fizzbuzz\", and if not divisible,", "raw_instances": "Output:\n\n"}
{"instruction": "Use the given sentence \"the cat sat on the mat\" to create a sentence with the word \"cat\" replaced with \"dog\" and \"mat\" with an object.", "raw_instances": "Example: \"The dog sat in a basket.\"\nOutput:\n\n"}
{"instruction": "The function should take two parameters and return the sum of them.", "raw_instances": "def add(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "How would a company use the data collected from the survey to improve their products or services?", "raw_instances": "Input:\n1) How satisfied are you with our products/services?\n2) What improvements would you like to see in our product/service?\n3) Would you recomm"}
{"instruction": "Create a function to calculate the sum of all the numbers in the given list, excluding any negative numbers.", "raw_instances": ""}
{"instruction": "Create a function to calculate the area of an isosceles triangle with sides of length 3, 4, & 6.", "raw_instances": "def area_of_isoscele_triangle(a, b, c):\n  s = (a + b + c) /  ₂\n  area = ((s - a) * (s-b) ) * ₁₂ / (4 * math.sqrt(3))\n  return area\n\nOutput:\n\n"}
{"instruction": "How would your ideal world be different from the world we live in today?", "raw_instances": "Input:\nMy ideal future world would be one where everyone is treated with respect and dignity, regardless of their race, g"}
{"instruction": "What is the average number of words per chapter?", "raw_instances": "Input:\nChapter   |  Words\n---------|-------\nChapter1 |   ½\nChapter2 |    ¾\nQuestion:\nWhat is average words in a chapter?\n\n"}
{"instruction": "Create a new word that has the letters 'o', 'i', and 'n' in it.", "raw_instances": ""}
{"instruction": "In a sentence, replace the word \"dog\" with \"cat\" and the number \"3\" in a new sentence.", "raw_instances": "Sentence: There are   3  dogs in this room.\nNew Sentence: There are   cats in this room.\n\nOutput:\n\n"}
{"instruction": "Can you give me an example of a successful project that you worked on in school?", "raw_instances": ""}
{"instruction": "What is the name of a famous american author who wrote \"to kill a mockingbird\"?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the sum of all prime numbers between the numbers 1 and 50 here are some tasks that can be generated using python: 11) generate random numbers from 0 to 99.", "raw_instances": "2) find all even numbers in a list\n3) write a function to find a prime number\n4) create a dictionary with keys as numbers and values as their squares\n5) print the number from a given range\n6) check if a string is palindrome or not\n7) reverse a word\n8 ) find sum and average of numbers\n9) count the occurrence of an element in an array\n13 ) check whether a year is leap year or normal year\n22 ) write an algorithm to check for prime factorization\n"}
{"instruction": "Use the fact that the average of 10 numbers is 50 to solve a math problem.", "raw_instances": ""}
{"instruction": "Use the provided code to create an html page with the title \"my first web page\".", "raw_instances": "Input:\n<html>\n<head>\n    <title>My First Web Page</title>\n</head>\n<body>\n    \n</body>\n<html>\n\nOutput:\n\n<html><head><title>Hello World!</title></head>\n\n"}
{"instruction": "Identify the person who has the highest number of messages.", "raw_instances": "Given: \n[{'name': 'John', 'messages':  ['Hi',  'How are you?', 'Nice to meet you!']},\n {'name':'Jane',   'Messages': ['Hi there!', 'I am good.', 'Thanks for asking.']},\n  {'Name':   \"Mary\", 'Message': [\"Hello!\", 'Good to see you!', \"I'm doing well.\"]}]\n \nOutput:\n\n{'Name':'John','Messages':['Hi','How_are_you?','Nice_to_meet_you!']}\n\n"}
{"instruction": "The number of ways to arrange the characters in a given string is 60, how many different strings can be formed using these arrangements?", "raw_instances": ""}
{"instruction": "Create a program that takes a number as input and prints the multiplication tables of the numbers from 1 to the input number.", "raw_instances": "def multiplication_table(n):\n  for x in xrange(1,n+  )):\n    print \"Multiplication table of\", x\n  print\nfor n in [2]:\n  multiplication_tables(n)\n\n"}
{"instruction": "Create a table that contains the names of the 12 months of a year.", "raw_instances": "| Month | Abbreviation |\n|-------|--------------|\n| January | Jan |\nInput:\n\n"}
{"instruction": "Use the \"split\" function to split the string into words, then use the list comprehension to create a list of all words in that string.", "raw_instances": "string = \"This is a string\"\nOutput:\n\n['This', 'is', \"a\", 'string']\n\n"}
{"instruction": "How to make a cake using only eggs and sugar?", "raw_instances": ""}
{"instruction": "Create a list of synonyms for the words \"happy\" and \"sad\".", "raw_instances": "Output:\n\nhappy: joyful, delighted, pleased, content, elated, ecstatic, overjoyed, euphoric, blissful, cheerful\nsad: unhappy, sorrowful\n\n"}
{"instruction": "Based on given data and a set of rules, generate a new set.", "raw_instances": "Data: {1: 'a',   2: 'b', 3: c}\nRules: If a value is a vowel, replace it with the next vowel in sequence. Otherwise, keep the original value.\nNew data: {'a': 'e', 'b': 'c', c: d}\n\n"}
{"instruction": "Create a list of numbers from -1 to 50, and then print out all of their squares.", "raw_instances": "def squares():\n    squares = []\n    # Create list from [-1..51] and store squares in squares list\nfor i, num in enumerate(range(-1 *  \t52)):\n    if i %  (53) ==  ((55) - ((-1) * (i % (2 * ((i //  (-1)) % ((2) + (3)) * (-2)) + ((13 * i) % (-3)))))):\n        squares.app"}
{"instruction": "What is the probability of getting a rain on any given day in a given month?", "raw_instances": "Input:\n- The probability that it will rain in any month is ¼.\n- There are  31 days in that month.\nAnswer: The chance of rain is (3/4) * (2/3) ^  (n-1) where n is number days. For  ½ of month, (4/5)^(365/2) is probability.\n\nOutput:\n\n"}
{"instruction": "Create a new list of numbers from a list containing only even numbers.", "raw_instances": ""}
{"instruction": "Use the data to create an array of objects with two properties: \"name\" and \"age\".", "raw_instances": "Input:\n[\n  { name: 'John', age:25 },\n  {\n    name:'Jane',\n    age:'31'\n  },\n]\n"}
{"instruction": "Make a table of the top 15 most popular movies in 2019.", "raw_instances": "Table:\n| Rank | Movie Title | Box Office |\n|------|-------------|------------|\n|  \t1 | Avengers: "}
{"instruction": "If the number of people in a room is 12 and 3 of them are women, how many men are there in total?", "raw_instances": ""}
{"instruction": "Develop a mobile application for an online store.", "raw_instances": ""}
{"instruction": "This is a very simple task.", "raw_instances": ""}
{"instruction": "Create a web page that displays a table of all prime numbers up to a certain number.", "raw_instances": ""}
{"instruction": "Imagine you are a scientist studying the human brain.", "raw_instances": ""}
{"instruction": "How can i find the sum of two numbers in python?", "raw_instances": "Input:\nnum1 = int(input(\"Enter the First Number: \"))\nnum2 =int(input('Enter Second Number : '))\nOutput:\n\ndef add(num1,num2):\n  return num1 + num2\n\nprint(add(num2,num1))\n\n"}
{"instruction": "Make a table of all the words that are used in this text and output it.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nTable:\n| Word | Frequency |\n|------|-----------|\n| The  |  -----------\n| quick|  ----------\n| brown|   ----------\n|\nOutput:\n\n"}
{"instruction": "Use the following code to print the first 5 elements of a linked list: ``` class node: def __init__(self, data=none): self.", "raw_instances": "data = data self.next = None def print_list(head): current = head while current: print(current.data, end=\" \") current=current.next print() ```\nInput:\n``` class Node: \n    def insert(self, val): \n        if not self.data:  \n            self.val = val \n            return \n          \n        temp = Node() \n       \n        curr = self \n         \n        while curr.next: curr=curr.next \n      \n        # insert the new node at the end \n   \n        self = curr \n     \n        current.data = temp \n```\nOutput:\n\n"}
{"instruction": "Create a function that returns a string with the given number of characters.", "raw_instances": "Number of Characters: \"15\"\nOutput:\n\ndef create_string(num_chars):\n  return \" \" * num_chars\n\nOutput for num_char = \"5\": \"    \"\n\n"}
{"instruction": "How would you solve the following problem: given a number n, find the sum of all the numbers from 1 to n?", "raw_instances": "Input:\nn = int(input(\"Enter a positive integer: \"))\nOutput:\n\ndef find_sum(n):\n  sum_of_numbers = sum(range(1,n+  )))\n  return(sum_of_number)\n\n"}
{"instruction": "Use the information given to create an algorithm that can predict the stock market.", "raw_instances": "Information: The stock price of Apple Inc. has been increasing steadily over the past  year.\nAlgorithm: \n1) Collect historical data on the price and volume of stocks for Apple.\n2) Use machine learning algorithms to analyze the data and identify patterns.\n3) Train the model on historical stock data to predict future stock prices.\n4) Continuously update the algorithm with new data as it becomes available.\n5) Monitor the performance of your model and make adjustments as necessary.\n\nOutput:\n\n"}
{"instruction": "How do you feel when you get a bad grade on a test?", "raw_instances": ""}
{"instruction": "Use the following code and write a python function which will return the sum of the elements in a given list.", "raw_instances": ""}
{"instruction": "Given a set of sentences, your task is to find the longest sentence in that set.", "raw_instances": "Sentence   1: The quick brown fox jumps over the lazy dog.\n Sentence    ²: I am the walrus.\n Output: Sentence  ¹: \"The quick brown fox jumps over the lazy dog.\"\n\n"}
{"instruction": "Solve the quadratic equation with the given coefficients.", "raw_instances": ""}
{"instruction": "The user should input a list of numbers.", "raw_instances": ""}
{"instruction": "Describe a situation where your friend was not able to understand you.", "raw_instances": ""}
{"instruction": "Describe the steps to make a cake.", "raw_instances": ""}
{"instruction": "How can you use a computer to solve a math problem?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Tell me about a difficult decision you made in your life.", "raw_instances": ""}
{"instruction": "Using the words \"happy\", \"sad\", and \"angry\", create a sentence that describes the emotions of a person.", "raw_instances": "Example: The person was happy, sad, then angry.\nAnswer: \nThe person started with happiness, ended with sadness, only to become angry in between.\n\nOutput:\n\n"}
{"instruction": "Determine the most frequent word and how many times it appears in an article.", "raw_instances": "Article: The quick brown fox jumps over the lazy dog. This sentence is often used to test keyboards and fonts.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog', '.']\nOutput:\n\nThe most frequently used word in this article is \"the\" and it is used   3 times.\n\nPlease note that the word \"sentence\" is not included in your list of words, as it's not a word but a noun. \n\n"}
{"instruction": "Compare the sentiment of two given sentences.", "raw_instances": "Sentence  ①: I am so happy today!\nSentence   Ⅱ: Today is a terrible day.\nAnswer: Sentence  I is more positive than Sentence II.\n\nOutput:\n\n"}
{"instruction": "Write a program to find the number of prime numbers in the given range.", "raw_instances": "Range: (2-15)\nOutput:\n\ndef count_primes(n):\n  count =0 \n  for num in xrange(2,n+  )):\n    if all(num%i!=0 for  i  in   xrange (  num  +1  , n  ) ):\n      count +=  len( filter( lambda x: x%num==0 ,  xrange(num+2 ,n+3) ) )\n  return count\n\nprint count_prime(16)\n\n"}
{"instruction": "Create a list with 10 words related to \"dog\".", "raw_instances": "Output:\n\n1) Bark\n2) Paws\n3) Tail\n4) Woof\n5) Collar\n6) Leash\n7) Biscuit\n8 ) Kennel\n9) Hound\n1  ound\n\n"}
{"instruction": "If the input is a string, create a new string with all the vowels removed.", "raw_instances": "Example: Input: \"Hello World\"\nOutput:\"Hll Wrld\"\n\n"}
{"instruction": "How do you handle a situation where you have to make a decision quickly?", "raw_instances": "Input:\n"}
{"instruction": "Develop a system that will help me to learn a new language.", "raw_instances": ""}
{"instruction": "Using the given data, create a new dataset with the data sorted in ascending order.", "raw_instances": ""}
{"instruction": "Given a sentence, find out the length of each word.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', ...]\n\nOutput:\n\n"}
{"instruction": "Can you write a code that takes a user input and prints out the number of vowels in the input string?", "raw_instances": "Input:\nuser_input = input(\"Enter a string: \")\nOutput:\n\ndef count_vowels(user_input):\n  vowels = ['a', 'e',  'i',   'o',    'u']\n  count =0 \n  for char in user_input:\n    if char.lower() in vowels:\n      count +=   userinput.count(char.lower())\n  return count\n\nuserinput = \"Hello World\"\nprint(count_vowel(userinput))\n\n"}
{"instruction": "Using the following data, create an algorithm to find the average of the numbers.", "raw_instances": "[1503,1605,-1345]\nInput:\nOutput:\n\n"}
{"instruction": "This task is to find the difference between two given words.", "raw_instances": "Example: \"Dog\" and \"Cat\"\nOutput should be \"C\"\n"}
{"instruction": "Create a table of 100 words with the meaning of each word 11.", "raw_instances": "Table:\nWord | Meaning\n1 |  ........................\n2 | ................................\n3 | ........................................................................\n4 |............................................................................\n5 |.............................................................\n6 |..............................\n7 |.......................\n8 |...............\n\n"}
{"instruction": "A person is walking on a sidewalk.", "raw_instances": "The sidewalk is  ⅔  of an hour long.\nHow long is it in minutes?\nAnswer: The sidewalk would be  (45) minutes long.\n\nOutput:\n\n"}
{"instruction": "Implement a method in a given class that returns a boolean value indicating whether a number is prime or composite.", "raw_instances": ""}
{"instruction": "What are the most important qualities of an effective leader?", "raw_instances": "Input:\n1) Vision\n2) Communication\n3) Empathy\n4) Integrity\n5) Adaptability\n6) Accountability\n7) Creativity\n8 ) Resilience\n9) Emotional Intelligence\n1  ）领导力\n输出：1）远见\n  -2）沟通\n   -3）同理心\n     -5）适应性\n      -6）责任\n       -7）创造力\n        -8）韧性\n         -9）情商\n\n"}
{"instruction": "Explain the difference between a software bug and a security vulnerability.", "raw_instances": "Software bug: A software defect or flaw that causes the software to behave in an unexpected or unint"}
{"instruction": "How many books have you finished reading in 2021?", "raw_instances": "Input:\n- 《白夜行》 by 东野圭吾\n-《活着》by余华\n -《围城》  by 钱钟书\n  -读了1/3\n   -2/4\n     -3/5\n       -1\n         -5/6\n           -6/7\n             -7/8\n               -8/9\n                 -9/1\n\nOutput:\n\nYou have finished  读完了 了 本 书 。\n\n"}
{"instruction": "Which book do you think is better, harry potter or the lord of the rings?", "raw_instances": "Input:\nHarry Potter\nThe Lord of The Rings\n"}
{"instruction": "Come up a way of solving the problem of \"what is the capital of france?", "raw_instances": "Input:\nOutput:\n\nOne way to solve this problem is to use a search engine or a dictionary to look up the answer. Another way is by using a knowledge database or an encyclopedia that contains information about countries and their capitals. Additionally, one can use an app or website that provides quick answers to common questions, such as \"What is capital city of France?\".\n\nAnother way could be to ask a friend or family member who might know the information. \n\n"}
{"instruction": "Do you know the meaning of the word \"sushi\"?", "raw_instances": "Input:\nOutput:\n\nYes, sushi is a Japanese dish consisting of vinegared rice combined with various ingredients, such as raw fish, seafood, vegetables, or egg. It is typically served with soy sauce, pickled ginger, nori, Wasabi, etc. Sushi is often eaten as a part of an elaborate multi-course meal, called a \"kaiseki\" or as an appetizer.\n\nDo you have any other questions or is that all?\n\n"}
{"instruction": "Use the following code to print the first 5 lines of pascal's triangle.", "raw_instances": "def pascals_triangle(n):\n  triangle = [[1]]\n  for line in p:\n    next_line = [sum(row) for row in zip(*triangle)]\n    triangle.append(next_line)\n  return triangle\n\nOutput:\n\n"}
{"instruction": "Imagine you have an infinite number of coins.", "raw_instances": ""}
{"instruction": "Convert a given string to a list of words.", "raw_instances": "Example: \"This is a test string\"\nOutput:\n\n['This', 'is', \"a\", 'test', string']\n\n"}
{"instruction": "Come up a plan to solve the problem of traffic congestion in a city.", "raw_instances": ""}
{"instruction": "Write a short story based on the prompt \"a young girl discovers a secret room in her house\".", "raw_instances": ""}
{"instruction": "Find the sum of the first 3 prime number in the series 4, 6,7,8,9,11, etc.", "raw_instances": "Answer: The first three prime numbers in this series are   4 +6 +7 =13\n\n"}
{"instruction": "Create a table of 5 numbers and their corresponding squares.", "raw_instances": "Table:\nNumber | Square\n1 |   1\n2 |    \n3 |     \n4 |    \n5 |    \n\nOutput:\n\nNumber  |    Square \n1       |     １\n ２      |      ４\n3        |       ９\n４        |\n５        |\n\n"}
{"instruction": "What is the name of one of shakespeare's most famous plays?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the index of the item in the array here are some tasks that you could consider: 11a.", "raw_instances": ""}
{"instruction": "Create a program that prints the numbers from 5 to 9.", "raw_instances": ""}
{"instruction": "List 3 things to do when you are bored.", "raw_instances": "1) Watch a movie\n2) Read a book\n3) Go for an outdoor walk\n\nOutput:\n\n"}
{"instruction": "Create a program that can identify the most important words in the text and output them in order of importance.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog.]\n"}
{"instruction": "Find the area of a triangle with sides of length 5, 12 and 9.", "raw_instances": "Answer: The area is  ½ *  (5 +1 ²) * (9 -1)² = (½) (6) ³ =162/2 =9\n\nOutput:\n\n"}
{"instruction": "Explain the concept of \"a computer is a machine that can be programmed to do anything.", "raw_instances": ""}
{"instruction": "Imagine you were a superhero.", "raw_instances": "What would your superpower be?\nWhat is your superhero name?\nHow would you use your power to help people?\nWho would be your sidekick?\nWhere would we find you?\n"}
{"instruction": "If you have a variable that contains a number, what is the value of that variable after you multiply it by 2?", "raw_instances": ""}
{"instruction": "If you were to create a program that could predict the next word in any given sentence based on the previous words, what would it look and feel like?", "raw_instances": "Input:\n\n"}
{"instruction": "Use the function to find the common word between \"the quick brown fox\" and \"jumps over the lazy dog\".", "raw_instances": "Output:\n\ndef common_word(str1: str, str2: \"str\") -> str:\n    words1 = str1.split()\n    common_words = []\n    if len(words1) == len(str2.split()):\n        for word1 in words:\n            for str in str.split():\n                if word == str and word not in common:\n                    common.append(word)\n        return common[0]\n    else:\n        print(\"The two strings do not have the same number or words.\")\n\n"}
{"instruction": "Can you explain the solution in detail?", "raw_instances": ""}
{"instruction": "Generate a list of 15 words that are synonyms for the words in sentence \"the dog is barking loudly.", "raw_instances": ""}
{"instruction": "Find the first letter of each of a set of strings, then concatenate them to form a new string.", "raw_instances": "Example: strings = [\"Hello\", \"World\", \"!\"]\nOutput should be: \"HW!\"\n\n"}
{"instruction": "Generate a list of 10 words from the list given below.", "raw_instances": ""}
{"instruction": "Describe the process of machine learning and explain how it is used in various fields.", "raw_instances": ""}
{"instruction": "List the 15 best selling books in 2021.", "raw_instances": ""}
{"instruction": "If the given number is a prime number, print “prime” else print \"not prime\" 11.", "raw_instances": "13.\n23.  Output: prime, prime and not prime respectively.\n\n"}
{"instruction": "Describe a beautiful sunset.", "raw_instances": ""}
{"instruction": "Can you create an algorithm that takes a number and returns the sum of all its digits?", "raw_instances": "Input:\n153\n16\n234\n567\n89\n98765\n457368\n372\n648271\n7596313\n\nOutput:\n\ndef digit_sum(n):\n  sum_digits = sum(int(digit) for digit in str(n))\n  return(sum_digits)\n\n"}
{"instruction": "Develop a web application that allows users to input a sentence and receive a corrected version of the same sentence.", "raw_instances": ""}
{"instruction": "Explain why you think the movie \"the shawshank redemption\" is a classic.", "raw_instances": ""}
{"instruction": "Find the most popular movie genre in a certain year.", "raw_instances": ""}
{"instruction": "Create a program that will take a user input and print out the number of days it will be hot in a given city.", "raw_instances": "def days_hot(city):\n  if city == \"New York\":\n    days = \"365\"\n  elif city ==\"Los Angeles\":\n     days =\"345\" \n  else:\n    print(\"City not found\")\n  return days\n\n"}
{"instruction": "Create a table with the first 20 prime number and their corresponding squares.", "raw_instances": "| Prime Number | Square |\n|--------------|--------|\n|  ₂           | ₄      |\n |   ³          |    ⁹  |\n  |     ₁₁       |      ۱₂₁  |\n\n"}
{"instruction": "Create a new string by replacing all occurrences of 'a' with 'b'.", "raw_instances": "Input:\nstring = \"abacabadababa\"\nOutput string = “bbcbcbdbbb”\n\n"}
{"instruction": "Create a program that can detect if a given string is an anagram of another string.", "raw_instances": "def is_anagram(str1,str2):\n  if len(str2) != len (str1): \n    # If strings are not same length, they cannot be anagrams\n  return sorted(str) == sorted (s2)\n\n"}
{"instruction": "List the countries that are in the middle of europe.", "raw_instances": "Answer: Austria, Belarus, Bulgaria, Croatia, Czech Republic, Hungary, Kosovo, Poland, Romania, Serbia, Slovakia, Slovenia, Ukraine.\n\nOutput:\n\n"}
{"instruction": "Convert the string to uppercase and print the result.", "raw_instances": "String: hello world\nInput:\nString = \"hello world\"\nOutput:\n\nprint(String.upper())\n\n"}
{"instruction": "If you are given a number, write a function that returns its square root.", "raw_instances": "Example: sqrt(16) should return   4\nInput:\n1\n2\n3\n4\n\nOutput:\n\n4.0\n\n2.8284**********1348\n\n1\n\n3.159*********1e-1**\n\n"}
{"instruction": "How can i get to the nearest train station?", "raw_instances": "Input:\nOutput:\n\nYou can get the train to your destination by taking the subway to [Subway Station] and then transferring to train at [Train Station]. The subway station is located [Distance] away from your current location. \n\n"}
{"instruction": "Find the sum of all the odd numbers in the range of numbers from 1 to 20.", "raw_instances": ""}
{"instruction": "What are the key differences between a stack and queue data structure?", "raw_instances": ""}
{"instruction": "If you were to create a list of your top 5 favorite books, which would they be?", "raw_instances": "Input:\n1) The Catcher in The Rye by J.D. Salinger\n2) To Kill a Mockingbird by Harper Lee\n3)  The Great Gatsby by F. Scott Fitzgerald\n4) Pride and Prejudice by Jane Austen\n5) Lord of The Flies by William Golding\n6) Animal Farm by George Orwell\n7) A Clockwork Orange by Anthony Burgess\n8 ) The Hunger Games by Suzanne Collins\n9) Harry Potter and the Philosopher's Stone by JK Rowling\n13 )  《1Q84》 by Haruki Murakami\n"}
{"instruction": "Find the most common word used by the user in a given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe most commonly used word in this text is \"the\".\n\n"}
{"instruction": "If i have 200 dollars, what is my maximum profit if i invest it in 3 different stocks?", "raw_instances": "Input:\nStock  A: $150 per share\nStock B: \\$133.75 per Share\nstock C: $\\$166.67 per shares\n"}
{"instruction": "Create a function to find the longest word from a string.", "raw_instances": "Example: \"The quick brown fox jumps over the lazy dog\"\nOutput should be \"jumps\"\n\n"}
{"instruction": "Using the given data, create an algorithm to predict whether a person will buy a product based on their age, gender, and income.", "raw_instances": "Data: \nAge: (25-34), (36-45),  (46+)\nG"}
{"instruction": "Create a list of 8 adjectives that describe a person who is a good listener.", "raw_instances": "1) Attentive\n2) Empathetic\n3) Patient\n4) Non-judgmental\n5) Open-minded\n6) Thoughtful\n7) Reflective \n8)\n\n"}
{"instruction": "Create a program to check the validity of a given email address.", "raw_instances": "def is_valid_email(email):\n  if \"@\" not in email:\n    print(\"Invalid email\")\n    exit()\n  else:\n     return True\n\nend.\n\nOutput:\n\n"}
{"instruction": "Give me an analogy for the concept of \"time\".", "raw_instances": "Output:\n\nTime is like a river that flows continuously, carrying us along with it as it goes. Just as the river can be dammed up or diverted, time can also be slowed down or sped up, dep"}
{"instruction": "Imagine you are a famous scientist and you have to explain your latest discovery to the public.", "raw_instances": "You are given a paragraph describing your discovery.\nYour task is to rephrase the sentence \"The discovery is a breakthrough in science\" in a way that is understandable to non-scientists.\nThe sentence should be concise and clear, while still conveying the importance of your work.\nUse simple language and avoid technical jargon.\nExample: \"My discovery has the potential to change the world.\"\n\n"}
{"instruction": "How do i make a website that displays a list of items and allows the user to add items to a shopping cart?", "raw_instances": "Input:\n\n"}
{"instruction": "Find the sum of the digits in the product of 10 and 20.", "raw_instances": "Answer: The product is   2  x     =   4  . The sum is      +       +\n=         .\nThe sum  of digits is    .\n\n"}
{"instruction": "If the number is divisible by 3, output \"fizz\", if it is a multiple of both 4 and7, then output 'buzz', and if not, it should output that number.", "raw_instances": ""}
{"instruction": "In a given string, find the longest word that contains at least 6 characters and outputs it.", "raw_instances": "Example: \"The quick brown fox jumps over the lazy dog\"\nOutput:\n\n"}
{"instruction": "If you were to write the first 1,001 words of the book \"the catcher in the rye\", what would they be?", "raw_instances": "Input:\nThe Catcher in The Rye is a novel written by J.D. Salinger. It was published on July   16th,    1  and is about a teenage boy named Holden Caulfield who has been expelled from his prep school. He decides to leave New York City and travel around the East Coast for several days before returning home. During his journey, he meets a variety of people and has many experiences that change his outlook on life. By the "}
{"instruction": "The function should return the number of times the word appears in the list.", "raw_instances": "def count_word(word, lst):\n  count = lst.count(word)\n  return count\n\nOutput:\n\n"}
{"instruction": "Using the code provided, write an algorithm to sort the list in ascending order.", "raw_instances": ""}
{"instruction": "List 3 things that you have learned from your mistakes.", "raw_instances": "1) Always double-check your work before submitting it.\n2) Don't be afraid to ask for help when you need it, even if it means admitting that there is something you don't know.\n3) Take responsibility for mistakes and learn from them, rather than making excuses or blaming others.\n\nOutput:\n\n"}
{"instruction": "The task is to create a function that will take in two numbers as input and return the sum of them.", "raw_instances": ""}
{"instruction": "Find the sum of all the numbers in the list [123,456,789,11].", "raw_instances": "Output:\n\n1337\n\n"}
{"instruction": "Use the following data to create a histogram of a given set of numbers.", "raw_instances": ""}
{"instruction": "Come up a list of 30 things that you would like to do before you die.", "raw_instances": "1) Learn to play the piano\n2) Visit all 七大洲\n3) Write and publish a book\n4) Go skydiving\n5) Take a cooking class\n6) See the Northern Lights\n7) Att"}
{"instruction": "If you were to create a program that would calculate the average of a list of numbers, what would you do to ensure that the list is sorted before calculating the mean?", "raw_instances": ""}
{"instruction": "Give me a piece of code that will print the first 15 numbers of a fibonacci sequence.", "raw_instances": "def fibonacci(n):\n  a, b = [0], [2]\n  for _ in [None]*n-2:\n    a.append(b[-1]+b[-2])\n    b.append(a[-3]+a[-4])\n  return a\n\nprint(fibonacci(16)[:1])\n\n"}
{"instruction": "Using the code below, write your own function to check if a given number is prime or composite.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n    print(\"Not prime\")\n  elif n ==  2:\n   print (\"Prime\")\n   return\n  else:\n     for x in xrange(2,n):\n       if (n % x) ==0:\n         print \"Not Prime\"\n         return \n     print\"Prime\"\n"}
{"instruction": "If you were to create a program that could generate random numbers, what would you do to ensure that the numbers were truly random?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a table of all possible combinations of 2 numbers.", "raw_instances": ""}
{"instruction": "Can you find the missing word?", "raw_instances": "Input:\nThe _______ is a large, warm-blooded, egg-laying vertebrate with hair.\nOptions: bird, reptile, mammal\nAnswer: mammalian\n\nOutput:\n\n"}
{"instruction": "Given a list of words, create a function that returns the longest word.", "raw_instances": "Example: ['cat', 'elephant',  'apple',   'banana']\nOutput should be: 'Elephant'\n\n"}
{"instruction": "How would you describe the most important lesson you have learned in your life?", "raw_instances": "Input:\nThe most significant lesson I have ever learned is that life is not about what happens to you, or what you achieve, life happens when you are open to it, when your heart is open, your mind is clear, then you will experience life. It is about how you respond to what life throws at you. Life is a journey, not a destination. And the journey is what matters most. So, be open and enjoy the ride.\n\nOutput:\n\n"}
{"instruction": "Create an array of strings and sort them in alphabetical order.", "raw_instances": "Array: [\"apple\", \"banana\",  \"cherry\", -1] \nOutput:\n\ndef sort_strings(arr):\n  arr.sort()\n  return arr\n\nOutput = [\"-1\", 'apple', 'banana', \"Cherry\"]\n\n"}
{"instruction": "You are asked to write a program that takes a list of numbers and returns the sum of those numbers.", "raw_instances": ""}
{"instruction": "You have a bag with 50 marbles.", "raw_instances": ""}
{"instruction": "Use the following information: name = \"harry potter\", age = 17, sex = male, address = london, england, occupation = student, school = hogwarts, hogwarts = school of witchcraft and wizardry, year =1921, class = gryffindor, house = slytherin", "raw_instances": "Create a dictionary with the above information.\nDictionary: {'name': 'harrpotter', 'age':  erty, 'sex': male,'address': london,'england', occupation': student,'school': hogarts,'hogwarts': schoolofwitchcraftandwizardry,'year':1,'class': grrffinor,'house': sylthering}\n\n"}
{"instruction": "Read a text and output the number of times the word \"the\" appears in this text.", "raw_instances": ""}
{"instruction": "Find the most frequent word that appears more than once in an input text.", "raw_instances": ""}
{"instruction": "I have 100 dollars and i want to buy a book.", "raw_instances": "How much money should i spend on the book?\nInput:\n1 book costs   $15.05\n1 pen costs $  .50\n\nOutput:\n\n1/2 of your money is  $\\frac{1}{2} \\times  \\1  = \\0\\52$\n1 dollar is $\\1$\nSo you should spend $\\0 \\5 \\frac {1} {2}$ on a pen and $\\ \\9 \\7 \\ \\8 \\3 \\  on \\ a \\ book$\n\n"}
{"instruction": "Generate a list of 50 random", "raw_instances": "Input:\n\n"}
{"instruction": "Can you come up a way for me to make money online?", "raw_instances": ""}
{"instruction": "Use the following code to create a program that prints out a multiplication table from 0 to 9.", "raw_instances": "def multiplication_table(n):\n  for x in [0..9]:\n    print(n, \"x\", x, \"=\", n*x)\n"}
{"instruction": "Find the most common word in this document and write a sentence using that word.", "raw_instances": "Document: The quick brown fox jumps over the lazy dog. This sentence is a pangram, meaning it contains every letter of English alphabet at least once.\nMost common words in document: the, quick, brown, fox, jumps, over, lazy, dog, sentence, pangrams, every, letter, English.\nSentence using the word \"sentence\": This is an example of how to use the sentence function in a document.\n\nOutput:\n\n"}
{"instruction": "Make a table with the top 15 most frequent words in a document.", "raw_instances": "Document: \"The quick brown fox jumps over the lazy dog. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed at risus vel nisl euismod feugiat. Nulla facilisi. Donec vel quam vel velit ultrices bib"}
{"instruction": "What is the meaning of \"i'm sorry, i can't\"?", "raw_instances": ""}
{"instruction": "Explain the difference between \"good\" and \"bad\" behavior.", "raw_instances": ""}
{"instruction": "Create a class called person with attributes name, age, address, gender, occupation, hobbies, interests, favorite color, email, phone number, birthday, is adult, etc.", "raw_instances": "class Person:\n    def __init__(self, name: str, \n                 age: int,  \n                 address: list,   \n                 g"}
{"instruction": "Can you provide an algorithm for solving the traveling salesman problem?", "raw_instances": ""}
{"instruction": "Ask me to do something 11.", "raw_instances": ""}
{"instruction": "Calculate the sum of all the digits in the integer 2021.", "raw_instances": "Answer: The sum is   6.\n\nOutput:\n\n"}
{"instruction": "Calculate the average of the numbers 2, 4, and then 6.", "raw_instances": "Answer: (2+4+6)/3 = (6+2)/2 =8/2=4\n\n"}
{"instruction": "Create a new product using a given name and description.", "raw_instances": "Product Name: Smart Wallet\nDescription: A sleek and modern wallet that can hold all your cards and cash, while also having a built-in payment system.\n"}
{"instruction": "I am going to write a function that will take a string as an input, remove all spaces, then print the string.", "raw_instances": "Write the function.\ndef remove_spaces(s):\n  return s.replace(\" \", \"\")\n\n"}
{"instruction": "Name the most popular sport in america.", "raw_instances": "Answer: American football\n\n"}
{"instruction": "Add a constraint to the \"age\" column that requires it to be greater than or equal to 20.", "raw_instances": "Table: \n| name | age |\n|------|-----|\n| John |  ˜15|\nOutput:\n\nTable:\n|name |age|\n|--|--|\n|\"John\"|22|\n\n"}
{"instruction": "Create a new sentence by adding a conjunction between two given words.", "raw_instances": "Words: \"I am\" and \"happy\"\nOutput:\n\n"}
{"instruction": "Create a dictionary with the keys \"apple\", \"banana\", and \"orange\" and the values \"red\", yellow, and orange, respectively.", "raw_instances": "Dictionary: {'apple': 'red', 'banana': yellow', orange': orange}\n\n"}
{"instruction": "Create a list of strings and print the length of each string.", "raw_instances": "List: ['Hello', 'World', '!']\nOutput:\n\n- Hello: length  ５\n- World:   length   ６\n!         length    １\n\n"}
{"instruction": "In a given sentence, find the word that is most similar to the letter 'e'.", "raw_instances": "Input:\nThe quick brown fox jumps over the lazy dog.\nSentence: The quick [word] brown [letter] fox [letters] over [words] lazy [alphabet] dog.\n\nOutput:\n\n"}
{"instruction": "Can you give me an example of an effective negotiation strategy?", "raw_instances": "Input:\nOutput:\n\nOne effective strategy for negotiation is to start with the "}
{"instruction": "Describe the feeling of being in a dream.", "raw_instances": ""}
{"instruction": "If the given number is divisible by 5, print \"divisible by five\" else print the remainder.", "raw_instances": "Number: \nOutput:\n\nNumber = int(input(\"Enter a Number: \"))\nif Number %  umber %5 ==  :\n    print(\"divisble by Five\")\nelse:\n    remainder = Number%5\nprint(\"Remainder is: \", remainder)\n\n"}
{"instruction": "Generate a random number between 0 and 99 and find the corresponding letter in alphabetical order.", "raw_instances": "Example: If  the random integer is   45 , the letter is \"T\".\nOutput:\n\nThe random value is: \n46\n\nThe corresponding alphabetical letter: \"R\"\n\n"}
{"instruction": "Create a table of the top 15 most popular jokes on the internet.", "raw_instances": ""}
{"instruction": "Find the sum of all numbers that are divisible by 2 and 7 in this list.", "raw_instances": ""}
{"instruction": "Create a 30 second video clip that explains the basics of a new technology.", "raw_instances": ""}
{"instruction": "How to write a good resume here are the steps to complete each task: 1: write an article that accurately and fluently concedes all given structured information about the subject.", "raw_instances": "2: use the article to create a resume.\n3: make sure the resume is well written and easy to read.\n4: proofread the document for any errors.\n5: save the file in a readable format.\n6: s"}
{"instruction": "Based on the given information, create an algorithm to calculate a person's age.", "raw_instances": ""}
{"instruction": "Convert 200 to fahrenheit.", "raw_instances": "Answer: The conversion formula is F = (9/5)C +3.2. So, F= (273+25)/5 +2 =233F\n\n"}
{"instruction": "Calculate the average of three given integers.", "raw_instances": "Inputs: a = -2\nb = +3\nc = a + b\na = c + a\nprint(a)\nOutput:\n\n-1\n\n"}
{"instruction": "If you have a string of numbers, what is your code to convert it to a float?", "raw_instances": "Input:\n\"15.2\"\nOutput:\n\nfloat(\"16.1\")\n\n"}
{"instruction": "How to improve my writing skills?", "raw_instances": "Input:\n\n"}
{"instruction": "How can you use a computer to help you with your work?", "raw_instances": "Input:\n1) Use a word processor to create documents.\n2) Create spreadsheets to organize data.\n3) Search the internet for information.\n4) Send emails to communicate with colleagues.\n5) Play games to relax.\n6) Watch movies to unwind.\n7) Listen to music to de-stress.\n8 ) Use social media to connect with friends and family.\n9) Take online courses to learn new skills.\n1  ound.\n"}
{"instruction": "In a class of 40 students, how many students are left after the teacher has dismissed 5 students?", "raw_instances": "Input:\n45\n4\n50\n\nOutput:\n\n4\n\nExplanation:\nThe total number students in a classroom is   4 students. After the dismissal of five students the number left is four.\n\nOutput  :  \"4\"\n\n"}
{"instruction": "How would you modify the code below so that it prints out the first 15 elements of the list?", "raw_instances": "Input:\nlist = [0]*16\nprint(list)\nOutput:\n\nlist1 = list[:13]\nprint(\"First   elements: \", list1)\n\n"}
{"instruction": "Use the provided code to print the first 15 numbers of an arithmetic sequence.", "raw_instances": "def print_sequence(a, d, l):\n  for n in xrange(l):\n      print a + n * d\n\nprint_sequence(13,2,-1)\n\n"}
{"instruction": "Create a program that can generate a 3d model of a house.", "raw_instances": ""}
{"instruction": "If a person is 25 years old, write a code to calculate their age in dog years.", "raw_instances": "def dog_years(age):\n  if age >=   -1:\n    age = age *  (7/4)\n  elif age ==  +1: \n    print(\"The dog is a puppy!\")\n  else:\n      print('The calculation is not possible.')\n  return age\n\ndog_years(2)\n\n"}
{"instruction": "Create a list of 5 things you need in order to be successful in your career.", "raw_instances": "1) Education and training\n2) Networking and building relationships\n3) Hard work and dedication\n4) Continuous learning and development\n5) A positive attitude and mindset\n\nOutput:\n\n"}
{"instruction": "Create a table with the data from the previous question and write a code to calculate the average of all the numbers in that table.", "raw_instances": "Table:\n| Name | Age |\n|------|-----|\n| George |  ⅔  |\nOutput:\n\n|  Name  |   Age   |\n    |--------|----------|\n    乔治 |    (2/3) |\n\nCode:\n```python\ntable = [\n    [\"George\",  (3/2)],\n    [Confucian, (5/4)],\n]\n\ntotal = sum([row[1] for row in table])\naverage = total / len(table)\nprint(\"Average:\", average)\n```\n\n"}
{"instruction": "Write a sentence using the words in order.", "raw_instances": "Words: \"The\", \"quick\", and \"brown\", fox, \"jumps\", over, lazy, dog.\nSentence: The quick brown fox jumps over the lazy dog.\n\nOutput:\n\n"}
{"instruction": "Name the most famous scientist in history.", "raw_instances": ""}
{"instruction": "Create a table that shows the number of vowels in a string, the length of the string and the frequency of each vowel.", "raw_instances": "String: \"Hello World\"\nOutput:\n\n| Vowel | Frequency | Length |\n|-------|-----------|--------|\n|   E   |     ½     |    ¼   |\n|\n|\n|\n\n"}
{"instruction": "If the input is not a valid integer, output \"invalid input\".", "raw_instances": "Input:\n15\n16\ninvalid\nInvalid input\n\nOutput:\n\n"}
{"instruction": "Sort these people by age.", "raw_instances": "John, Mary, Peter, Jane\nInput:\nOutput:\n\n1) John\n2) Mary\n3) Peter\n4) Jane\n\n"}
{"instruction": "You are asked to write a letter to your friend.", "raw_instances": "You are going to visit them in a few days. Write the letter.\nYour friend's name is John.\nJohn lives in New York.\nHe is a doctor.\nHis wife's full name: Mary.\nTheir son's age: five.\nThey have a dog named Max.\n"}
{"instruction": "Generate a random number from 0 to 99.", "raw_instances": ""}
{"instruction": "Use the list below to create a dictionary with each number as the key and its square as its value.", "raw_instances": "[1503,1605]\nInput:\nOutput:\n\n"}
{"instruction": "Write a short story about a person who has the power to control time and how they use it.", "raw_instances": ""}
{"instruction": "How can you use the `zip()` function to iterate over two lists simultaneously?", "raw_instances": "Input:\nlist1 = [23, \"John\",  ½]\nlist2 = [\"apple\", \"banana\", True]\nQuestion:\nHow can I iterate through both lists at the same time?\nAnswer:\nYou can use a `for` loop with the built-in `enumerate()` and `map()` functions to achieve this. Here's an example:\n```\nfor i, (a, b) in enumerate(zip(list1,list2)):\n    print(i, 'list  a:', a, ', list  b:', b)\n```\n\n"}
{"instruction": "Describe your favorite food.", "raw_instances": "My favorite type is [Food Type]. I love the [Characteristic of Food Type], and the way it [Action]. It is also [Additional characteristic of food type]. Overall, [Favorite Food] is a delicious and satisfying meal.\n\nOutput:\n\n"}
{"instruction": "If you were to write a program that would take in a user's name and age, what would you do next?", "raw_instances": "Input:\nName: John\nAge:25\nNext, we would need a way to store the user’s name, age and any other relevant information. We could use a database or a file to save this information, or we could create a class to encapsulate the data and provide methods for interacting with it.\n\nNext step would be to create an interface for users to input their name & age. This could be a web form, command line interface, mobile app, etc. dep"}
{"instruction": "Develop a program that can identify the type of animal based upon its sound.", "raw_instances": "Example: The sound of \"meow\" is a cat.\nThe sound \"woof\" belongs to which animal?\nInput:\nOutput:\n\n"}
{"instruction": "If you were to write a function that takes an integer and returns the square of that integer, what would you do to make it more efficient?", "raw_instances": "Input:\n```\ndef square(n):\n  return n * n\n```\n\nOutput:\n\ndef efficient_square(n): \n  result = n **  ²\n  # This function is more optimized as it uses the exponentiation operator to calculate the result. \n\n"}
{"instruction": "Use the function to find the common character between \"hello\" and \"world\".", "raw_instances": "Input:\nfunction findCommonChar(str1,str2){\n  let commonChar = \"\";\n  for (let i =0; i<str1.length; ++i){\n    if (str2.includes(str2[i])){\n      common = str1[i];\n    }\n  }\n}\nOutput:\n\n"}
{"instruction": "Calculate the sum of the first 100 prime numbers and the last 20 odd numbers in a given list.", "raw_instances": "List: \n[13,15,-1,-3,-5]\n[23]\n[-16]\nSum of first: (2+3+5+7+...+97) + (3-1-3)\nSum: \n\nSum for last: (-1+(-3)+(-5)+...-91) - (-2-4-6-8-...1)\nOutput:\n\nSum = (Sum from first) – (sum from last)\n\n"}
{"instruction": "Explain the purpose of a for loop in python.", "raw_instances": ""}
{"instruction": "Explain how to use a specific software program.", "raw_instances": ""}
{"instruction": "The task requires you to create a web page that displays a table with 3 columns and a total of 6 rows.", "raw_instances": "Column   |  Row  |\n--------|-------|\nName    | Value |\nAge     | Score |\nHeight  |\n\n"}
{"instruction": "Find a way that i can use the information provided in the table to solve a problem.", "raw_instances": "Table: \n| Name | Age | G"}
{"instruction": "Think of a new way of doing something that will make it more efficient.", "raw_instances": "Example: Instead of using a paper map, use a GPS device.\n"}
{"instruction": "Create a table comparing the pros and cons of different types of data storage.", "raw_instances": "| Type of Data Storage | Pros | Cons |\n| --- | ---  |  --- |\nInput:\n- Hard Disk Drive (HDD): \n  - Pros: \n    - Large storage capacity\n  <br>- Cons:  \n    <ul>\n      <li>Slow read/write speeds</li>\n    </ul> \n- Solid State Drive:\n  Pros:\n     - Faster read and write speeds\n- Cloud Storage:\n   Pros\n   - Accessible from anywhere\n     - Cons:\n     <ol>\n       <l>1) Dependence on internet connection</l>\n     </ol>\n\n"}
{"instruction": "Make a plan for a day that you will spend doing something you have always wanted to do, but have never had the chance to.", "raw_instances": "1) Research the activity and make sure it is feasible and safe.\n2) Make sure you are free for that day.\n3) Plan the logistics of getting to the location and back.\n4) Set a budget for any expenses that may arise.\n5) Prepare any necessary equipment or supplies.\n6) Enjoy the day and take lots of pictures!\n"}
{"instruction": "Use the function to create a dictionary of all the strings in your list, and then print out each key and value.", "raw_instances": "Function: def create_dict(lst):\nOutput:\n\nlst = ['apple', 'banana',  'cherry', [4],   ['orange', ['grape', {'pear': 'pineapple'}]]]\ndict = create_dictionary(lst)\nprint(dict)\n\nOutput (dictionary):\n{'apple': None, 'banan': a, None: None}\n\n"}
{"instruction": "Explain how to properly dispose of hazardous waste.", "raw_instances": "1) Identify the type and amount of waste: Determine the specific type(s) of materials that need disposal, such as batteries, electronics, chemicals, or medical waste. Also, determine the quantity of each type.\n2) Find a disposal facility: Look for local facilities that accept hazardous materials, either through a waste management company or a government agency. Check for any fees or regulations that may apply.\n3) Prepare the waste for disposal: Dep"}
{"instruction": "How to solve the problem of the missing keys.", "raw_instances": "1) Check if the keys are in a different location.\n2) If they are not, check if they were misplaced.\n3) Ask a family member or fri"}
{"instruction": "What do you call a cat that likes to eat cheese?", "raw_instances": "Input:\nOutput:\n\nA cat who likes cheese is called a \"cheesecake cat.\"\n\n"}
{"instruction": "Create a function that takes a number as an input.", "raw_instances": ""}
{"instruction": "Using the data from the table, write an sql query to find the name of all people who are married and have children.", "raw_instances": "Table: People\nColumns: Name, Age, Gender, Marital_Status, Children\nInput:\nName | Age | Gender | Maritial_Status | Children \nJohn |  ¼ | Male   | Married         | Yes\nJane |   ½ | Female | Single          | No\nBob  |    ¾ | male   |\nOutput:\n\nSELECT Name\nFROM People \nWHERE Marrial_Status = 'Married' AND Children = \"Yes\"\n\n"}
{"instruction": "Create a dictionary with the keys \"name\", \"age\", and \"occupation\" and assign values \"john\", 25, \"engineer\".", "raw_instances": "Output:\n\n{\n  \"Name\": \"John\",\n  'Age':  二十五,\n  ‘Occupation': 'Engineer'\n}\n\n"}
{"instruction": "Using the provided data, create an array of objects with the properties name, age, gender, height, weight, salary, address, phone number and email address.", "raw_instances": "Data: John,25,M,165cm,60kg,750$,\"1 Main Street, Anytown, USA\",1-808-55-1315,john@example.com\nInput:\nJohn,age,g"}
{"instruction": "Identify the most important features of a product based off of customer feedback.", "raw_instances": "Product: A new smartphone\nInput:\n- \"The camera is amazing!\"\n- “The battery life is great!”\n- ”The screen is too small.”\n-  “I love the sleek design.”\nOutput:\n\nThe most significant features based on customer reviews are the camera and the battery. These are two of most crucial features for most smartphone users. \n\n"}
{"instruction": "Create a list of five famous people who have died in the last year.", "raw_instances": ""}
{"instruction": "Describe a process that you have used to solve a problem.", "raw_instances": "Problem: You are given a list of numbers and asked to find out if there are any duplicates in it.\nSolution: I used a set to store the unique elements of this list. Then, for each element in this set, if it is present in our original list, we know that there is a duplicate in that list.\n\nOutput:\n\n"}
{"instruction": "Create a list of all possible combinations of two words, where the two given word are the same.", "raw_instances": "Example: \"cat\", \"dog\"\nOutput:\n\n['cat', 'dog']\n['ca',  'do']\n[cat, 'g']\n'catd'\n'dog'\n'god'\n"}
{"instruction": "What is the sum of all prime numbers in this list?", "raw_instances": "Input:\n[23,15,-16,-2,-7,-3,-4,-5]\nAnswer: The sum is -1.\n\nExplanation: \n-2 is a prime number, therefore it is included in our sum.\n-3 is also a Prime number and is therefore included.\nThe sum becomes -2-7=-9.\nNow, we have to add -9 with -5 which is not a positive number. So, our final sum will be -3-9=-1.\n"}
{"instruction": "The function should also handle cases where the list is empty.", "raw_instances": "def find_max(lst):\n  if len(lst) ==  \t0:\n    print(\"List is Empty\")\n  else:\n   max_num = lst[0]\n   for num in lst:\n     if num > max:\n       max = num\n   return max\n\nOutput:\n\n"}
{"instruction": "If the given number is a prime number and the number of divisors is even, output \"prime and even\", otherwise output a string that describes the nature of the prime and even number.", "raw_instances": "Number:13\nNumber of Divisors:4\nInput:\n1\n2\n3\n\nOutput:\n\nprime\neven\nodd\n\n"}
{"instruction": "Write a function that will take in two strings and return the longest string that is a substring of the other string.", "raw_instances": ""}
{"instruction": "Use the function to count the total number words and characters in a paragraph.", "raw_instances": "def count_words_and_characters(paragraph):\n  words = paragraph.split()\n  characters = len(paraphrase)\n  return words, characters\n\nparagraph = \"This is a sample paragraph to test the count function. It has   some  special characters like  $, @, #, %, & and so on. This is just a test.\"\nwords, charcters = count_word_and_character(paragrpah)\nprint(\"Number of words:\", words)\nPrint(\"Total characters:\", characters)\n\n"}
{"instruction": "If i have a 1200 word essay, how many hours would it take me to write it?", "raw_instances": ""}
{"instruction": "The person has been in this country for 5 years.", "raw_instances": "The person is a citizen of another country.\nWhat is their status in terms of immigration?\nAnswer: They may be a legal permanent resident or a conditional resident, dep"}
{"instruction": "What is the sum of all the numbers from the 2nd to 6th digit in a given string?", "raw_instances": ""}
{"instruction": "Determine if this is a valid email address.", "raw_instances": "Email: john.doe@example.com\nInput:\nOutput:\n\nYes, this email is valid.\n\nExplanation: The email has a username (john.d), followed by an @ symbol, followed\n\n"}
{"instruction": "Write a python program to find the sum of first 500 prime number.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef find_sum_of_primes(n): \n  sum_of_prime =0 \n\tfor i  in   xrange(n+ \t\t\t\t\t\t\t\t\t\t\t- \t\t\t\t\t\t\t\t\t\t2):\n\t\tif is_prime(i):\n\t\t\tsum_of_p  rime +=i\n\treturn sum  of_prime\n\nprint find_s  um_of  primes(5 \t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\n"}
{"instruction": "Using the provided code, print out the number of elements that are greater than 3 in a_list.", "raw_instances": "a_list = [2.1513,16.2345,-1,-2,-3,-4,-5]\ndef count_greater_than_three(a_list):\n  count = len([x for x in list if x >  )))\n  return count\nprint(count_greater_three)\n"}
{"instruction": "Generate a random number between 1 and 50, but ensure that the number is not divisible by 4.", "raw_instances": ""}
{"instruction": "Explain the difference between a binary search tree and an avl tree.", "raw_instances": ""}
{"instruction": "Implement a sorting algorithm in python that sorts a list of strings in alphabetical order.", "raw_instances": "def sort_alphabetically(lst):\n  return sorted(lst)\n\n"}
{"instruction": "Create a list of 20 words related to dogs.", "raw_instances": "1) Bark\n2) Paws\n3) Tail\n4) Whiskers\n5) Collar\n6) Leash\n7) Puppy\n8 ) Canine\n9) Fido\n1  ）Biscuit\n  )Bone\n   )Kong\n"}
{"instruction": "Create a program that can generate a list of all possible combinations of a given set of numbers.", "raw_instances": "Example: Input: {1   2     3}\nOutput:\n\ndef combinations(nums):\n  result = []\n  for num in nums:\n    result.append([num])\n    if len(nums) >  len(result[-1]):\n      for sub in combinations(list(set(nums)-set(result))): \n        result[-2].append(sub[-len(result[0]):])\n  return result\n\nprint(combinations([1 , \t2 ,\t3]))\n\n"}
{"instruction": "The average of the numbers in a set is 12, and the median is also 5, but the mode is not 3, 7, or 9, which are the other two possible", "raw_instances": "values. What is it?\nInput:\nOutput:\n\nThe mode of this set of numbers is \"15\".\n\n"}
{"instruction": "Imagine a world where you are the only person left alive.", "raw_instances": ""}
{"instruction": "Create a program that will take a number as an input, and will return the square of the input number.", "raw_instances": "Example: If input is   5 , output should be  “25”\nOutput:\n\ndef square(n):\n  return n**2\n\nprint(square(5))\n\n"}
{"instruction": "Determine the sentiment of a text by analyzing the words used in that text.", "raw_instances": "Text: I am so happy to have found this job.\nSentiment: Positive\n\n"}
{"instruction": "Come up an idiosyncratic phrase that describes the feeling of being overwhelmed by a large amount of information.", "raw_instances": ""}
{"instruction": "Output the first 15 characters of each string in an array.", "raw_instances": "Array: [\"Hello\", \"World\", \"!\"]\nOutput:\n\n['H', 'W', '!']\n\n"}
{"instruction": "Find the most popular word in this sentence and its frequency.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: the (2 times)\n\n"}
{"instruction": "Find the average of numbers from a list of integers.", "raw_instances": ""}
{"instruction": "Can you explain the process of photosynthesis in plants?", "raw_instances": "Input:\nPhotosynthesis is a process used by plants and other organisms to convert light energy into chemical energy that can later be released to fuel the organisms' activities. This process involves the absorption of light by chlorophyll, which is then used to split water molecules into oxygen and hydrogen ions. Oxygen is released into their environment, while the hydrogen is used in a series of chemical reactions to produce glucose, an organic molecule that serves as a source of energy and building blocks for growth. \n\n"}
{"instruction": "Create a new email with the same content as the original email, but with an additional sentence that is not related.", "raw_instances": "Original email: \nHi  Jane,\nThank for for s"}
{"instruction": "Make a funny meme.", "raw_instances": "Meme: A picture of an angry cat with the text \"I'm not mad, just disappointed.\"\n\n"}
{"instruction": "Create a timeline for a project.", "raw_instances": "Project: Building a new house\nInput:\n- Design phase: June  - August\n- Foundation: August - October\n  * Excavation: September\n - Framing: October - December\n   * Roofing and siding: November\n     * Windows and doors: December - January\n       * Plumbing and electrical: January - February\n         * Insulation and drywall: February - March\n           * Painting and flooring: March - April\n             * Final touches: April - May\n               * Move-in: May - June\n"}
{"instruction": "How to make a website that displays a random quote from a database.", "raw_instances": ""}
{"instruction": "Use the following code to create an array of numbers: [1, 2, \"three\", 4, true, false, none, [], 6, (123,456), 0", "raw_instances": ""}
{"instruction": "Make up a word that is not in english and write a sentence using it.", "raw_instances": "Word: \"Zorblatt\"\nSentence: The Zorblaft was a rare creature that could only be found in a hidden cave in Iceland.\n\nOutput:\n\n"}
{"instruction": "The given list contains 15 elements.", "raw_instances": "1) Remove all elements that are divisible by   and print the remaining elements in ascending order.\n2) Find the median of all remaining numbers and output the result.\n3) Sort all numbers in descending order and return the sorted list.\n\nInput:\n[13,16,-1,-2,-3,-4,-5,-6]\n\nOutput:\n\n1)\n[-2]\n2)\n-3\n3)\n[  -6  ,  ...  ,-2  ]\n\n"}
{"instruction": "Find the most frequent word from this list: [apple, banana, orange, peach, pineapple, watermelon, strawberry, kiwi, mango, grapefruit, lemon, lime, avocado, pear, cherry, cantalou", "raw_instances": "pe, honeydew, papaya, fig, blueberry, raspberry, blackberry]\nInput:\nOutput:\n\n"}
{"instruction": "Implement a program that can calculate the factorial of a given integer.", "raw_instances": "def factorial(n):\n  if n ==   0:\n    print(1)\n  else:\n   print(n * factorial (n-1))\n\n"}
{"instruction": "Create a table with the values of x and y for the equation x^2 + y^3 = 10.", "raw_instances": ""}
{"instruction": "Describe the process of creating a new user account on a social media platform.", "raw_instances": "1) Go to the social platform's website.\n2) Click on the \"Sign Up\" or \"Create Account\" button.\n3) Fill out all required fields, such as name, email address, password, etc.\n4) Choose a username and password that are unique and secure.\n5) Verify your email by clicking on any link sent to your inbox.\n6) Once your account is created, log in and start using the platform.\n\nOutput:\n\n"}
{"instruction": "Describe the concept of recursion in programming and provide an example of its use.", "raw_instances": ""}
{"instruction": "Write an algorithm to", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "The number of people who have died in this country is 1 million.", "raw_instances": "The number is too high. What can we do to reduce the number?\nThe government should invest more in healthcare and education. It should also reduce taxes on companies that invest in research and development of new medicines and treatments. Additionally, we should encourage people to adopt a healthier lifestyle by promoting regular exercise and healthy eating habits. Finally, mental health should be given more attention, as many people die from suicide and other mental illnesses.\n\nOutput:\n\n"}
{"instruction": "If you were given the task of creating a new word, what would it be and why?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is the meaning of \"the first day of a week\"?", "raw_instances": "Input:\nOutput:\n\nThe first week of any year is a period of seven days, starting on a Monday and ending on Sunday. This is because the week is named after the seven-day period in which the sun was considered to move through the zodiac, which was divided into   13  periods of time, each of them being a day. \n\n"}
{"instruction": "The function should return the maximum value of the list.", "raw_instances": "def max_value(lst):\n  max_val = lst[0]\n  for num in lst:\n    if num > max:\n      max = num\n  return max\n\nInput:\nlst = [23,15,-16,-22,-33,-45]\nExpected output: -1\n"}
{"instruction": "Using the code from task 9, write another function to return a dictionary of all the words and their counts in a text.", "raw_instances": "def word_count(text):\n  words = text.split()\n  counts = {}\n  for word in words:\n    if word not in counts:\n      counts[word] = word.count(word)\n  return counts\n\nOutput:\n\n"}
{"instruction": "Create a table with the data provided and write a brief description of each column.", "raw_instances": "Data: \nName, Age, G"}
{"instruction": "Write a program that will take a string as an input, split it into words, count the frequency of each word, then output the words and their frequencies in a dictionary.", "raw_instances": "Example Input: \"This is a test string to test the program\"\nExample Output: {'This':   1,\n 'is':      2,\n \"a\":        1\n 'test':       1}\n"}
{"instruction": "Can you suggest a way for me to improve the quality of my writing?", "raw_instances": "Input:\nI am not sure if I am doing a good job in writing. Can someone help me improve my skills?\n"}
{"instruction": "How would a teacher explain to a student that he/she is not good at math?", "raw_instances": ""}
{"instruction": "How would you describe the following sentence: \"the cat is sitting on top of a tree.", "raw_instances": "The cat, which is a feline, is currently sitting atop a tall tree. It is perched on a branch, looking down at the ground below. Its fur is ruffled, indicating that it is feeling a bit nervous or uncertain. Despite this, its posture is relaxed, suggesting that the cat has been sitting there for some time. Overall, this sentence paints a vivid picture of an agile felines in a precarious position.\n\nOutput:\n\n"}
{"instruction": "Define the concept of time complexity in computer science.", "raw_instances": ""}
{"instruction": "If you have a string, how would you convert the string to an integer?", "raw_instances": ""}
{"instruction": "Find a way to make a 1200 piece puzzle 2x2.", "raw_instances": "1) Cut the puzzle into ½ inch squares.\n2) Arrange the squares into two ¼ inch by ¾ inch strips.\n3) Stack the two strips on top of each other to create a puzzle with the same number pieces but twice the size.\n\nOutput:\n\n"}
{"instruction": "How can you use the `grep` command to search for lines containing the word \"apple\" in a directory?", "raw_instances": ""}
{"instruction": "Given a string, find the length of the string and the number of vowels in the given string.", "raw_instances": "Example: \"Hello World\"\nOutput:\n\nLength: \nVowels: \n\n"}
{"instruction": "Use the following code to create an object of type \"person\" and add a method called \"greet\" that prints a greeting message.", "raw_instances": "class Person:\n    def __init__(self, name, age):\n       self.name = name\n       # Add code here to add the greet method\n"}
{"instruction": "Create a new sentence using the same structure as the given one.", "raw_instances": "The cat jumped over the fence.\n"}
{"instruction": "Using the code provided, create an object with the name \"person\" and initialize it with an empty dictionary.", "raw_instances": "Code:\nperson = {}\nOutput:\n\nperson =\n\n"}
{"instruction": "How to write a good essay?", "raw_instances": "Input:\n\n"}
{"instruction": "What is the most efficient way to find a substring in a string?", "raw_instances": "Input:\nString: \"Hello, world!\"\nSubstring: world\n"}
{"instruction": "How can you optimize the code for better performance?", "raw_instances": "Input:\nfor i, row in enumerate(df):\n  for j, col in zip(range(len(row)), row):\n     if col ==  'a':\n        df.loc[i, j] = 'b'\nOutput:\n\nYou can optimize this code by using the numpy.where function, which is faster than the if-else statement. Here's the optimized code:\n\nimport numpy as np\n\nfor row_index, rows in df.iterrows():\n    df.at[row_index,:]=np.where(rows=='a', 'c', rows)\n\n"}
{"instruction": "How can i use python to find the average of a set of numbers?", "raw_instances": ""}
{"instruction": "How can i use the java `math` class to calculate the square root of a number?", "raw_instances": ""}
{"instruction": "Create a list of 20 words and write the first 300 characters of each word.", "raw_instances": "1) Abate\n2) Acquaint\n3) Adhere\n4) Affirm\n5) Ail\n6) Alleviate\n7) Ambrosia\n8 ) Amble\n9) Anathema\n1  ） Anecdote\n  ) Anomaly\n   ) Antagonist\n     ) Apocrypha\n      ) Arrogance\n       ) Asc"}
{"instruction": "Create a new list with 20 adverbs.", "raw_instances": ""}
{"instruction": "Can you give me a list of healthy snacks that are easy to prepare?", "raw_instances": "Input:\nOutput:\n\n1) Apple slices with peanut butter\n2) Greek yogurt with berries\n3) Carrots and hummus\n4) Trail mix with nuts and dried fruit\n5) Hard-boiled eggs\n6) Edamame\n7) Cottage cheese with fruit or vegetables\n8 ) Air-popped popcorn\n9) Sliced cucumber with tzatziki sauce\n1  任务：将以下句子翻译成法语。\n输入：我喜欢在周末和家人一起看电影。\n输出：J'aime regarder des films avec ma famille le week-"}
{"instruction": "The task involves creating a program that takes a string as an input, and then prints out the number of vowels in that string.", "raw_instances": "Example Input: \"Hello World\"\nExample Output: There are   vowels  in \"hello world\".\n\n"}
{"instruction": "Create a function to find all the words in a string that are not in another string.", "raw_instances": "Example: \nstring1 = \"The quick brown fox jumps over the lazy dog\"\nstring2 = “quick, brown, dog”\nOutput should be: [\"The\", \"fox\", “jumps”, \"over\", 'the', \"lazy\"]\n\n"}
{"instruction": "Create a table with 3 columns and 5 rows, where each row represents a different day of the week.", "raw_instances": "| Day | Temperature | Weather |\n| --- | ---        | ------- |\nOutput:\n\n| Monday |   75 F | Sunny |\n|\n| Tuesday |      80  | Cloudy |\n|\n\n"}
{"instruction": "Generate a new sentence by replacing the words in a provided sentence with their synonyms.", "raw_instances": "Sentence: The cat is sleeping on the couch.\nSynonyms: cat -> feline, sleeping -> resting, couch -> sofa\nSentence with synonyms: Feline is resting on sofa.\n\nOutput:\n\n"}
{"instruction": "Create a new list of words that are similar to the words in this list.", "raw_instances": ""}
{"instruction": "Determine if a given sentence contains any errors in grammar, spelling, punctuation, and capitalization.", "raw_instances": "Sentence: I have a dog, his name is Max.\nAnswer: No errors.\n\nOutput:\n\n"}
{"instruction": "Create a list of all possible combinations of words that can be formed from the given set of letters.", "raw_instances": "Letters: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n"}
{"instruction": "Generate a random number between -1 and -5, and then subtract it from 20.", "raw_instances": ""}
{"instruction": "How to solve this linear programming problem?", "raw_instances": ""}
{"instruction": "Imagine you have an array of integers and you want to sort it in ascending order.", "raw_instances": "Example: Input: {3,15,-2,-13,-5}\nOutput:\n\ndef sort_ascending(arr):\n  for index in arr:\n    min_index = index\n  min_value = arr[min_index]\n  arr.remove(min_value)\n  return arr\n\nOutput = { -2 , -5 ,   -1  ,   \t3 ,     1   }\n\n"}
{"instruction": "How would you use a for loop in python to print out all the numbers between 1 and 20?", "raw_instances": "Input:\nOutput:\n\nfor i  in [x for x in xrange(1 ,   2  )]:\n    print i\n\nOutput will be: \n1\n2\n3\n4\n5\n6\n7\n8\n9\n1  o\n"}
{"instruction": "How to make a cake with 6 ingredients.", "raw_instances": "Ingredients:\n-  ½ cup (50g) all-purpose flour\n-   ¼ cup unsalted butter, at room temperature\n-\n-    ⅓ cup granulated sugar\n-\n\n-     ¾ teaspoon baking powder\n"}
{"instruction": "If you were to go on a trip to europe, where would be your first stop?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Determine if a website is safe or unsafe.", "raw_instances": "Website: www.example.com\nInput:\n- The website has a green padlock icon in its address bar.\n- It has an SSL certificate.\nAnswer: Safe\n\n"}
{"instruction": "If you have 200 dollars, how much money do i have in cents?", "raw_instances": "Input:\n2 dollars = $2.05\n1 dollar = $.03\n2 cents = .06\n3 cents= .15 \n4 cents=.25 \n\nOutput:\n\n2 *   2 = 4\n4 * .2  =1\n5 * .1 =0\n\n4 +1 +0=5.2\n\nSo you would have $52 in cent.\n\n"}
{"instruction": "Create a table that contains the name, age, and gender of all the people in a list.", "raw_instances": "List: John, Jane, Bob, Alice, Tom, Sue\nTable:\n| Name | Age | Gender |\n|------|-----|--------|\n| John |  未知 |   男性 |\n | Jane |    ？ | 女性 |\n  | Bob |     ！ |      男 |\n   | Alice |       、 |        妇女 |\n    | Tom |         ； |          男人 |\n     | Sue |           ｜ |            姑娘 |\n"}
{"instruction": "Create a table of the top 10 countries in terms of population, sorted by population in descending order.", "raw_instances": "| Country | Population |\n|---------|------------|\n| China   |  ******    |\n | India   |\n  | United  |\n   States|\n    | Indonesia|\n     | Pakistan |\n      | Brazil   |\n\n"}
{"instruction": "In a given list, find the largest number.", "raw_instances": "Example: \nList: {1503,1605,-1345}\nOutput should be: -1\nExplanation: The largest value in this list is -233.\n\nOutput:\n\n"}
{"instruction": "Find the number of words that contain the word \"apple\" in the sentence \"i ate an apple\".", "raw_instances": "Output:\n\nThe sentence contains   words.\n\nOutput should be: There are  two words in this sentence that contains the letter 'a' and the letters 'p' followed by 'le'.\n\n"}
{"instruction": "List the five most important things to do before going to bed.", "raw_instances": ""}
{"instruction": "Create a new list with the following elements: \"the sky is blue\", \"i like to eat pizza\", and \"my favorite color is green\".", "raw_instances": "Output:\n\ndef create_list():\n    list = [\"the\", 'sky', 'is', \"blue\", \",\", \"I\", \"'like\",  \"to\", '\"eat', \"'pizza'\", \",\", 'and', \"'\", \"My\", \"'\", 'favorite', ',', 'color',  '(', 'green', ')', '.']\n    new_list = []\n    i = -1\n  while i < len(list):\n      if list[i] == ' ':\n          new_element = ''.join(list[i+2:i+5])\n          i +=   len(new_element)\n          if new_elements not in newlist:\n              newList.app"}
{"instruction": "Use the given code snippet to create a more efficient version of the code.", "raw_instances": "def find_max(arr):\n  max = arr[0]\n  for num in arr:\n    if num > max:\n      max=num\n  return max\n\nOutput:\n\ndef max(arr): \n  # Initialize max with the  first element of array\n max_so_far = max_"}
{"instruction": "How would you describe the character of a person who is always right?", "raw_instances": "Input:\nOutput:\n\nThe character who always seems to have the right answer is often seen as confident, knowledgeable, authoritative, persuasive, or even arrogant. This person may have a strong sense of self and be very sure of their own opinions and beliefs. Their ability to always be right can sometimes come across as condesc"}
{"instruction": "Using the code provided, write a python program to find the longest word in an array of strings.", "raw_instances": ""}
{"instruction": "If you were to travel to a new country, what would be your first thing to do?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How can i use the list comprehension to create a list of all even integers from 1 to 20?", "raw_instances": "Input:\nOutput:\n\neven_list = [x for x in list(range(1 ,   2 )), if x % ２ == ０]\n\n"}
{"instruction": "If a user enters a negative number for the input, write a python program to handle it.", "raw_instances": "def handle_negative_input():\n    while True:\n        try:\n            num = int(input(\"Enter a positive number: \"))\n            if num <  )):\n                print(\"Please enter a valid number.\")\n            else:\n                break\n        except ValueError:\n             print (\"Please input a whole number.\")\n\n"}
{"instruction": "The output should be a single word.", "raw_instances": ""}
{"instruction": "Explain the process of how you arrived at the answer.", "raw_instances": ""}
{"instruction": "What is the difference between a person who is a good listener and a listener?", "raw_instances": ""}
{"instruction": "Use the information given in a paragraph to answer the question \"what is the main idea of the passage?", "raw_instances": ""}
{"instruction": "Create a new paragraph that contains only the first 10 words of a given paragraph.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog. This sentence is a classic example of an English pangram, which contains every letter of English alphabet at least once.\nNew Paragraph: \"The quick fox brown jumps lazy over dog.\"\n\n"}
{"instruction": "Create a web page that displays the following text: \"hello, my name is john doe.", "raw_instances": ""}
{"instruction": "Using the given data, create a new data structure that stores the information of a person.", "raw_instances": "Data: Name: John, Age:25\nData Structure: Dictionary\nInput:\nName: \"John\"\nAge: '26'\nOutput:\n\n{\n  \"Name\": \"john\",\n  Age:\"27\"\n}\n\n"}
{"instruction": "Use the word “i” in the sentence “she is a very good student.", "raw_instances": "She is an i student.\n\nOutput:\n\n"}
{"instruction": "Solve the equation: x^2 + 2x +1 = 0.", "raw_instances": "Solution: The equation x² +2*x +3 =0 can be solved by factoring. We can factor the left side of this equation as (x+3)(x-1) which equals   to zero. So, we have two solutions: \nx = -3 and x =1.\n\nOutput:\n\nx^+2+x+ = \n0\n\nx²+ +x=0 \n(x+)(+x)=0 \n\nx=-3 or x=1\n\nSo the solutions are x=-1 and -1.\n"}
{"instruction": "Given a sentence, reverse the order of the words and output the new sentence.", "raw_instances": "Sentence: I love eating pizza\nInput:\nOutput:\n\n"}
{"instruction": "If a company has 50 employees, how many employees are there in the company?", "raw_instances": ""}
{"instruction": "If i have a million dollars, what would i do with it?", "raw_instances": ""}
{"instruction": "What are some tips for staying focused during long work hours?", "raw_instances": ""}
{"instruction": "List 50 words with 4 letters.", "raw_instances": ""}
{"instruction": "Use the data provided to create an algorithm that predicts the stock prices of companies.", "raw_instances": ""}
{"instruction": "Find the number of ways to make a given number by adding two different prime 11.", "raw_instances": "Number: N = [23]\nAnswer: There are   ways.\n\nOutput:\n\n"}
{"instruction": "Write a function that takes two numbers and returns the sum of the squares of their digits.", "raw_instances": "Example: \nIf the input is  umber = \"134\", the function should return  \"25\". \nBecause  (  + )  =   and   ( + + = ) = \nOutput:\n\ndef digit_sum(n):\n  n = str(n)\n  sum_of_squares = sum(int(digit)**2 for digit in n)\n  \n  return str(sum_of_square)\n\n"}
{"instruction": "Write a short paragraph about the following topic: \"the benefits of using ai in healthcare\" 11.", "raw_instances": ""}
{"instruction": "The task requires you not only to write a function that calculates the area of an object, but also to implement it using a different programming language.", "raw_instances": ""}
{"instruction": "Use the function from task 8 to create a list of all the continents and their respective populations.", "raw_instances": ""}
{"instruction": "Provide a detailed explanation of a complex concept.", "raw_instances": ""}
{"instruction": "Use the fact that the sum of two numbers is equal to the product of their digits.", "raw_instances": "Example: The sum  of digits of number   is  .\nInput:\nOutput:\n\n"}
{"instruction": "The number of days in february is 28.", "raw_instances": ""}
{"instruction": "Create a new list with the following elements: \"the quick brown fox jumps over the lazy dog\", \"i am the walrus\", and \"can you believe it's already the end of the year?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "You are a software engineer working on a project.", "raw_instances": "You are given a list of tasks to complete.\nYour task is to prioritize the tasks in order of importance.\nThe tasks are numbered from one to five.\nWrite a function that takes in a task list and returns the list with the priorities in ascending order.\nFor example, if the input is [3,1], the function should return [5].\nIf the inputs are [2] and [4], then the functions should both return the same output [6].\n"}
{"instruction": "What is the best way to make an ice cube?", "raw_instances": ""}
{"instruction": "Create a class called 'car' with attributes 'make', 'model', and 'year'.", "raw_instances": ""}
{"instruction": "Use the random module to generate a string of 20 characters.", "raw_instances": "import random\nimport string\n\ndef generate_string(length):\n  letters = string.ascii_letters + string.digits\n  return ''.join(random.choice(letters) for _ in xrange(length))\n\nprint generate_strings(25)\n\n"}
{"instruction": "Create a function that checks if a word contains any vowel.", "raw_instances": "Function: def contains_vowel(word):\nOutput:\n\ndef contains\\_vowel(self, word):\nvowels = ['a', 'e', ‘i’, 'o', \"u\"]\nfor letter in word:\nif letter.lower() in vowels:\nreturn True\nreturn False\n\nOutput is: True\n\n"}
{"instruction": "Generate a random sentence based upon the following rules: - the sentence must contain at least one word that is a palindrome.", "raw_instances": ""}
{"instruction": "The sun is shining and it is a beautiful day.", "raw_instances": "What is this sentence describing?\nThis sentence is describing a sunny day.\n\nOutput:\n\n"}
{"instruction": "Explain the concept of \"double negatives\" in english grammar.", "raw_instances": "Double negatives are two or more words that, when taken together, have the opposite meaning of what is intended. For example, \"I don't have no money\" is a double negative, as it means that the speaker has money. Double negatives can be confusing and should be avoided in formal writing and speech.\n\nOutput:\n\n"}
{"instruction": "Describe the process of a typical day in the life of someone who works in an office.", "raw_instances": "Answer: A typical workday for someone in a traditional office environment might involve waking up early, getting ready, commuting to the office, arriving at work, checking emails, attending meetings, completing tasks, taking breaks, having lunch, working on projects, finishing up work for that day, leaving work and commuting home, spending time with family and friends, relaxing, going to bed.\n\nOutput:\n\n"}
{"instruction": "Describe the process of data collection in a research paper.", "raw_instances": "Data collection is a crucial step in any research project. It involves gathering information from various sources to support the research question or hypothesis. There are several methods of collecting data, including surveys, interviews, observations, experiments, secondary data analysis, etc. Each method has its own advantages and disadvantages, dep"}
{"instruction": "Describe a famous historical event.", "raw_instances": "The Battle of Waterloo was a significant event in European history. It took place on June  ous  in Belgium, during the Napoleonic Wars. Napoleon Bonaparte, Emperor of France, led his army against the combined forces of Britain and Prussia. Despite being outnumbered, Napoleon's army fought bravely, however, they were ultimately defeated by a combination of British and German troops. This battle marked the end of Napoleon’s reign and the beginning of his exile to the island of Saint Helena. \n\n"}
{"instruction": "List the 5 best books of 2021.", "raw_instances": "1) \"The Four Winds\" by Kristin Hannah\n2) “The Sanatorium” by Sarah Pearse\n3) The Push by Ashley Audrain\n4) A Promised Land by Barack Obama\n5) Project Hail Mary by Andy Weir\n\nOutput:\n\n"}
{"instruction": "Create a list of 15 words that are all made up of three letters.", "raw_instances": ""}
{"instruction": "Create a new array from the original array by removing all duplicates.", "raw_instances": "Original Array: ['a', 'b',  'c',   'a']\nOutput Array:\n['a','b','c']\n\n"}
{"instruction": "Find a way for someone to make a positive impact on the world.", "raw_instances": ""}
{"instruction": "Generate a report on how to improve the performance of this program.", "raw_instances": ""}
{"instruction": "Use the data provided to create a predictive model for the stock market.", "raw_instances": ""}
{"instruction": "Remove the first element from the newlist.", "raw_instances": ""}
{"instruction": "Find the number of days between two dates.", "raw_instances": ""}
{"instruction": "Create a program that generates a sequence of numbers from 1 to n and prints the sum of all even numbers in that sequence.", "raw_instances": "def even_sum(n):\n  sum_even = sum([i for  i  in xrange(1,n+  )))\n  return  even\n\n"}
{"instruction": "How can you use the google translate api to translate a sentence from english to spanish?", "raw_instances": "Input:\nimport googletrans\nfrom google.transliteration import transliterate\nimport json\ndef translate_sentence(sentence):\n  translator = google_translator()\n  translation = translator.translate(sentence, lang_src='en', lang_tgt='es')\n  return translation\n\nsentence = \"Hello, how are you?\"\ntranslation = translate(sentence)\nprint(translation)\n\nOutput:\n\nHola, ¿cómo estás?\n\n"}
{"instruction": "Use the program to solve all the tasks in this list.", "raw_instances": ""}
{"instruction": "Find the longest palindrome in a sentence given by the user.", "raw_instances": "Example Input: \"The quick brown fox jumps over the lazy dog.\"\nExample Output: brown\n\nOutput:\n\n"}
{"instruction": "Find the sum of all the numbers that are divisible by 3 in a given array.", "raw_instances": ""}
{"instruction": "Write a program that will take a user input of an email address and check if it is valid or invalid.", "raw_instances": "def is_valid_email(email):\n  if \"@\" in email and \".\" in str(email).split(\"@\")[1]:\n    if len(str(email)) >  romeo@example.com\n  else:\n    print(\"Invalid email\")\n"}
{"instruction": "Use the function from the previous task to print the vowels from \"hello world\" to \"goodbye world\".", "raw_instances": "Output:\n\ndef print_vowels(text):\n  vowels = ['a', 'e',  'i',   'o',    'u']\n  for char in text:\n    if char.lower() in vowels:\n      print(char)\n\nprint_vovels(\"hello\")\nprint(\"world\")\n# Output: e o o\n\nprint()\nprint(_)\nprint()\n\nprint('hello')\nprint('')\nprint('_')\n# "}
{"instruction": "The given function is \"add_two_numbers\" which takes two numbers as inputs and return their sum.", "raw_instances": "Write a test case for this function.\ndef add_two_number(a, b):\n  return a + b\n\nTest Case:\nInput:\na = -5\nb = +15 \nExpected Output: \n+   1  (a positive number)\n\n"}
{"instruction": "Generate an article about the benefits of", "raw_instances": "Input:\nExercise\n"}
{"instruction": "Using the given code snippet, explain what is happening and why.", "raw_instances": ""}
{"instruction": "Use the provided data to calculate the average age of all people.", "raw_instances": ""}
{"instruction": "Use the code below to create a table that shows the top 5 countries with highest population.", "raw_instances": "```\nimport pandas as pd\ndata = {'Country': ['China', 'India', \n                    'United States',  \n                    \"Indonesia\", \n                   'Pakistan'],\n        'Population': [  中国人口数, \n                        印度人口数,\n                        美国人口,\n                         婴儿潮一代人口,  \n                        巴基斯坦人口]}\ndf = pd.DataFrame(data)\ndf\n```\n\nOutput:\n\n| Country | Population |\n| --- | --- |\n|\n| 中国 | 中国人民数 |\n|\n\n"}
{"instruction": "Using the code provided, create an algorithm that will take a number as an input, calculate its square root, then round it to the nearest integer.", "raw_instances": "Code:\nimport math\ndef square_root(number):\n  return math.sqrt(number)\nOutput:\n\ndef round_square_root(num):\n   return round(square_root(int(num)))\n\n"}
{"instruction": "How can you create an object with two properties?", "raw_instances": "Input:\nOutput:\n\nYou can create a JavaScript object using the object literal syntax. For example, to create object \"person\" with properties \"name\" and \"age\", you would write:\nvar person = {\n  name: \"John\",\n  age:25\n}\n\n"}
{"instruction": "Why did the chicken cross the road?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Identify the synonym of given words.", "raw_instances": "Words: Happy, Sad, Angry\nSynonyms: Joyful, Melancholy, Furious\n\nOutput:\n\n"}
{"instruction": "The task is to write a paragraph about the importance of learning english.", "raw_instances": ""}
{"instruction": "Develop a system that will identify and classify the different types of data in a dataset.", "raw_instances": ""}
{"instruction": "How would you optimize the code to make it run faster?", "raw_instances": "Input:\nfor i, row in enumerate(df):\n  for j, col in zip(df.columns, df.iloc[i]):\n    if col == 'A':\n      df.at[i, j] = 'B'\nOutput:\n\nYou can optimize this code by using the apply() method instead of iterating through the rows and columns. This will make the loop faster and less memory-intensive. Here's the optimized code:\n\ndf['A'] = df['B']\n\n"}
{"instruction": "Find the number of vowels in \"hello world\".", "raw_instances": ""}
{"instruction": "How would the program be different if the list of names was in reverse alphabetical order?", "raw_instances": "Input:\nGeorge Washington\nConfucios\nMichael Jordan\nMichelangelo\n\nOutput:\n\ndef sort_names(names):\n  names.sort()\n  return names\n\nnames = [\"George\", \"Washington\", \n\"Confu\", 'cius', \"Michael\",  \n\"Jordan\",  \"Mich\",   'el', 'angelo']\nprint(sort_names(list(names)))\n\n"}
{"instruction": "Use the numpy library to create a 2d array of size 5x5 and fill it with random numbers between 0 and 1.", "raw_instances": "import numpy as np\n\nOutput:\n\narray([[0.,  ******,   *******,    *******\n        ********************,     ****************************\n        ***********,       ***********,\n        ****************,      ****************,\n         ******\n\n"}
{"instruction": "Can you name a famous person who was born in a different country than you?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Using the following list, create a dictionary with keys as the first letter of each word and values as a tuple of the last letter and the word.", "raw_instances": "List: ['apple', 'banana',  'cherry',   'date',    'elderberry',     'fig',      'grape',       'honeydew',        'ice',         'jackfruit',          'kiwi',           'lemon',            'mango',             'nectarine',              'orange',               'pineapple']\nOutput:\n\n{\n    \"a\": ('e', \"apple\"),\n    ...\n    # continue with the rest of words\n}\n\n"}
{"instruction": "Find the longest word in a given sentence 11) create an algorithm to find all the prime numbers between two given numbers.", "raw_instances": ""}
{"instruction": "Make a list of 10 things you hate about your job.", "raw_instances": "1) Long hours\n2) Lack of autonomy\n3) Boring tasks\n4) Toxic coworkers\n5) Low pay\n6) Unpredictable schedule\n7) Limited opportunities for growth\n8 ) Poor management\n9) High stress levels\n1  ound.\n\n1). Long Hours\n"}
{"instruction": "Generate a random password that meets the following criteria: at least 8 characters long, contains at most 2 uppercase letters, 1 digit, and 3 lowercase letters.", "raw_instances": "Example: \"aB1cD2eF3\"\nOutput:\n\na1b2c3d4e5f6\n\n"}
{"instruction": "Write a program that will take in any number and will output the sum of all the numbers in that range.", "raw_instances": "def range_sum(start, end):\n  total = start\n  for num in xrange(start+   1 , end+      ) :\n    total += num\nreturn total\n\nOutput:\n\n"}
{"instruction": "Given a string, find all the anagrams of that string.", "raw_instances": "Example: \"abc\", \"bac\", and \"cba\" are an anagram of \"abbc\".\nInput:\nabc\nbac\ncba\ndef\nabcde\nfgh\nabcdefgh\n"}
{"instruction": "Write a sentence that is 20 words long.", "raw_instances": "The quick brown fox jumped over the lazy dog, which was sleeping on the porch, while the sun was setting in a fiery orange hue, casting a warm glow over everything.\n\nOutput:\n\n"}
{"instruction": "Print the length of the list.", "raw_instances": "List: ['apple', 'banana',  'cherry', True]\nInput:\nOutput:\n\n4\n\n"}
{"instruction": "How would you modify the function below to return a random number between 1 and 5?", "raw_instances": "def random_number():\n    import random\n   return random.randint(15)\nOutput:\n\ndef rand_num():\n   import numpy as np\n  return np.random.randint(low=1 , high=6)\n\n"}
{"instruction": "The average of the first 30 natural numbers is 7.", "raw_instances": ""}
{"instruction": "Create a new list of words from given list and print the new words.", "raw_instances": "List: ['apple', 'banana',  'cherry', None, 'orange', False]\nNew list: words = [word for word in list if word is not None and word != False]\n\nOutput:\n\n['apple']\n['banana']\n[]\n['orange']\n\n"}
{"instruction": "Convert a decimal number to a binary number.", "raw_instances": "15\n1\n0\n\nOutput:\n\n"}
{"instruction": "Create a program that generates a new string by replacing each character in the original string with its corresponding ascii code.", "raw_instances": "Example: Input: \"Hello\" Output: \"[72][134][33][81][76]\"\n"}
{"instruction": "Create a table with 3 columns and 1 row, where the first column is \"name\" and the second column contains \"age\" (in years) and \"gender\" (\"male\" for male, \"female\"", "raw_instances": "for female) for each person.\nName | Age | Gender\nJohn |   25 | Male\nJane |      34 | Female\n"}
{"instruction": "Create a new variable called \"total\" and set it to 0.", "raw_instances": "def add_numbers(x, y):\n  total = x + y\n  return total\n\nOutput:\n\ndef total(x,y):\n return x+y\n\nend.\n\nOutput should be:\ntotal = def add(x: int, \n               y: float) -> float:\n    total:float = float(x) + float(y)\n    print(total)\n    \n    def main():\n        x = int(input(\"Enter first number: \"))\n        y = input(\"enter second number:\")\n        print(add(x=y, x=x))\n\n    main()\n\n"}
{"instruction": "Given a text, find the longest word in that text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nAnswer: jumps\n\nOutput:\n\n"}
{"instruction": "Create a function that returns the sum of all the elements in the given list, but only if all elements are positive integers.", "raw_instances": ""}
{"instruction": "In task #4, write a joke that involves a character named \"jill\" and a situation where she is in a hurry.", "raw_instances": "Joke: Jill was in such a rush to get to work that she accidentally locked her keys in her car. She was so frustrated that when she finally got to the office, she decided that it would be a good idea to take a nap. When she woke up, her boss was standing over her desk, looking very angry. \"Jill,\" he said, \"I've been waiting for you for hours. What were you thinking?\"\n\n"}
{"instruction": "What is the difference between a palindrome and a word that is a palindromic sequence?", "raw_instances": ""}
{"instruction": "How can you convert a string to an integer in python?", "raw_instances": "Input:\n\"15\"\nOutput:\n\nint(\"16\")\n\n"}
{"instruction": "Generate a list of 5 words that describe the feeling you get when you're happy.", "raw_instances": "1) Joyful\n2) Delighted\n3) Pleased\n4) Content\n5) Ecstatic\n\n"}
{"instruction": "Using the following sentence: \"i am happy today\", write a program that will output a new sentence with \"today\" replaced by \"tomorrow\".", "raw_instances": "Output:\n\ndef replace_day(sentence):\n  new_sentence = sentence.replace(\"today\", \" tomorrow\")\n  return new_sen\n\nprint(replace_day(\"I am very happy today\"))\n\n"}
{"instruction": "Create a list of all words in an english dictionary.", "raw_instances": ""}
{"instruction": "Create a list of 5 words that are related to the prompt, but not the words in it.", "raw_instances": ""}
{"instruction": "Create a class called \"employee\" with the attributes `name`, `age`, and `salary`.", "raw_instances": ""}
{"instruction": "Use the `employee` class to create an instance of an employee with name \"john\", age 30, and salary of 500.", "raw_instances": "class Employee:\n    def __init__(self, name, age, salary):\n      self.name = name\n      # self.age = age\n        self.salary = salary\n\nOutput:\n\nemployee = Employee(\"john\",\"31\",55)\n\n"}
{"instruction": "What is the average of these prime number values?", "raw_instances": "Input:\n23,257\n271\n13\n5\n373\n\nOutput:\n\nTo find out how to calculate the mean of prime numbers, we need the definition of mean. Mean is a measure of central t"}
{"instruction": "How do you create a dictionary?", "raw_instances": ""}
{"instruction": "Create a program that generates a random number between 1 and 50, but only if the number is divisible by 3.", "raw_instances": "If the generated number meets the criteria, print \"The number [number] is a multiple of three.\"\nIf not, do not print anything.\n"}
{"instruction": "The company is facing a crisis.", "raw_instances": ""}
{"instruction": "Generate a list of five tips for staying motivated while working from home.", "raw_instances": "1) Set a schedule and stick to it.\n2) Create a designated workspace.\n3) Take breaks and move around.\n4) Stay connected with colleagues and friends.\n5) Celebrate small accomplishments.\n\nOutput:\n\n"}
{"instruction": "Determine the number of unique words that can be formed using the letters in the word \"computer\".", "raw_instances": "Output:\n\nThere are  ⁶⁰⁴⁵⁹⁷⁸⁲ⁱ⁳⁺ⁿ⁯ unique  words  that  can  be  formed  using  the  letters  in \"Computer\".\n\n"}
{"instruction": "Use the following code to print the first 20 characters of a string: print(str[0:2]).", "raw_instances": ""}
{"instruction": "Can you write a program that generates a fibonacci sequence up to a certain number of terms?", "raw_instances": "Input:\nNumber of Terms: \nOutput:\n\ndef fibonacci(n):\n  a, b = [0], [2]\n  for _ in [None]*n-2:\n    a.app"}
{"instruction": "Create a table that lists the top 10 most popular programming languages.", "raw_instances": "| Language | Popularity Score |\n|----------|------------------|\n| Python   |  ①                |\n | Java     |   Ⅱ               |\n  | JavaScript |    三             |\n   |- Ruby    |     二             |\n\n"}
{"instruction": "What is a common use case for a dictionary in python?", "raw_instances": ""}
{"instruction": "The input to the program is an integer.", "raw_instances": "The output should be the number converted to binary.\nExample: Input:15\n        Output:0b1  ight  e  x  a  m  p  l  es  :\n        Input:-1\n         Output:-0x1\n\nOutput:\n\n"}
{"instruction": "Write a short story about an astronaut who has to survive in space for 12 months.", "raw_instances": ""}
{"instruction": "Generate a random number between 0 and 99, then print the number out 5 times.", "raw_instances": "def print_random_number():\n    import random\n   for _ in [None]*5:\n        print(random.randint(0 ,   9))\n\n"}
{"instruction": "Find the shortest word that contains all the letters in \"computer science\".", "raw_instances": "Output:\n\n"}
{"instruction": "Respond to an online forum thread about a controversial topic.", "raw_instances": ""}
{"instruction": "Create a table with 6 columns and 7 rows, where each row represents a different day of a week and each column represents an hour of that day.", "raw_instances": ""}
{"instruction": "Given a list of words, find the word that has the most vowels.", "raw_instances": "List: ['apple', 'banana',  'cherry',   'date',    'elderberry']\nOutput:\n\n'elderberries'\n\n"}
{"instruction": "How would a teacher describe a student who has a high iq?", "raw_instances": "Input:\nOutput:\n\nA high IQ student is one who demonstrates exceptional intellectual ability and has an above-average level of intelligence. These students tend to excel in various academic subjects, often displaying a deep understanding of complex concepts and an ability to quickly grasp new information. High IQ students are often curious, creative, analytical, critical, independent thinkers, problem solvers, innovators, leaders, communicators and are able to learn and retain information at a faster rate than their peers. Additionally, they tend not to have difficulty with abstract thinking, reasoning, memory, attention, language, math, spatial and visual-spatial skills. \n\n"}
{"instruction": "Determine the number of days it will take to complete the task.", "raw_instances": ""}
{"instruction": "Print out all the prime numbers between two given numbers.", "raw_instances": "def print_primes(start, end):\n  for num in xrange(start,end+  )):\n    if num >  #1:\n      for n in #2:\n        if #3:\n          print num\n\nOutput:\n\n"}
{"instruction": "What is the meaning of \"affect\" in the context of this paper?", "raw_instances": "Input:\nThe study of affect in language is a relatively new field of research. It is concerned with the study and analysis of how emotions are expressed and communicated in human language. Affect in this context refers to the emotional content of language, including the use of words and phrases that convey emotions such as happiness, sadness, anger, fear, etc. This study is important because it helps us understand how people express and communicate their emotions in different contexts, which can have a significant impact on their social interactions and relationships.\n\nOutput:\n\nThe meaning \"Affect\", in context, refers the \"emotional content\" of human communication. \n\n"}
{"instruction": "Generate a list of potential solutions to the problem given in this prompt.", "raw_instances": "Prompt: You are given a set of numbers and asked to find all possible combinations of those numbers that add up to exactly  target.\n"}
{"instruction": "Find the sum of all the numbers in a list please provide the output in json format.", "raw_instances": "List: \n[1503,1605,-1345]\nInput:\n[  \b\b1 \t5  0 \u00073  , \u00021\b \u00036 \u00045 , -1\u0002 \u00054 \u00065 ]\nOutput:\n\n{\n  \"sum\":  -228\n}\n\n"}
{"instruction": "Generate a new list with the same elements as the original list, but with all elements replaced by their square root.", "raw_instances": "Example: Input: list = [4.0]\n         Output: sqrt_list = [-2.]\n"}
{"instruction": "If a person has 4 arms and 6 legs, how many people are they?", "raw_instances": "Input:\nOutput:\n\nThere is no input for this task. \n\n"}
{"instruction": "Find the sum of squares of digits of a number.", "raw_instances": "Example: Input: number = \"1345\"\nOutput :   1^2+3^3+4^4+5^5=  =1+9+25+62=97\nInput : number= \"236\"\noutput: 2^1 +3 ^2 +  +6^6= =28\n"}
{"instruction": "Create a function that generates a random sentence from a given list of sentences.", "raw_instances": "Example Input: [\"The cat sat on the mat.\", \"I ate a sandwich for lunch.\", \n\"Today is a beautiful day.\"]\nExample Output: \"Today, is, beautiful, day.\"\n\n"}
{"instruction": "If you were to create a list of 15 things that you would like to do before you die, what would they be?", "raw_instances": "Input:\n1) Travel to every continent\n2) Learn to speak a new language fluently\n3) Write and publish a book\n4) Run a marathon\n5) Go skydiving\n6) Att"}
{"instruction": "Write an email to a friend about a recent event.", "raw_instances": "Subject: A Great Time at the Beach\nHi [Fri"}
{"instruction": "Your task in this case is not to write a program, but rather to come up a list of all possible words that can be used to describe a certain object.", "raw_instances": ""}
{"instruction": "Write a program that takes a string as input and returns the number 0 if the string is empty or contains only whitespace characters.", "raw_instances": "def count_whitespace(s):\n  if s == \"\":\n    print(0)\n  else:\n    count = sum(1 for c in s if c.isspace())\n    if count ==  )):\n      print(\"0\")\n    else: \n      return count\n\nOutput:\n\n"}
{"instruction": "What is the most efficient way to find the maximum sum subarray in an array?", "raw_instances": "Input:\n[2,-1,-2]\n[15,-3,-4,-5]\n[-13,16,-7,-8]\n-1\n-2\n1\n\nOutput:\n\nThe most common and efficient algorithm to solve this problem is Kadane's algorithm. It works by iterating through the array and keeping track of both the current maximum sub-array sum and the overall maximum. At each iteration, if the new element is greater than the next element in this sub array, then the sub sum is updated. Otherwise, we keep the previous subsum. This way, at the "}
{"instruction": "Generate a random number between 30 and 40, then subtract it from the result of multiplying 7 by 8.", "raw_instances": ""}
{"instruction": "What are the top 5 most important skills for a new software developer?", "raw_instances": ""}
{"instruction": "Use the data provided to create an excel table that shows the average salary of employees in each department.", "raw_instances": "Data: \nDepartment | Salary\nIT |  ￥150k\nSales |￥25k \nMarketing | ＄36k\n\nOutput:\n\n| Department | Average Salary |\n|------------|---------------|\n| IT         | $131k         |\n"}
{"instruction": "The average salary of a person in a certain company is $1200 per month.", "raw_instances": ""}
{"instruction": "Create a new task that requires the user to solve a math problem.", "raw_instances": ""}
{"instruction": "What is the difference between a positive and negative sentence?", "raw_instances": "Input:\nPositive: The cat is sleeping.\nNegative: I am not happy.\n"}
{"instruction": "Describe a way to solve a problem using recursion.", "raw_instances": "Problem: Given a list of numbers, find out if the list contains a pair of elements that add up to the target number.\nSolution: def find_pair(lst, target):\n  for num in lst:\n    if target - num not in list:\n      return False\n  return True\n\nOutput:\n\n"}
{"instruction": "Using the given data, create an excel table that lists the top 5 countries with highest population.", "raw_instances": "Data: Country, Population\nIndia,1366416768\nChina,2251562694\nUnited States,6031e6\nIndonesia,8497e5\nBrazil,7486e4\n\nOutput:\n\n| Country | Population |\n|---------|------------|\n| China   |  ******   |\n | India   || *******  |\n  | United  ||   *     |\n   States ||    *    |\n    | Indonesia||  *   |\n\n"}
{"instruction": "How would the following code be modified to print the numbers from 1 to 20 in reverse order?", "raw_instances": "def print_numbers():\n    print(1)\n    def print_reverse(n):\n      if n >   0:\n        print(n)\n        return printReverse(n-1)\n\nprint_reverse(2)\nOutput:\n\ndef reverse_print(n, reverse_list):\n  if not n:\n    reverse = reverse\n  else:\n      reverse.append(n) \n      return reverse\n\nreverse_print(0)\n\n"}
{"instruction": "How would i create an array of strings?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a table with the following columns: name, country, population, area, capital, currency, official language, religion, flag, language spoken in school.", "raw_instances": "Name | Country | Population | Area | Capital | Currency | Official Language | Religion | Flag | Language Spoken in School\n--- | --- | ---\nJohn | United State |   |   | Washington D.C. | US Dollar | English | Christianity | [US Flag] | American English\n"}
{"instruction": "Generate a list of 20 words that describe the protagonist of your favorite book.", "raw_instances": ""}
{"instruction": "If the value of x is 5, what is y?", "raw_instances": "Input:\nx = '5'\ny = x + '2'\nOutput:\n\ny is '7'\n\n"}
{"instruction": "The sum is equal to 20, and the product is greater than 400.", "raw_instances": "The numbers are: -15,-13,-8,-5\nInput:\nOutput:\n\n"}
{"instruction": "Implement a method to find all the words in an array that are of length 3.", "raw_instances": "Array: ['cat', 'dog',  'elephant', '-1', '', '3', True, 'apple', None]\nMethod: def find_words_of_length_3(words):\nOutput:\n\ndef find_word_of_ength_2(words): \n    result = []\n    # iterate over the list of words\n   for word in words:\n       # check if the length of word is  ouside the range [2-3]\n       if len(word) ==  len('word'):\n           # if yes, add it to the result\n           result.app"}
{"instruction": "Design a game that involves a user guessing a number from 1 to a given limit.", "raw_instances": ""}
{"instruction": "If a user enters a number, write a function to convert it to its binary representation.", "raw_instances": "def binary(num):\n  if num ==  \t0:\n    binary = '0'\n  elif num >  =1:\n   binary ='1'\n   for x in str(num)[::-1]:\n    if x == '1':\n      binary += 'X'\n    else:\n      for y in binary:\n        if y == \"X\":\n          binary.replace(y, \"0\")\n          break\n  return binary\n\nOutput:\n\n"}
{"instruction": "Given a sentence with one or more blanks, write a program to fill in those blanks.", "raw_instances": ""}
{"instruction": "If you were to take 200 grams of sugar and add it to 50 ml of water, what would be the weight of the solution?", "raw_instances": "Input:\nSugar:25 grams\nWater:5 ml\nQuestion:\nWhat would the total weight be?\nAnswer:\n275 g\n\n"}
{"instruction": "Create a table of the top 5 countries with the highest population in 2021.", "raw_instances": "Table:\n| Country | Population (in millions) |\n|---------|--------------------------|\n| China   |  ******                  |\nOutput:\n\n"}
{"instruction": "Identify the main idea of the following text: \"the united states of america is a country located in north america.", "raw_instances": "The main ideas of this text are: \n1) The United states is located on the North American continent.\n2) It is considered a separate country.\n\nOutput:\n\n"}
{"instruction": "What is the difference between a \"b\" sound and a 'b' sound?", "raw_instances": ""}
{"instruction": "How can i make a website that displays the latest news from a specific website?", "raw_instances": ""}
{"instruction": "Find the average of the numbers given in a tuple.", "raw_instances": ""}
{"instruction": "Why is it important to use proper grammar and punctuation in writing?", "raw_instances": ""}
{"instruction": "Find the longest palindrome in the list [121, 342, \"racecar\", 997, -114, 'race', 733,678,", "raw_instances": "'race' ,   'car', 'car' ]\nOutput:\n\nThe longest palindromes in this list are \"1\" and \"3\" which are single digits. \n\n"}
{"instruction": "Implement a method that returns the maximum value in a given list.", "raw_instances": "def max_value(lst):\n  max_val = lst[0]\n  for val in lst:\n    if val > max:\n      max = val\n  return max\n\nOutput:\n\n"}
{"instruction": "Write a program that takes a string and returns the longest word in it.", "raw_instances": "def longest_word(s):\n  words = s.split()\n  longest = \"\"\n  for word1 in words:\n    if len(word1) > len(longest):\n      longest=word1\n  return longest\n\n"}
{"instruction": "Identify the type of sentence (declarative, interrogative or imperative) and output it.", "raw_instances": "Sentence: Please turn off the light when you leave the room.\nType: Imperative\n\nOutput:\n\n"}
{"instruction": "Create a table that compares the number of hours worked by men and women in the us workforce.", "raw_instances": "| Gender | Average Hours Worked |\n|--------|---------------------|\n| Men    |  \t41                |\n | Women  |    37               |\n\n"}
{"instruction": "In a given string, replace all occurrences of the word \"apple\" with \"orange\".", "raw_instances": "Input:\n\"An apple a day keeps the doctor away.\"\nOutput:\"An orange a aay keeps tne doctor aaway.\"\n\n"}
{"instruction": "Create a function to check if a number in a given list is divisible by 3.", "raw_instances": "def divisible_by_3(lst):\n  for num in lst:\n    if num %   3 == \t0:\n      return True\n  return False\n\nOutput:\n\n"}
{"instruction": "If i am given a number, what is its square root?", "raw_instances": "Input:\nNumber: -16\nAnswer: The square of -8 is -64. So, its root is  -√63.\n\nOutput:\n\n"}
{"instruction": "Can you explain the concept of a neural network and its applications in machine intelligence?", "raw_instances": "Input:\n\n"}
