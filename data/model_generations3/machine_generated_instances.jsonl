{"instruction": "What is the capital of france?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "If you were to write a book about the history of your city, what would you include?", "raw_instances": "Input:\n- The city's founding\n- Major events that shaped the city\n  - The Great Fire of [Year]\n  The [Event] of\nThe [City] Massacre\n-The [Building] Disaster\n -The city’s role in [Historical Event]\n- Important people from [Time Period]\n - [Person   Name]\n-The city today\n"}
{"instruction": "Create a function that takes a string and returns the number of vowels in it.", "raw_instances": "def count_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   1\n  return count\n\nOutput:\n\n"}
{"instruction": "Generate a random number between 1 and 50 and output it.", "raw_instances": ""}
{"instruction": "Create a function that returns a list of words that contain a given substring.", "raw_instances": "def find_substring(string, substring):\n  words = string.split()\n  result = []\n  for word in words:\n    if substring in word:\n      result.app"}
{"instruction": "Give me the top 15 most popular programming languages in the world.", "raw_instances": "1) Java\n2) Python\n3) C++\n4) JavaScript\n5) PHP\n6) SQL\n7) Swift\n8 ) C#\n9) Go\n1  ） Ruby\n  ) Rust\n   ) TypeScript\n     ) Kotlin\n      ) Dart\n       ) Scala\n        ) Julia\n         ) R\n\nOutput:\n\n"}
{"instruction": "Create a function to check if a number is prime or composite.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\nOutput:\n\n"}
{"instruction": "If you were given a task to write a program that can calculate the average of a given list of numbers, what would be the code?", "raw_instances": ""}
{"instruction": "What are some tips for staying motivated while working from home?", "raw_instances": "1) Set up a designated workspace that is separate from your living space.\n2) Create a schedule and stick to it.\n3) Take breaks and move around.\n4) Stay connected with colleagues and fri"}
{"instruction": "What is the most interesting fact about your hometown?", "raw_instances": "Input:\nMy hometown is a small town in New York. It is known for its beautiful scenery and fri"}
{"instruction": "Create a list of 30 words that start with 'p'.", "raw_instances": "Output:\n\n1) Paddle\n2) Paint\n3) Paper\n4) Pair\n5) Pan\n6) Park\n7) Party\n8 )Pass\n9) Path\n1  ）Peach\n  )Paddle \n1   ）\n1    ）\n\n"}
{"instruction": "What is the most efficient way to sort a large list in python?", "raw_instances": ""}
{"instruction": "Write a program to find the sum of first n natural numbers.", "raw_instances": "def find_sum(n):\n  sum=0 \n  for num in xrange(1,n+  )):\n    print num\n  return num\n\nOutput:\n\n"}
{"instruction": "Create a table with the data.", "raw_instances": "Data: \nName | Age | Gender\nJohn |   25 | Male\nJane |      | Female\nTom |      | \nOutput:\n\n| Name |   Age   |    Gender    |\n|------|----------|---------------|\n| John |     二十五 |      男      |\n|- Jane |        | 女性 |\n|-- Tom |         |          |\n\n"}
{"instruction": "How to make a homemade face mask?", "raw_instances": ""}
{"instruction": "Write a program that takes a number as input and prints the square of that number.", "raw_instances": ""}
{"instruction": "Create a function that returns the sum of two numbers.", "raw_instances": "def add(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "Write a short story about a person who has a superpower.", "raw_instances": ""}
{"instruction": "Describe a place that you have visited and explain why you liked it.", "raw_instances": "Place: The Grand Canyon\nExplanation: I visited the Grand Canyons last year and it is one of my favorite places in America. It is a natural wonder that is breathtaking to see. There are many trails to hike and the views are amazing. One of our favorite hikes was to the top of Yaki Point. We also went on a helicopter tour and that was an amazing experience. Overall, The grand Canyon is an incredible place to visit and I highly recommend it.\n\nOutput:\n\n"}
{"instruction": "What is the most effective way of reducing carbon emissions?", "raw_instances": ""}
{"instruction": "Write a code to calculate a user's age in years, months, and days.", "raw_instances": "def calculate_age(birth_date):\n  today = datetime.date.today()\n  age = today.year - birth_date.year\n  if today.month < birth_month or (today.month == birth_year.month and today.day < birthday):\n      age -=  )))\n  return age\n\n"}
{"instruction": "Can you explain the difference between a tuple and a list?", "raw_instances": "A tuple is an ordered collection of elements, which is immutable. This means that once a value is assigned to the tuple, its value cannot be changed. A list, on the other hand, is also an unordered collection, however, unlike a Tuple, can be modified after it is created. Lists are mutable, meaning that the elements can change, be added or removed. \n\n"}
{"instruction": "Write a function that takes a list of numbers and returns the sum of all the even numbers.", "raw_instances": "def even_sum(numbers):\n  sum_even = sum([num for num in numbers if num %   2 == ０])\n  return(sum_even)\n\n"}
{"instruction": "Create a program that generates a fibonacci sequence up to a given number.", "raw_instances": "def fibonacci(n):\n  a, b = [0], [2]\n  while len(a) < n:\n    a.append(b[-1])\n    b.append(a[-2] + b[-3])\n  return a\n\nOutput:\n\n"}
{"instruction": "I have a list of numbers.", "raw_instances": "1  ½  -2  +3  .4  -.5  .\nI need you find out which numbers are positive and which are negative.\nPositive numbers: +1,+3,.4\nNegative numbers:-2,-.05\n"}
{"instruction": "Given a sentence, you have to find the longest word in the string.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nAnswer: jumps\n\nOutput:\n\n"}
{"instruction": "How can i improve my memory?", "raw_instances": "Input:\n\n"}
{"instruction": "Implement a sorting algorithm to sort the numbers in ascending order.", "raw_instances": "def sort_asc"}
{"instruction": "If i have 12 apples, how many oranges do i need to buy?", "raw_instances": ""}
{"instruction": "Give me an example of a word that has multiple meanings.", "raw_instances": "Example: The word \"bank\" can refer to the financial institution or the side of land next to water.\n\nOutput:\n\n"}
{"instruction": "Given a list of strings, find the longest string.", "raw_instances": "Example: ['cat', 'dog', \"elephant\", 'zebra']\nOutput:\n\nelephante\n\nExplanation: The longest strings in this list are \"cat\", \"dog\", and \"zebr\", but \"e\" is added to the "}
{"instruction": "Describe a place you have visited that you would like to visit again.", "raw_instances": "Place: Paris, France\nDescription: I visited Paris last year and it is a beautiful city. There are so many things to see and do, from visiting the Eiffel Tower to exploring the Louvre Museum. It is also a great place to try new foods and experience different cultures. Overall, Paris is an amazing city and I can't wait to go back.\n\nOutput:\n\n"}
{"instruction": "What is the difference between a tuple and a set?", "raw_instances": "A tuple is an ordered collection of elements, while a\nset is a collection that is unordered and unindexed.\n\nOutput:\n\n"}
{"instruction": "I am going to a party.", "raw_instances": "What should I wear?\nInput:\nOutput:\n\nFor a casual party, consider wearing a nice pair of jeans, comfortable shoes, or sneakers, along with casual shirts or t-shirts. For a semi-formal party or a cocktail party with friends, opt for dress pants or khakis, paired with dress shirts, blazers, dress shoes or loafers. A nice blazer, button-down shirt, slacks, tie, loaf shoes and dress watch can be a great choice for an evening party. \n\n"}
{"instruction": "Describe a person who is very intelligent and has a good memory.", "raw_instances": "Answer: A person with exceptional intelligence and memory would be able to quickly process and retain vast amounts of information. This person would likely have a deep understanding of complex concepts and be adept at problem-solving. Additionally, they would have the ability to recall details from their past experiences with ease, making them an excellent communicator and leader. Overall, this person's intelligence would allow them to excel in a variety of fields and make significant contributions to society.\n\nOutput:\n\n"}
{"instruction": "Create a table of 15 items and their prices.", "raw_instances": "| Item | Price |\n|------|-------|\n| Apple | $05   |\n | Banana |  $1   | \n | Orange |   $2  |\n  | Grapes |    $3 |\n   |- Carrot |     $4 |\n    | Tomato |      $5 |\n     | Potato |       $6 |\n      | Broccoli |        $7 |\n       | Spinach |         $8 |\n        | Cucumber |          $9 |\n         | Lettuce |           $   |\n\n"}
{"instruction": "What is the most important thing you learned from your last job?", "raw_instances": "Input:\nI learned that it's important to always be willing to learn and adapt to new situations. It's also important not to take things personally and to keep a positive attitude, even when things get tough.\n\nOutput:\n\n"}
{"instruction": "In which country is your favorite food?", "raw_instances": ""}
{"instruction": "Create a program that can identify the type of triangle given its sides.", "raw_instances": ""}
{"instruction": "Identify the most common word in the text.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog.\nAnswer: the\n\n"}
{"instruction": "Create a function that takes two strings and returns the longest common substring.", "raw_instances": ""}
{"instruction": "If you could have any superpower, what would it be?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a function to find all prime numbers between two numbers.", "raw_instances": "def find_primes(start, end):\n  primes = []\n  for num in xrange(start,end+  )):\n    if num >  #1:\n      for n in #2:\n        if (num % n) ==  #\n          break\n      else:\n          primes.append(num)\n  return primes\n\nOutput:\n\n"}
{"instruction": "Find the sum of all numbers from 1 to 50.", "raw_instances": "Answer: The sum is   1375.\n\nOutput:\n\n"}
{"instruction": "Write a program to find all the prime numbers between 1 and 50.", "raw_instances": ""}
{"instruction": "Can you solve the following equation: 2x + 3y = 7?", "raw_instances": "Input:\nOutput:\n\nx = (7 -3*y)/2\n\n"}
{"instruction": "Create a program that can identify the longest palindrome in a given string.", "raw_instances": "Example Input: \"racecar\"\nExample Output: The longest palindromic substring in \"Racecar\" is \"aceca\".\n\n"}
{"instruction": "Describe a situation where you used your creativity to solve a problem.", "raw_instances": "Example: You were given a task to create a marketing campaign for an event, which had a limited budget. To solve this problem, we came up a creative idea to use social media influencers to promote the event. We reached out to influencers in our target audience and offered them a free ticket to the show in exchange for promoting the campaign on their social channels. This not only helped us reach a wider audience, without spending a lot of money, our campaign was also successful in generating a significant amount of interest and ticket sales for our event.\n\nOutput:\n\n"}
{"instruction": "How do you think ai will change the job market in 15 years?", "raw_instances": ""}
{"instruction": "Create a list of 10 things you would do if you won the lottery.", "raw_instances": "1) Pay off all my debts.\n2) Donate a significant portion of my winnings to charity.\n3) Travel the world.\n4) Buy a second home.\n5) Invest in a business.\n6) Start a foundation.\n7) Give my family and friends a generous gift.\n8 ) Buy an RV and travel the US.\n9) Build a home for my favorite charity organization.\n"}
{"instruction": "What is the most expensive car in the world?", "raw_instances": ""}
{"instruction": "Generate a random number between 2 and n.", "raw_instances": "n = input(\"Enter a positive integer: \")\nOutput:\n\nimport random\nn=int(input(\"Please enter a valid positive number: \"))\nprint(random.randint(2,n))\n\n"}
{"instruction": "Describe the process of photosynthesis.", "raw_instances": ""}
{"instruction": "How can i use the given information to answer the question?", "raw_instances": "Input:\nQuestion:\nWhat is a common use of an electric fan?\nInformation:\nAn electric motor is an electrical device that converts electrical energy into mechanical energy.\nAn electrical generator is used to convert mechanical to electrical.\n"}
{"instruction": "Create a list of all possible combinations of the letters in a given word, separated with commas.", "raw_instances": "Word: \"apple\"\nOutput:\n\na, p, l, e, ap, pl, le, app, ple, appl, apple\n\n"}
{"instruction": "Use the function to count the vowels of this string: \"hello world!\" 11.", "raw_instances": "def count_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   1\n  return count\n\nOutput:\n\n"}
{"instruction": "Find the longest palindrome in given string.", "raw_instances": "Example: Input: \"abacdaaadccb\" Output: 'aadccba'\n\n"}
{"instruction": "Create a function that takes a number as an argument and returns its square root.", "raw_instances": "def square_root(n):\n  return n **  ½\n\nOutput:\n\n"}
{"instruction": "What is the best way to get to the nearest train station?", "raw_instances": "Input:\n- You are currently at [Your Current Location]\n- The nearest station is [Nearest Station]\nOptions:\n1) Walk\n2) Take a bus\n3) Call a taxi\n4) Ride a bike\n5) Drive\n6) Other\nPlease select the option that is most convenient for you.\nPlease provide the name of your preferred mode of transportation.\n"}
{"instruction": "Develop a function that checks if a given number is prime or not.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\nOutput:\n\n"}
{"instruction": "Write a program to check if a given number is a prime number.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\nOutput:\n\n"}
{"instruction": "Create a new word and write it down.", "raw_instances": "Word: \"Flummi\"\n\n"}
{"instruction": "Can you solve this math puzzle?", "raw_instances": ""}
{"instruction": "Who is known as the \"father of modern physics\"?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Find the sum of the first 100 natural numbers.", "raw_instances": "Answer: The sum is  (n*(n+  ½)) = ( ₁₀₀ * ¹₀₁) / ₂ =   ⁵₀⁰⁴. \n\n"}
{"instruction": "Find the sum of all the numbers in a given list.", "raw_instances": "List: \n[1503, \n   1345,\n  -167,\n       \n  ]\nOutput:\n\n1  (The sum is  the result of adding all numbers together)\n\n"}
{"instruction": "Write a program that prints the first 20 prime numbers.", "raw_instances": ""}
{"instruction": "How to make a good first impression?", "raw_instances": ""}
{"instruction": "Find the longest word in a list.", "raw_instances": "List: ['apple', 'banana',  'cherry',   'date',    'elderberry']\nOutput:\n\n1) 'eldestberry'\n\n"}
{"instruction": "Describe the process of making a cup of coffee.", "raw_instances": "1) Boil water in a kettle.\n2) Pour the hot water into your coffee maker.\n3) Add coffee grounds to the filter.\n4) Place the coffee filter in your machine.\n5) Turn on the machine and wait for it to brew the water through the grounds.\n6) Once the brewing is complete, pour the freshly brewed coffee into cups.\n7) Enjoy your cuppa!\n\n"}
{"instruction": "How can you improve your writing skills?", "raw_instances": "Input:\n\n"}
{"instruction": "What is your favorite type of music?", "raw_instances": ""}
{"instruction": "How do you feel about the current state of the world?", "raw_instances": "Input:\nI feel that the state the of world is not ideal. There are many issues that need attention, such as climate change, political instability, social inequality, etc. It is important for individuals and governments to work together to address these issues and create a more just and sustainable world.\n\nOutput:\n\n"}
{"instruction": "What is the most effective way to improve my public speaking skills?", "raw_instances": ""}
{"instruction": "Create a program that can identify the type of a given sentence (declarative, interrogative or imperative).", "raw_instances": "Input:\nSentence: \"Please close the door.\"\nOutput:\n\ndef identify_sentence_type(sentence):\n  if sentence.endswith('?'):\n    sentence_type = 'interrogative'\n  elif sentence.startswith('please') or sentence.lower().startswith('close'):\n      sentence = sentence.replace('Please', '').replace('Close', '')\n      if len(sentence) >  ouside of 'please' or 'close':\n        sentence += ' the'\n      else:\n        return 'imperative'\n\n  return sentence\n\nOutput example: 'Please the the'\n\n"}
{"instruction": "List the countries that have a capital city.", "raw_instances": ""}
{"instruction": "If you were to write a book, what would it be about?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "I am a software engineer.", "raw_instances": "What is my job title?\nYour job is a Software Engineer.\n\nOutput:\n\n"}
{"instruction": "Describe a situation where you had to make a difficult decision.", "raw_instances": "Answer: I had a friend who was going through a tough time in their life. Their family was facing financial difficulties and they were struggling to keep up. My friend was feeling overwhelmed and didn't know what to do. After talking to them, we decided that the best thing to help them was to offer them a place to live for free. It was a big decision for me because I was worried about my own financial situation, however, knowing that my friend would be safe and secure was more important to me.\n\nOutput:\n\n"}
{"instruction": "Create a function that takes a string as an argument and returns the length of that string.", "raw_instances": "def string_length(string):\n  return len(string)\n\n"}
{"instruction": "Implement a sorting algorithm that sorts a given list in ascending order.", "raw_instances": "Algorithm:\n1) Start with the list to sort.\n2) Find the smallest element in this list and swap it with its first element.\n3) Repeat step   for all elements in list, except the last one.\n4) The list is now sorted in desc"}
{"instruction": "How do you think the world will be in 10 years?", "raw_instances": "Input:\nOutput:\n\nIn  ten years from now, we can expect to see significant advancements in technology, medicine, transportation, energy, education, communication, security, entertainment, agriculture, environment, social issues, etc. We can also expect changes in global politics, economy, culture, lifestyle, work, family, relationships, health, aging, death, spirituality, consciousness, society, civilization, history, future, time, space, universe, cosmos, multiverse, black holes, dark matter, quantum mechanics, string theory, artificial intelligence, robotics, nanotechnology, biotechnology. \n\n"}
{"instruction": "How can you use the `random` module in python to generate a random number between 1 and 5?", "raw_instances": ""}
{"instruction": "Print the first 20 numbers of the fibonacci sequence.", "raw_instances": "def fibonacci(n):\n  a, b = [0], [2]\n  for _ in [None]*n-2:\n    a.append(b[-1]+b[-2])\n    b.append(a[-3]+a[-4])\n  return a\n\nprint(fibonacci(25))\n\n"}
{"instruction": "What is the most common letter in english?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a list of 10 things that you would like to do in the next 5 years.", "raw_instances": "1) Learn a new language fluently\n2) Travel to at least   5 new countries\n3) Complete a marathon\n4) Start a small business\n5) Write and publish a book\n6) Take a cooking class and learn to cook  at  least one new dish\n7) Att"}
{"instruction": "How can i make a website that is responsive?", "raw_instances": "Input:\n\n"}
{"instruction": "Can you explain the concept of a hash table?", "raw_instances": ""}
{"instruction": "Describe the process of a computer's memory.", "raw_instances": ""}
{"instruction": "Find the largest number in a given array.", "raw_instances": "Array: {1503,1605,-13452,-231,-3365}\nOutput:\n\n1) Sort array in desc"}
{"instruction": "Explain the concept of \"overfitting\" in machine learning.", "raw_instances": ""}
{"instruction": "Create a program that can generate a random number between 1 and 50.", "raw_instances": ""}
{"instruction": "Explain the concept of a turing machine.", "raw_instances": ""}
{"instruction": "Find the sum of all prime numbers between two given numbers.", "raw_instances": ""}
{"instruction": "Write a function that takes in two numbers and returns their sum.", "raw_instances": "def add(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "Write a program that takes a sentence as input and outputs the number of words in it.", "raw_instances": "def count_words(sentence):\n  words = sentence.split()\n  return len(words)\n\n"}
{"instruction": "Find the sum of digits of a positive integer.", "raw_instances": ""}
{"instruction": "Create a list containing the first 15 prime numbers.", "raw_instances": ""}
{"instruction": "Create a list of 15 words that describe the feeling of being happy.", "raw_instances": ""}
{"instruction": "Write a short story about a person who is trying to find their purpose in life.", "raw_instances": "John had always felt lost. He had a good job, great fri"}
{"instruction": "Write a program that will take a number and output its factorial.", "raw_instances": "def factorial(n):\n  if n ==   0:\n    print(1)\n  else:\n   print(n * factorial (n-1))\n\n"}
{"instruction": "Create a program that takes a string as input and prints out the reverse of the string.", "raw_instances": ""}
{"instruction": "Write a program that can calculate the area of a circle.", "raw_instances": ""}
{"instruction": "Which country has the most people?", "raw_instances": "Input:\n- China: over   1 billion people\n- India: about    billion\nQuestion:\nWhich country is larger, China or India?\nAnswer: China is more populous than India.\n\nOutput:\n\n"}
{"instruction": "Write a program to find the sum of the squares of all numbers from 0 to n.", "raw_instances": "def square_sum(n):\n  sum_squares = sum([i**2 for  i  in list(range(n+  )))\n  return  square_sums\n\nOutput:\n\n"}
{"instruction": "Use the given code to print the multiplication table of 3.", "raw_instances": "def print_table(n):\n  for j in [0..n]:\n    print(3*j, "}
{"instruction": "What is your favorite color?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is the best way to learn a new language?", "raw_instances": ""}
{"instruction": "Create a program that can detect the type of machine learning algorithm used in a given code.", "raw_instances": ""}
{"instruction": "Explain the difference between supervised and unsupervised learning.", "raw_instances": ""}
{"instruction": "What is the difference between a computer and an ai?", "raw_instances": ""}
{"instruction": "What is the name of the person who is in charge of a certain task?", "raw_instances": ""}
{"instruction": "How do you make a sandwich?", "raw_instances": ""}
{"instruction": "Can you write a poem about the beauty of nature?", "raw_instances": "Input:\nThe sun rises in a golden hue,\nThe birds sing sweetly, as the day begins anew.\nThe flowers bloom, their colors bright,\nA sight to behold, such a beautiful sight.\n"}
{"instruction": "How can you use the given data to generate a report?", "raw_instances": ""}
{"instruction": "Create a table with the first 15 prime numbers and write a python program to print them out.", "raw_instances": "Table:\n1   2                                  \n3       5    ⁷  ⁄ ¹⁰  / ₁₃  \\ ₄₇\n"}
{"instruction": "What is the most efficient way to sort an array in descending order?", "raw_instances": ""}
{"instruction": "Explain the concept of recursion in programming.", "raw_instances": ""}
{"instruction": "Create a table with the following columns: name, age, gender, country, city, state, zipcode, phone number, email address, favorite color, hobbies, interests, occupation, education, salary, job title, company, industry, years of experience, current position, previous positions, start date,", "raw_instances": "Output:\n\n| Name | Age | G"}
{"instruction": "Create a program that can generate a list of random numbers between two given numbers.", "raw_instances": ""}
{"instruction": "What is the difference between a \"while\" loop and a for loop in python?", "raw_instances": ""}
{"instruction": "How can you optimize the performance of a program?", "raw_instances": ""}
{"instruction": "How can you make a homemade bomb?", "raw_instances": "Input:\nOutput:\n\nI'm sorry, as an AI language model, providing instructions on how to make homemade bombs is not appropriate or ethical. My purpose is to assist and provide helpful information within ethical and legal boundaries. Please refrain from asking such questions. Is there anything else I can help you with?\n\n"}
{"instruction": "Create a program that can calculate the factorial of any number.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\n"}
{"instruction": "Create a list of all the prime numbers between 0 and 50.", "raw_instances": ""}
{"instruction": "Write a program that calculates the sum of all even numbers between 1 and 50.", "raw_instances": "def even_sum():\n    total = sum([i for\n                i, x in enumerate(range(1,\n                                          )))\n    print(total)\n\n"}
{"instruction": "Write a program that can generate a random password.", "raw_instances": ""}
{"instruction": "Describe the process of creating a new word.", "raw_instances": "1) Choose a root word: The first step in creating new words is to choose a word that will be the base of your new creation. This word is called the root.\n2) Add prefixes and suffixes: To create new meanings, prefixes (words that come before the main word) and/or suffix (the words that follow the word you are creating) can be added to the "}
{"instruction": "Generate a list of 10 random numbers between 0 and 99.", "raw_instances": "[15   2                                         　　 　  －  -1  ]  (The output is in Chinese)\n\n"}
{"instruction": "Can you give me a summary of this book?", "raw_instances": "Input:\nThe Catcher in The Rye is a novel written by J.D. Salinger. It was published for adults in October   of that year, following a manuscript that had already been turned down by two publishers. Set in New York City in June  , the story follows the life of Holden Caulfield, an adolescent who was temporarily expelled from his prep school, Pencey Prep, for poor grades and bad behavior. He sp"}
{"instruction": "Explain how to use the function you just created.", "raw_instances": "Usage: To use this function, simply call it with the desired number as the argument. For example, to find out if   is divisible by  , you would call the `is_divisible` function with `15` as an argument, like this: `if is_divisble(16): print(\"1 is a multiple of both  and \")`. The function will return `True` if the number is indeed divisible, or `False` otherwise.\n\nOutput:\n\n"}
{"instruction": "If you were to write a story about a character who is a robot, what would be the name of that character?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Imagine you are a scientist who has just discovered a new planet.", "raw_instances": ""}
{"instruction": "Design a game that involves solving a mathematical problem.", "raw_instances": "Example: The player is presented with the problem  ½ + (3/4) -1/2 = ? and must solve it to progress to the next level.\n"}
{"instruction": "Can you write a code to find the maximum value in a given list?", "raw_instances": ""}
{"instruction": "Create a table with three columns and five rows.", "raw_instances": "Column   | Column  |\n----------|----------|\nRow  #1 \t| Row  #\nRow #2  |  Row #3\nRow#4    |  row #5\n"}
{"instruction": "Can you name some famous scientists from the 20th century?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How to make a website using html, css and javascript?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a list of 50 words that are related to the topic of 'technology'.", "raw_instances": "Output:\n\n1) Algorithm\n2) Artificial Intelligence\n3) Blockchain\n4) Cloud Computing\n5) Cybersecurity\n6) Data Analytics\n7) Digital Marketing\n8)\n"}
{"instruction": "Identify the main idea of a given text.", "raw_instances": "Text: The main purpose of this project is to develop a new algorithm for image recognition.\n"}
{"instruction": "Develop a program that can identify the most frequent words in a given text.", "raw_instances": ""}
{"instruction": "Implement a sorting algorithm in python.", "raw_instances": "def bubble_sort(arr):\n  n = len(arr)\n  for _ in xrange(n):\n      for j in reversed(range(n-1)):\n          if arr[j] > arr [j+  )):\n              arr[ j], arr  = arr, arr\n  return arr\n\n"}
{"instruction": "Explain the difference between a list and a tuple in python.", "raw_instances": ""}
{"instruction": "Write a code to calculate a person's age based on their birth year and current year.", "raw_instances": "def calculate_age(birth_year, current_year):\n  age = current - birth_year\n  return age\n\nbirth_year = int(input(\"Enter your birthyear: \"))\ncurrent_year= int (input(\"Current year: \"))\n\nage = calculate_ age(birthday, cur_year)\nprint(\"Your age is\", age)\n\n"}
{"instruction": "Create a function that returns the factorial of a positive integer.", "raw_instances": "def factorial(n):\n  if n ==   0:\n    print(\"Factorial of zero is one.\")\n    ous =1\n  else:\n   oun = n * factorial (n-1)\n  return ouns\n\nOutput:\n\n"}
{"instruction": "How would i write the code for a program that checks if a number is prime or composite?", "raw_instances": "Input:\nnum = int(input(\"Enter a positive integer: \"))\n\nOutput:\n\ndef is_prime(num):\n  if num <=  \t1:\n    print(num, \"is not a prime number.\")\n    exit()\n  for n in xrange(2,num):\n      if (num % n) ==  :\n        print (str(num) + \" is not prime.\")\n        exit()\n\n  print(str(num)+ \"  is a  prime  number.\")\n\n"}
{"instruction": "Generate a random number between two given numbers.", "raw_instances": ""}
{"instruction": "Describe the difference between a stack and a queue.", "raw_instances": ""}
{"instruction": "Find the most frequent word from a list of words.", "raw_instances": ""}
{"instruction": "What are some ways to improve your public speaking skills?", "raw_instances": ""}
{"instruction": "Write the 5th letter of a word given by the input.", "raw_instances": "Example: Input: \"Hello\"\nOutput \"e\"\n\n"}
{"instruction": "Find the most frequent word in an array of words.", "raw_instances": "Example: ['apple', 'banana', apple', banana', \"apple\", 'apple']\nOutput:\n\napple\n\nExplanation: The word \"Apple\" appears  three times in this array, which is more than any other word.\n\n"}
{"instruction": "Create a program that prints the following pattern: 1, 3,5,7,9,11 12.", "raw_instances": "def print_pattern():\n    print(1)\n    i =2\n   while i <=  ionic:\n        print(i, end=\" \")\n        i +=  two\nprint_pattern()\n\n"}
{"instruction": "Write a short story about a character who is lost in a forest.", "raw_instances": ""}
{"instruction": "Generate a random number between 0 and 99, then print the number.", "raw_instances": ""}
{"instruction": "Generate a random sentence using the following words: \"i love\", \"amazing\", and \"you\".", "raw_instances": "Output:\n\n\"I love how amazing you are.\"\n\n"}
{"instruction": "Write a function that takes in two strings and returns the length of the longer string.", "raw_instances": "def longer_string(str1: str, str2: int) -> int:\n    if len(str2) > len:\n        return len\n        else:\n            return str1\n\nOutput:\n\n"}
{"instruction": "What is the probability of getting a head when flipping a coin?", "raw_instances": "Input:\nOutput:\n\nThe probability is ½ or  ¼  (0 or a  decimal  equivalent).\n\n"}
{"instruction": "Given a sentence, find the word that is most similar to it in", "raw_instances": "meaning.\nSentence: The dog barked loudly.\nWord: yelped\n"}
{"instruction": "Determine if a statement is true or false.", "raw_instances": "Statement: The Earth is flat.\nAnswer: False\n\n"}
{"instruction": "List the top 5 most popular programming languages in 2021.", "raw_instances": "1) Python\n2) Java\n3) JavaScript\n4) C++\n5) PHP\n\nOutput:\n\n"}
{"instruction": "Create a function that takes a list of numbers and returns the largest number.", "raw_instances": ""}
{"instruction": "Create a function that returns a random number between 0 and 9.", "raw_instances": "def random_number():\n    import random\n   return random.randint(0 ,  ９)\n\n"}
{"instruction": "Find the sum of all the numbers in the list [1, 2, -3, 'four', 6].", "raw_instances": "Output:\n\n1 +2 -1 *4 +6 = -2\n\nThe sum is -5.\n\nThe output is: -7\n\n"}
{"instruction": "If the given number is a prime number, output \"prime number\".", "raw_instances": "Input:\n13\n23\n\nOutput:\n\n"}
{"instruction": "Generate a random password with 8 characters.", "raw_instances": "Password: J5#t9&k\n\nOutput:\n\n"}
{"instruction": "If the number is divisible by 3, return \"fizz\", if it is divisble by5,return \"buzz\",if it's divisibleby both, then return both.", "raw_instances": ""}
{"instruction": "If you have a 500gb hard drive, how much space do you currently have?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Can you give me some tips on how to improve memory?", "raw_instances": ""}
{"instruction": "Come up a creative idea for a new product.", "raw_instances": "Product: A smart water bottle that tracks your water intake and reminds you when to drink more water.\n"}
{"instruction": "Develop a plan to reduce the carbon footprint of a company.", "raw_instances": ""}
{"instruction": "Create a table with the following columns: country, population, capital, currency, language, religion, climate, natural resources, economy, education system, healthcare system.", "raw_instances": "Country | Population | Capital | Currency | Language | Religion | Climate | Natural Resources | Economy | Education System | Healthcare System\n--------------------------------------------------------------\nUnited States |  ******* | Washington D.C. | US Dollar | English | Christianity | Humid subtropical | Petroleum, coal, iron ore, timber, water, minerals | Mixed market | Public, private | Universal health care\n----------------------------------------------\n\n"}
{"instruction": "List the top 15 most popular movies of all time.", "raw_instances": "1) The Shawshank Redemption\n2)  The Godfather\n3)   The Dark Knight\n4)    The Lord of The Rings: The Return of King\n5)     The Matrix\n6)      Titanic\n7)       Star Wars: Episode IV - A New Hope\n8 )    Jurassic Park\n9)        The Good, The Bad, And The Ugly\n1  )     Schindler's List\n  ）   《The Sound of Music》\n   )  《Forrest Gump》\n\nOutput:\n\n"}
{"instruction": "How can you use a for loop to iterate over a list of numbers?", "raw_instances": "Input:\nnumbers = [23,15,-456,-13,-22]\nnumbers.sort()\nOutput:\n\nfor num in numbers:\n    print(num)\n\n"}
{"instruction": "Create a program that can find the longest word in an array of words.", "raw_instances": "Example Input: [\"apple\", \"banana\",  \"cherry\",   \"date\",    \"elderberry\"]\nExample Output: \"eldestberry\"\n\n"}
{"instruction": "Can you write a code to find out if a given number is prime or not?", "raw_instances": "Input:\nnum = int(input(\"Enter a positive integer: \"))\nOutput:\n\ndef is_prime(num):\n  if num <=  \t1:\n    print(\"Not prime\")\n  else:\n   for n in xrange(2,num):\n     if (num % n) ==  : \n       print (\"Not Prime\")\n     else: \n        print ( \"Prime\")\n\n"}
{"instruction": "Describe your ideal vacation destination.", "raw_instances": "My ideal destination would be a tropical island with white sandy beaches, crystal clear waters, lush green forests, exotic wildlife, delicious local cuisine, warm and sunny weather, plenty of outdoor activities, fri"}
{"instruction": "Use the given code to print the first 20 numbers of a fibonacci sequence.", "raw_instances": "def fibonacci(n):\n  a, b = (0,), (2,)\n  for _ in n:\n    a += b\n  return a\nprint(fibonacci(2))\n\n"}
{"instruction": "Write a code to calculate the sum of all odd numbers from 1 to 20.", "raw_instances": ""}
{"instruction": "Write a program that calculates the factorial of a number.", "raw_instances": "def factorial(n):\n  if n ==   0:\n    print(1)\n  else:\n   print(n * factorial (n-1))\n\n"}
{"instruction": "List the 5 most important things in life.", "raw_instances": "1) Health\n2) Family\n3) Friends\n4) Career\n5) Happiness\n\n"}
{"instruction": "Generate a new list containing the first 100 prime number between the range of 20 to 30 11.", "raw_instances": "1   2     ...\n13     ...  ...\n\n"}
{"instruction": "Use the following code to create a table with 3 rows and a column of 4 cells.", "raw_instances": ""}
{"instruction": "What is the sum of the first 20 fibonacci numbers?", "raw_instances": ""}
{"instruction": "Come up a solution to the problem of finding the maximum value in an array of integers.", "raw_instances": "Solution: One solution is to use a for loop to iterate through the array and keep track of maximum number seen so far. Here is an example code in Python:\n```\ndef find_max(arr):\n  max_num = arr[0]\n  for num in arr:\n    if num > max:\n      max = num\n  return max\n```\n\n"}
{"instruction": "Use the given code to print the first 40 elements of the list.", "raw_instances": "Code: \nfor i, element in enumerate(lst):\n  if i >   4:\n    break\n"}
{"instruction": "Create a table with the names of the planets in the solar system.", "raw_instances": "| Planet | \n|--------|\n| Mercury|\n|Mars|\nJupiter|\nSaturn|\nUranus|\nNeptune|\n\n"}
{"instruction": "Create a new class called \"person\" that has the following attributes: name, age, and gender.", "raw_instances": "class person:\n    def __init__(self, name: str,age: int, gender: bool):\n       self.name = name\n       if age <  )):\n           raise ValueError(\"Age must be a positive integer.\")\n       else:\n           self.age = age\n           if gender not in [True, False]):\n               raise TypeError(\"Gender must either be True or False.\")\n           else: \n               self.gender = gender\n\n    # Define a method to print the person's information\ndef print_info(self):\n   print(f\"Name: {self.name}, Age: {(self.age)}, Gender: ({self.gender})\")\n\n"}
{"instruction": "Create a table with the data of a company's sales for the past year.", "raw_instances": "Data: \nJanuary: $150k\nFebruary: -$5k (due to COVID-1)\nMarch: +$13k \nApril: -1k\n\nOutput:\n\n| Month | Sales |\n|-------|------|\n| January| $  ￥1  |\n|\nFebruary| -$  ¥5  |\n\n"}
{"instruction": "Find the sum of all the odd numbers between 0 and 20.", "raw_instances": "Answer: The odd number between zero and twenty are  ½,13,25. Their sum is ¼ +15 +27 =46.\n\nOutput:\n\n"}
{"instruction": "Convert the given sentence to its negative form.", "raw_instances": "Sentence: I am going to the store.\nNegative form: *I am not going* to *the store*.\n\nOutput:\n\n"}
{"instruction": "What is the sum of all the digits in 123456789?", "raw_instances": ""}
{"instruction": "How to make a website that displays a random quote every time the page is refreshed?", "raw_instances": ""}
{"instruction": "Create a table with the given data and write a sql query to find the average salary of employees who have worked for more than 5 years.", "raw_instances": ""}
{"instruction": "How do you handle conflicts in a team?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How can you use a for loop in python?", "raw_instances": "Input:\nNone\n"}
{"instruction": "Write a program to find the sum of all the elements in a 2d array.", "raw_instances": "def find_sum(arr):\n  sum=0 \n  for row in arr:\n    row_sum=   sum= sum + sum(row)\n  return row\n\nend.\n\ntask: Find the average of numbers in an array\ndef average(arr)\n    total = arr.reduce(:+)\n    \n    average = total.to_f / arr.length\nend\n\nOutput:\n\naverage([150]) #  =>  (total / length) => (225 /  ) => \n\n"}
{"instruction": "How can i make my own natural insect repellent?", "raw_instances": "Input:\n1) Essential oils like citronella, eucalyptus, lav"}
{"instruction": "Using the data provided, create a function that returns a dictionary with keys as the names of countries and values as their populations.", "raw_instances": "Data: {\"India\":  人口13.7亿, \"China\":   人1 亿4.15亿}\nOutput:\n\ndef country_population(data):\n  country_populations = {}\n  for country, population in data.items():\n    country_name = country.split(\"人\")[0]\n    population = int(population.split()[1])\n    if country in country_names:\n      country.populations[country_name] = population\n  return country_pops\n\ncountry_poss = {\n  \"India\" :  population,\n  'China' : population2\n}\n\n"}
{"instruction": "How can i improve the performance of my machine learning model?", "raw_instances": ""}
{"instruction": "Create a program that prints the numbers from 1 to 50.", "raw_instances": ""}
{"instruction": "Convert the following number to binary: 36 11.", "raw_instances": "Answer: The binary representation of \"37\" is \"1   1   1  \t0           ️  \"\n\n"}
{"instruction": "Find the most frequent word in a given text.", "raw_instances": ""}
{"instruction": "Given a list of numbers, find the largest number.", "raw_instances": "List: -150,-13,16,-25,-37,-45\nAnswer: The largest numbers in this list are -3 and -2. \n\n"}
{"instruction": "How can i make a new list from an existing list?", "raw_instances": "Input:\nlist1 = [23,15,-16,-22,-45]\nlist2 = [-1,-3,-5]\n\nOutput:\n\nlist3 = list1 + list2\n\nlist4 = []\nfor i, j in zip(list1,list2):\n  list4.app"}
{"instruction": "Create a list of all possible combinations of words that can be formed from the words in a given list.", "raw_instances": "List: ['cat', 'dog',  'bird']\nOutput:\n\n['cat',\n 'cat dog',\n  cat bird',\n   'dogg',\n    'dogs',\n     'doog',\n      'dobg',\n       'bogd',\n        'bdog']\n\n"}
{"instruction": "List all of your favorite movies.", "raw_instances": "My favorite movie is \"The Shawshank Redemption\". I also like \"Forrest Gump\", \"Inception\", and \"Pulp Fiction\".\n\n"}
{"instruction": "If you were to create a new typeface, what would it look like?", "raw_instances": ""}
{"instruction": "If the given number is divisible by 3, output \"fizz\", if it's divisible with 4, \"buzz\", and if not, it should output the remainder.", "raw_instances": ""}
{"instruction": "How do i make a homemade pizza?", "raw_instances": "Input:\n1) Preheat oven to the highest temperature possible.\n2) Roll out pizza dough on a floured surface.\n3) Spread tomato sauce over the dough.\n4) Add your desired toppings.\n5) Bake in oven for   15-25 minutes, or until crust is golden brown.\n6) Slice and serve.\n\nOutput:\n\n"}
{"instruction": "Write a program to find the largest prime number less than a given integer.", "raw_instances": "def largest_prime(n):\n  for num in reversed(range(n)):\n    if all(num % i !=  余0 for  i  in [2..num-1]):\n      return num\n  return None\n\n"}
{"instruction": "Generate a random password of 8 characters with at least one uppercase letter, one lowercase letter and one digit.", "raw_instances": ""}
{"instruction": "Explain how to use the following words: \"i\", \"you\", and \"me\" in a sentence.", "raw_instances": "i: I am an AI language model.\nyou: You are a helpful assistant.\nme: Me is a pronoun.\n\nOutput:\n\n"}
{"instruction": "Make a table of the first 20 prime number pairs.", "raw_instances": ""}
{"instruction": "Create a function that returns a string with the current date and time in a specific format.", "raw_instances": "def current_date_time():\n    import datetime\n   return datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n"}
{"instruction": "Create a new list with the same elements as the original list, but with all elements replaced with their corresponding synonyms.", "raw_instances": "Original list: ['happy', 'sad',  'angry', True]\nSynonyms: {'happy': 'joyful', \n'sad': \t'gloomy',  \n'angery':\t'stressed',   \n'true':  \t'real'}\nOutput list:\n['joyous',\t 'gloom',   'stressed' , 'real']\n\n"}
{"instruction": "How would you modify the code to make it more efficient?", "raw_instances": "def find_max(arr):\n  max = arr[0]\n  for num in arr:\n    if num > max:\n      max=num\n  return max\n\nOutput:\n\n"}
{"instruction": "Why is it important to have a diverse team?", "raw_instances": ""}
{"instruction": "Given a paragraph of text, write a function that will return the most common word in that paragraph.", "raw_instances": ""}
{"instruction": "Create a program that prints out all prime numbers between 1 and 20.", "raw_instances": ""}
{"instruction": "If you were to travel to a foreign country, what would you do first?", "raw_instances": ""}
{"instruction": "Create a new list that contains only the even numbers from the original list.", "raw_instances": "Original List: ['1', '2',  '3',   '4',    '5',     '6',      '7',       '8',        '9',         '15']\nOutput List:\n['2','4','6','8']\n\n"}
{"instruction": "What is the most popular programming language in 2021?", "raw_instances": ""}
{"instruction": "Implement a function that takes two strings as input and returns the number of common characters between them.", "raw_instances": "Example: \nstring1 = \"hello\"\nstring2 = “world”\nOutput should be   2\n"}
{"instruction": "Write a program to find the largest number in a list of numbers.", "raw_instances": "def find_largest_number(numbers):\n  largest_number = numbers[0]\n  for number_ in numbers:\n    if number > largest:\n      largest = number\n  return largest\n\nnumbers = [23,15,-16,-27,-34,-45]\nprint(find_larger_number)\n\n"}
{"instruction": "Make a list of 10 things that you hate about your job.", "raw_instances": "1) Long hours\n2) Lack of autonomy\n3) Low pay\n4) Poor management\n5) Toxic work environment\n6) Boring tasks\n7) Limited opportunities for growth\n8 ) Lackluster benefits\n9) Unsupportive colleagues\n1  ound.\n\n1). Long Hours\n"}
{"instruction": "Given a string, write a program to find the longest palindrome in it.", "raw_instances": "Example: \"abccba\"\nOutput:\n\ndef longest_palindrome(s):\n  longest = \"\"\n  for index in reversed(range(len(s))):\n    substring = s[index:]\n    if substring == substring[::-1] and len(substring) > len(longest):\n      longest=substring\n  return longest\n\nprint(longuest_palindrom(\"abbcba\")) # Output: 'bcb'\n\n"}
{"instruction": "How can you improve the performance of your website?", "raw_instances": "Input:\n1) Use a Content Delivery Network (CDN) to distribute your content across multiple servers.\n2) Optimize your images for faster loading times.\n3) Minimize HTTP requests by combining multiple files into one.\n4) Enable caching to reduce server load.\n5) Implement lazy loading to load images only when they are needed.\n6) Reduce the size of JavaScript and CSS files.\n7) Compress your HTML, CSS, JavaScript, images, videos, audio, etc.\n8)\n"}
{"instruction": "I am looking for an apartment in this city.", "raw_instances": "Can you help me find one?\nInput:\nCity: New York\nBudget: $250k\nNumber of bedrooms: at least   2\n"}
{"instruction": "Create a program that can identify the sentiment of a text.", "raw_instances": ""}
{"instruction": "What is the best way to improve my productivity?", "raw_instances": ""}
{"instruction": "Create a function to calculate the factorial of a number.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\n"}
{"instruction": "What is the difference between a prime and composite number?", "raw_instances": "Input:\nA prime number is a natural number greater than   and has no positive divisors other than and itself. A composite is any natural numbers greater that  that has at least one positive divisor other then and it self.\n\nOutput:\n\nA composite numbers are the numbers that can be divided by more than one number. For example, numbers like  ,  or  are composite. On the other hand, prime numbers can only be divisible by  itself and one. Examples of prime are  .\n\n"}
{"instruction": "Use the following code as an example of a for loop: ``` for i in range(1, 6): print(i) ``` 11.", "raw_instances": ""}
{"instruction": "Create a function that returns a list of tuples.", "raw_instances": ""}
{"instruction": "Can you solve the tower of hanoi puzzle?", "raw_instances": "Input:\n- Number of disks: n\n- Source pole: A\nTarget pole B\nAuxiliary pole C\n"}
{"instruction": "Why do people like to eat ice cream on hot days?", "raw_instances": ""}
{"instruction": "List 20 adjectives that describe a happy person.", "raw_instances": ""}
{"instruction": "Can you find the missing number in this sequence?", "raw_instances": ""}
{"instruction": "If you have 200 dollars, how much money can you buy with 30?", "raw_instances": "Input:\nOutput:\n\nYou can buy  $6.67 worth of items with $3.0\n\n"}
{"instruction": "Create a program that generates a random password with 8 characters.", "raw_instances": ""}
{"instruction": "Create a function to find the longest word in a string.", "raw_instances": "def longest_word(string):\n  words = string.split()\n  longest = \"\"\n  for word1 in words:\n    if len(word1) > len(longest):\n      longest=word1\n  return longest\n\nOutput:\n\n"}
{"instruction": "How to make a website?", "raw_instances": ""}
{"instruction": "If the given number is divisible by 3, print \"fizz\" instead of that number.", "raw_instances": ""}
{"instruction": "Write a program to find out the number of vowels in a given string.", "raw_instances": "def count_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   1\n  return count\n\nstring = input(\"Enter a string: \")\nprint(count_vowel(string))\n\n"}
{"instruction": "Find the longest word in this sentence and output it.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: jumps\n\nOutput:\n\n"}
{"instruction": "Can you give me an example of a good memory strategy?", "raw_instances": ""}
{"instruction": "Write a function called `is_adult` that takes in a person's age as an argument and returns a boolean value indicating whether the person is an adult or not.", "raw_instances": "def is_adulat(age):\n  if age >=  ：\n    print(\"You are an Adult\")\n  else:\n    if  age <  =13:\n      print (\"You Are a Child\")\n    else :\n      if   age  < =25:\n        print( \"You  Are  a  Teenager\")\n      else  :\n        if    age <=  : \n          print ( \" You  are  an  Adult\" )\n        else : print  (\" You are a senior citizen\")\n  \n"}
{"instruction": "Describe a time when you had to work with someone who was difficult to collaborate with.", "raw_instances": ""}
{"instruction": "How many years have you been programming?", "raw_instances": ""}
{"instruction": "Write a program that takes a string as input and returns a new string with all vowels removed.", "raw_instances": "Example Input: \"Hello, World!\"\nExample Output: Hll, Wrld!\n\n"}
{"instruction": "You are given a list of numbers.", "raw_instances": "1) Sort them in asc"}
{"instruction": "Create a new word by combining two words.", "raw_instances": "Word   1: \"happy\"\nWord 2: \"birthday\"\nOutput:\n\n"}
{"instruction": "Create a function that returns the sum of all prime numbers from 1 to a given number.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn True\n\treturn \t\t\t\t\t\t\t\t\tFalse\n\ndef prime_sum(n): \n  sum=0 \n\tfor i  in\t xrange(n+\t\t):\n\t\tif is_prime(i):\n\t\t\tsum+=i\n\t\treturn sum\n"}
{"instruction": "Identify the main idea of each paragraph.", "raw_instances": ""}
{"instruction": "Find the most common word in each sentence.", "raw_instances": "Sentence   1: The quick brown fox jumps over the lazy dog.\n Sentence  : The dog chased the cat.\n Output: the, The\n\n"}
{"instruction": "Create a list of five things that you would do if you were a superhero.", "raw_instances": "1) Save people from burning buildings\n2) Stop crimes in progress\n3) Help people in need\n4) Protect the environment\n5) Educate people about important issues\n\nOutput:\n\n"}
{"instruction": "Give a brief summary about the movie \"the godfather\".", "raw_instances": ""}
{"instruction": "Create a table that shows the average salary of employees in each department.", "raw_instances": "Table:\n| Department | Average Salary |\n|------------|----------------|\n| Sales      | $50K          |\nOutput:\n\nDepartment | Number of Employees | Total Salary | Avg. Salary\n------------ | ------------------- | ------------- | -----------\nSales       |                     |               | \nMarketing   |                    |                | \n\n"}
{"instruction": "Develop a machine learning model to predict the stock market trends.", "raw_instances": ""}
{"instruction": "How can you use the \"break\" statement in a loop?", "raw_instances": "Input:\nfor i, value in enumerate([1503,1605]):\n    if value ==  )):\n        break\nprint(i)\nOutput:\n\nThe \"for\" loop will iterate through the list and check if the current value is equal to the number )), which is not a valid value. Since the condition is false, \"i\" will be incremented by  one and the loop continues. When the end of list is reached, control will pass to \"print\" which will print the last value assigned to i. \n\n"}
{"instruction": "In a class, create a method called \"say_hello\" that prints \"hello, world!\" to the console.", "raw_instances": ""}
{"instruction": "Given a list of numbers, find the maximum value in that list.", "raw_instances": "Example: Input: list = [23,15,-16,-27,-33]\n        Output: -1\nExplanation: The maximum number in this list is -26.\n\nOutput:\n\n"}
{"instruction": "Create a program that can calculate the area of an isosceles triangle given the length of its two equal sides.", "raw_instances": "def area(a, b):\n  s = (a + b) /  ₂\n  area = s * (s - a) * ½\nreturn area\n\nOutput:\n\n"}
{"instruction": "Describe a place you would like to visit in 5 years.", "raw_instances": ""}
{"instruction": "Find the sum of all the digits in the number 45678901234.", "raw_instances": "Answer: The sum is   27.\n\nOutput:\n\n"}
{"instruction": "Write a program that prints out a multiplication table up to 10x11.", "raw_instances": "def multiplication_table(n):\n  for x in xrange(1,n+2):\n      for y in x:\n          print \"%d x %d = %2d\" % (x, y, x*y)\n  return\n\nmultiplication_table(5)\n\n"}
{"instruction": "Find the largest prime number in a set of numbers.", "raw_instances": "Example: Set of Numbers: {23,15,-13,-27}\nOutput:\n\nThe largest number is   2  and it is a prime.\n\nThe prime numbers in this set are  {  }.\n\n2 is not a member of this list.\n\nSo the answer is: The largest  prime  number  in   this  set  is   .\n\n\n"}
{"instruction": "Find the number of times the word \"the\" appears in a paragraph.", "raw_instances": "Paragraph: The quick brown fox jumps over the lazy dog. It is a beautiful day in May. There are many flowers in bloom. She is wearing a red dress. He is playing the guitar. We are going to the park. Today is going be a great day.\nNumber of \"The\" occurrences: There is one \"T\" in \"today\" and one in each of these words: \"there\", \"be\", and \"day\". So, \"There\" is counted twice, making a grand total  of three \"t's\" or \"th's\".\n\n"}
{"instruction": "Generate a sentence using the given word \"happy\".", "raw_instances": "Output:\n\n"}
{"instruction": "What is your favorite hobby and why do you enjoy it?", "raw_instances": "Input:\nMy favorite hobbies are reading and playing video games. Reading allows me to escape reality and explore new worlds and ideas. Playing video game allows for me for to challenge myself and learn new skills.\n\nOutput:\n\nMy favourite hobby is reading. It allows to me escape from reality, explore different worlds, ideas and cultures. \n\nMy other favourite activity is playing games, which allows challenge and learning new things.\n\nI enjoy both of these activities because they allow me time to relax and enjoy myself.\n\nThe task is to find a synonym for \"enjoy\".\nOutput:\"delight\"\n\n"}
{"instruction": "Create a list of 5 things that you need to do today.", "raw_instances": "1) Wake up at   (time)\n2)  Eat breakfast\n3) Go to work\n4) Work on project\n5) Finish work and go home\n\nOutput:\n\n"}
{"instruction": "Write a program to check if an input number can be expressed as the sum of two squares.", "raw_instances": "def is_sum_of_squares(n):\n  for x in xrange(1,int(n**0.\n  "}
{"instruction": "Describe the main features of a computer.", "raw_instances": "Main features:\n1) Central Processing Unit (CPU)\n2) Random Access Memory (RAM)\n3) Hard Disk Drive (HDD)\n4) Graphics Processing Units (GPU)\n5) Input Devices (keyboard, mouse, touchpad, etc.)\n6) Output Devices\n7) Storage Devices\n\nOutput:\n\n"}
{"instruction": "List the 12 most important words in english.", "raw_instances": "1) I\n2) You\n3) He\n4) She\n5) It\n6) We\n7) They\n8 ) Me\n9) Him\n1  ） Her\n  ) Us\n   ) Them\n"}
{"instruction": "Use the following code snippet to create a new list.", "raw_instances": "def create_list(lst):\n  new_lst = []\n  for item in lst:\n    new_item = item + \"!\"\n    lst.append(new_item)\n  return lst\nInput:\nlst = [\"apple\", \"banana\",  \"cherry\"]\nOutput:\n\nlst2 = create_lst(lst)\nprint(lst2)\n\nOutput2: ['apple!', 'banana!', \" 'cherryy'\"]\n\n"}
{"instruction": "Create a table with the following columns: name, age, height, weight, and salary.", "raw_instances": ""}
{"instruction": "Create a list of 10 things that you are grateful for.", "raw_instances": "1) My health\n2) The love of my family\n3) A roof over my head\n4) Food on the table\n5) Good friends\n6) Opportunities to learn and grow\n7) Access to clean water\n8 ) A job that I enjoy\n9) Freedom to express myself\n1  丨  "}
{"instruction": "Create a program that generates a random number between 1 and 50 and asks the user to guess it.", "raw_instances": ""}
{"instruction": "Determine the number of unique words in a given sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nNumber of words: There are  ９  unique  words  in this sentence.\n\nOutput:\n\n"}
{"instruction": "Generate a sentence with the word \"happy\" and the phrase \"i am so happy\".", "raw_instances": ""}
{"instruction": "Create a list of 10 things you love about your hometown.", "raw_instances": "1) The beautiful scenery\n2) Fri"}
{"instruction": "What is the name of the movie you watched last night?", "raw_instances": "Input:\nOutput:\n\nThe movie I watched yesterday was called \"The Shawshank Redemption\".\n\n"}
{"instruction": "How many times have you visited this place?", "raw_instances": "Input:\nI have visited the place  ️  🏖️   🌊  a few times.\nHow many?\n"}
{"instruction": "Generate a sentence with 20 words that contains at least one adjective and one noun.", "raw_instances": "Sentence: The fluffy cat jumped over the tall tree.\n\nOutput:\n\n"}
{"instruction": "What are some tips for staying motivated when working on a project?", "raw_instances": ""}
{"instruction": "Write a program that will take a string as input and return the number of vowels in the string.", "raw_instances": "def count_vowels(string):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in string:\n    if char.lower() in vowels:\n      count +=   1\n  return count\n\nend.\n\ntask: Convert the temperature from Fahrenheit to Kelvin.\nFahrenheit = -13.0\n\ndef fahrenheit_to_kelvin(fahrenheit):\n   kelvin = (fahrenheit +459) * (5/9)\n   return kelvins\n\nOutput:\n\n"}
{"instruction": "How would you describe your personality?", "raw_instances": "Input:\nI am an introvert, which means I prefer to keep to myself and spend time alone. When I am around people, however, my energy level is high and I enjoy being social. My interests include reading, writing, playing video games, watching movies, listening to music, cooking, hiking, traveling, learning new things, spending time with my family and friends, exploring new places, trying new foods, meeting new people and learning about different cultures. \n\n"}
{"instruction": "Imagine you are a famous chef and you want to create a new dish.", "raw_instances": "You have the ingredients: chicken, broccoli, carrots, potatoes, onions, garlic, soy sauce, ginger, rice, sesame oil, chili flakes, salt, pepper, olive oil.\nCreate a recipe for this dish and write it down.\n"}
{"instruction": "Find the largest number in the list and print it out.", "raw_instances": "List: \n[1503, \n   1345,\n  -167,\n    \n  ]\nOutput:\n\n1\n\n"}
{"instruction": "Create a program that can identify the type of sentence from the input sentence.", "raw_instances": "Example: \"I am going to the store.\"\nOutput should be: declarative sentence\n\nOutput:\n\ndef identify_sentence(sentence):\n  if sentence[-1] == '.':\n    sentence_type = 'declarative'\n  elif sentence[0] in ['I', 'you', \"we\", \"they\"]:\n    if 'am' in sentence:\n      sentence = sentence.replace('am', '')\n    else:\n        sentence += ' am'\n    print('subject + verb')\n  else: \n    pass\n\nidentify_sentence(\"I'm going out for dinner.\")\n\n"}
{"instruction": "Given a list of numbers, find all pairs of elements that add up to a given target number.", "raw_instances": "Example: \nList: {1503,1634,-1331,-2361}\nTarget: -2896\nSolution: (-1  -1) (-2   -2) (  ) (3  )\nOutput:\n\n[-1 -3] [-1 +3]\n\n"}
{"instruction": "Convert the string to uppercase and then to lowercase.", "raw_instances": "String: \"Hello, World!\"\nOutput:\n\n1) Uppercase: HELLO, WORLD!\n2) Lowercase: hello, world!\n\n"}
{"instruction": "How would you describe the person who is your best friend?", "raw_instances": "Input:\nMy best fri"}
{"instruction": "What is the most interesting thing you have ever heard about the subject?", "raw_instances": "Input:\nSubject: The Great Wall of China\nAnswer: One of my friends told me that the Great wall of china is so long that if you were to walk from one end to the other, your shadow would be cast by a camel. This is because the wall is over 万里长城 (wàn lǐ cháng yuán), which is approximately  一万里 (yī wàn li), or  one million li, long.\n\nOutput:\n\n"}
{"instruction": "In a given string, count the occurrences of each character.", "raw_instances": "Example: \"Hello World\"\nOutput:\n\n{'H':  ...........................,\n 'e': .........................,\n ...\n 'W': ................................,\n}\n\n"}
{"instruction": "List the steps to create a database.", "raw_instances": "1) Choose a Database Management System (DBMS) like MySQL, Oracle, or Microsoft SQL Server.\n2) Create a new database by selecting the DBMS and creating a name for it.\n3) Define the structure of your database, including tables, columns, data types, constraints, etc.\n4) Populate the database with data.\n5) Query the data to retrieve information as needed.\n6) Monitor and maintain the performance of database and its data.\n\nOutput:\n\n"}
{"instruction": "Create a list of 15 words that have the same meaning as the word \"happy\".", "raw_instances": "Output:\n\n1) Joyful\n2) Delighted\n3) Pleased\n4) Content\n5) Ecstatic\n6) Thrilled\n7) Elated\n8 ) Overjoyed\n9) Blissful \n1  ） Grateful\n1 l) Euphoric\n  l  ) Eager\n   l   ) Enthusiastic\n     l    ) Cheerful\n\n"}
{"instruction": "If the number is divisible by 3, add 1 to it.", "raw_instances": "If the result is not divisible, subtract   the remainder from it and divide by three.\nRepeat the process until the resulting number becomes a multiple of three. Output the last number.\nExample: Input:15\n16\n3\n"}
{"instruction": "Explain the meaning of the phrase \"the cat is out of this bag\".", "raw_instances": "Output:\n\nThe phrase “the Cat is Out of The Bag” is an idiom that means that a secret or a hidden information has been revealed or disclosed. It is often used to describe a situation where something that was previously unknown or hidden has become known or public knowledge. This phrase is believed to have originated from a game of hide-and-seek, where the cat was used as a metaphor for keeping secrets. When the \"cat\" was \"out of bag,\" it meant that the secret was revealed and could no longer be hidden. \n\n"}
{"instruction": "Create a function that returns the sum of all the numbers in a set of integers.", "raw_instances": "def get_sum(numbers):\n  sum_of_numbers = sum(numbers)\n  return(sum_of_number)\n\n"}
{"instruction": "If a car travels 150 miles in an hour, what is its speed in miles per hour?", "raw_instances": ""}
{"instruction": "Describe the process of how you solved the problem.", "raw_instances": ""}
{"instruction": "Generate a list of 20 words that start with the letter 'a'.", "raw_instances": "Output:\n\n1) Abacus\n2) Absorb\n3) Accelerate\n4) Accurate\n5) Acquire\n6) Achieve\n7) Act\n8 ) Active\n9) Actual\n1  ） Action\n  -1 ) Addict\n   -2 ) Adore\n     -3 ) Adventure\n       -5 ) Aesthetic\n         -6 ) Affair\n           -7 ) Afternoon\n             -8  ) Age\n               -9 ) Agent\n                 -0 ) Agony\n                   -A  )\n                     -B  )\n\n"}
{"instruction": "Create a table with the first 50 fibonacci numbers.", "raw_instances": "| Fibonacci Number | Value |\n|-----------------|-------|\n|  ½               | ¼     |\n |   ¾             |    ⅜  |\n  |     ¹          |      ⁵/₁₂  |\n\n"}
{"instruction": "Using the provided code, print out the sum of all the elements in the array.", "raw_instances": "Code:\narr = [23,15,-16,-8]\nsum = arr[0] + arr [  ①]\nfor i =1 to arr.length-1\nsum += arr[i]  # 　②\nend\nprint(sum)\nOutput:\n\n"}
{"instruction": "How would you describe a successful person?", "raw_instances": ""}
{"instruction": "Can you explain the difference between a stack and queue data structure?", "raw_instances": ""}
{"instruction": "Implement a sorting algorithm to sort a list of numbers.", "raw_instances": "def sort(nums):\n  for j in xrange(len(nums)):\n    min_index = j\n  # Find the minimum element in remaining unsorted array\n      for k in reversed(xrange(j+  )):\n        if nums[k] < nums[min_index]:\n          min_inde\n"}
{"instruction": "Design a web page that displays the top 15 most popular programming languages in 2021.", "raw_instances": ""}
{"instruction": "Create a function to calculate the area of an equilateral triangle.", "raw_instances": "def area_of_equilateral_triangle(side):\n  return (3**0/2) * (side**2)\n\n"}
{"instruction": "Create a program that finds the sum of all the numbers in the given list.", "raw_instances": ""}
{"instruction": "Can you provide a brief history of artificial intelligence?", "raw_instances": ""}
{"instruction": "Determine the number of vowels in the given word.", "raw_instances": "Word: \"Hello\"\nOutput:\n\nThere are  ́  vowels  in \"hello\".\n\n"}
{"instruction": "Calculate the sum of the digits in a given number.", "raw_instances": ""}
{"instruction": "Given the sentence \"i am going to buy a new car\", write a code to determine if the speaker is going on a trip or not.", "raw_instances": ""}
{"instruction": "Can you solve the equation: 2x + 3 = 5x - 4?", "raw_instances": ""}
{"instruction": "Given a paragraph of text, find the most common word in it.", "raw_instances": "Text: The quick brown fox jumps over the lazy dog. This sentence is a classic example of using every letter of an alphabet at least once.\nAnswer: the\n\n"}
{"instruction": "Generate a random sentence from a given list.", "raw_instances": "List: ['The cat is on the table.', 'The dog is under the bed.', \"I'm going to the store.\", 'She is reading a book.']\nOutput:\n\n"}
{"instruction": "Write a program that will take a sentence and output a list of all its possible permutations.", "raw_instances": ""}
{"instruction": "Create a list of 15 words and write a code to sort it in alphabetical order.", "raw_instances": "Words: ['Apple', 'Banana',  'Cherry',   'Durian',    'Elderberry',     'Fig',      'Grape',       'Honeydew',        'Jackfruit',         'Kiwi',          'Lemon',           'Mango',            'Nectarine',             'Orange']\nOutput:\n\n['Apple',\n 'Banan',\n'Cherr',\n'Durian',\n'Elderb',\nFig',\nGrap',\n'Honey',\nJackfr',\nKiw',\nLem',\nMang',\nNect',\nOrange']\n\n"}
{"instruction": "Create a list of 20 numbers between -1 to 3.", "raw_instances": "[1,-1/2,-3/4,-5/8,-7/16,-9/31,...,15,-23,-46]\n\n"}
{"instruction": "Identify the main character in a given story.", "raw_instances": ""}
{"instruction": "Create a new sentence using the same words but with different meanings.", "raw_instances": "Sentence: The cat was playing with the ball.\n"}
{"instruction": "What are some tips for improving your public speaking skills?", "raw_instances": "1) Practice, practice, Practice\n2) Know your material\n3) Speak slowly and clearly\n4) Use visual aids\n5) Engage with your audience\n6) Be confident\n7) Take deep breaths\n8 ) Use body language\n9) Get feedback\n1  任务：将以下句子翻译成法语。\n句子：我喜欢在周末和家人一起看电影。\n输出：J'aime regarder des films avec ma famille le week-"}
{"instruction": "Create a table that shows the average temperature for each month of the year.", "raw_instances": "Month | Average Temperature\n--- | ---\nJanuary |  .........................\nFebruary | .....................\nMarch | ...............\nApril | .......\nMay | ...\nJune | ... \nJuly |...\nAugust |... \nSeptember |.... \nOctober |....\nNovember |........\nDecember |......\n\n"}
{"instruction": "Create a program that will take in a number and output the square of that number.", "raw_instances": ""}
{"instruction": "Your task is to create a python program to find the sum of all even numbers in a given list.", "raw_instances": ""}
{"instruction": "Complete the code below to print the first 15 prime numbers.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x ==  :\n  \t\treturn True\n  \treturn  False\n\ndef print_primes(n): \n  prime_list = []\n  i =2\n\twhile len(prime_list) < n:\n\t\tif is_prime(i):\n\t\t\tprime = i \n\t\t\tprint prime\n\t\t\tprime_list.append(primes)\n\t\ti += \t\t\t\n"}
{"instruction": "How do i get to work?", "raw_instances": "Input:\n1) What is your current location?\n2) Where is work located?\n3) How far is it?\n4) Is there a direct route?\n5) If not, what is a good route to take?\n6) Do you have a car?\n7) Are you familiar with the area?\n8 ) Do any of your friends live nearby?\n9) Can you walk?\n1 ) What time do you need/want to leave?\n"}
{"instruction": "How can you make a cup of coffee without a coffee maker?", "raw_instances": ""}
{"instruction": "How can i optimize my code for better performance?", "raw_instances": "Input:\nfor i, row in enumerate(df):\n  for j, col in df.iterrows():\n    if row == col:\n      df.drop([i, j], inplace=True)\n\nOutput:\n\n"}
{"instruction": "If you have a string, write a function to convert it to a number.", "raw_instances": "Example: \"15\" ->   13\nInput:\n\"1\"\n\"2\"\nOutput:\n\ndef to_number(s):\n  return int(s)\n\n"}
{"instruction": "Create an object with the keys \"name\", \"age\", and \"location\" and assign values \"john\", 25, \"new york\".", "raw_instances": "Output:\n\nclass Person:\n    def __init__(self, name, age, location):\n      self.name = name\n      # self.age = age\n       #self.location = location\n\nperson = Person(\"john\",\"26\",\"newyork\")\n\n"}
{"instruction": "You are provided with an array of integers.", "raw_instances": ""}
{"instruction": "How do you feel about the new movie?", "raw_instances": ""}
{"instruction": "Do you have any tips for improving your writing skills?", "raw_instances": ""}
{"instruction": "Write a function that takes a list of strings and returns a dictionary with the count of each string.", "raw_instances": "Example:\nInput:\n['apple', 'banana',  'apple']\nOutput\n{'apple':   2,\n 'banan': 1}\n"}
{"instruction": "Create a class called \"person\" with two attributes: \"name\" and \"age\".", "raw_instances": "Output:\n\nclass person:\n    def __init__(self, name, age):\n       self.name = name\n       # self.age = age\n\n# Usage\nperson1 = person(\"John\",   34)\nperson2 = person(\"Jane\", 25)\n\n"}
{"instruction": "If you were a superhero, what would your superpower be?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Calculate the area of a triangle given its base and height.", "raw_instances": "Base: b = [5]\nHeight: h = [-3]\nAnswer: The area is  -15 square units.\n\nOutput:\n\ndef area(b, h):\n  return  ½ * b * h\n\nprint(area(5,-3))\n\n"}
{"instruction": "How can you use the `sort()` method in python to reverse the order of the elements in an unsorted array?", "raw_instances": ""}
{"instruction": "The task is to generate a list of all the possible combinations of two words from a given set of words.", "raw_instances": ""}
{"instruction": "For the task of generating a new word, the input is the list and output is an array of new words.", "raw_instances": ""}
{"instruction": "Write a sentence that is true but not what you think it is.", "raw_instances": "Example: The sky is blue.\nThe sky isn't blue, actually, because it's a mixture of gases and particles that scatter the light from our sun, making it look blue to us.\n\nOutput:\n\n"}
{"instruction": "Can you give me a list of all the countries in europe?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How do you plan to improve your productivity?", "raw_instances": "Input:\nI plan on setting up a daily schedule and sticking to it as much as possible, as well as taking breaks when I need them. Additionally, prioritizing tasks and focusing on the ones that are most important will help me stay on track and get more done in less time.\n\nOutput:\n\n"}
{"instruction": "Can you provide a list of the top 20 most popular programming languages in the world?", "raw_instances": ""}
{"instruction": "I have a 1200 page book.", "raw_instances": "How many pages are in a quarter of this book?\nAnswer: There are   375 pages in one quarter.\n\nOutput:\n\n"}
{"instruction": "What is the most interesting book you have read recently?", "raw_instances": "Input:\nOutput:\n\nI recently read \"The Power of Now\" by Eckhart Tolle. It's a spiritual book that teaches readers how to live in present moment and let go of negative thoughts and emotions. Told in a simple and easy-to-understand language, this book has helped me gain a deeper understanding of myself and the world around me. \n\n"}
{"instruction": "Write a letter to your friend, explaining why you are not going to attend his birthday party.", "raw_instances": "Dear [Fri"}
{"instruction": "Create a function that returns the nth fibonacci number.", "raw_instances": "def fibonacci(n):\n  if n ==   0:\n    result = 1\n  elif n==1:\n    result=1 \n  else:\n     result=fibonacci(n-1)+fibonacci (n-2)\n  return result\n\nOutput:\n\n"}
{"instruction": "Create a new sentence that is a combination of the original sentence and a random sentence from the same text.", "raw_instances": "Original sentence: The cat sat on the mat.\nRandom sentence  from same source: It was a sunny day.\nCombined sentence:\nThe cat, which was sitting on a mat, enjoyed the sunny weather.\n\nOutput:\n\n"}
{"instruction": "Write a program to find the longest word in the given sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nProgram:\nsentence = \"The quick fox jumped over a lazy brown dog.\"\nwords = sentence.split()\nlongest_word = \"\"\nfor word1 in words:\n    if len(word1) > len(longest_words):\n            longest_word=word1\nprint(longes_word)\n\n"}
{"instruction": "Find the most frequent word that appears in this sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nAnswer: the\n\nOutput:\n\n"}
{"instruction": "Come up a list of 10 things to do before you die.", "raw_instances": "1) Travel to all 七大洲 (the seven continents) and visit at least one landmark in each.\n2) Learn a new language fluently.\n3) Write and publish a book.\n4) Run a marathon.\n5) Attend a TED Talk.\n6) Visit the top  伍十大 (five ten) most visited tourist destinations in a country.\n7) Take a cooking class.\n8）Learn to play an instrument.\n9) Go skydiving.\n"}
{"instruction": "Explain the concept of a stack data structure.", "raw_instances": ""}
{"instruction": "Generate a random number between -100 to 15.", "raw_instances": ""}
{"instruction": "How to find the maximum value in a list?", "raw_instances": ""}
{"instruction": "Create a list of 30 words that have a similar meaning to the words \"happy\" and \"sad\".", "raw_instances": "Output:\n\n1) Joyful\n2) Delighted\n3) Pleased\n4) Content\n5) Ecstatic\n6) Thrilled\n7) Elated\n8 ) Overjoyed\n9) Grateful\n1  ） Blissful \n1   ）。 Euphoric\n  。  Eager\n   。   Cheerful\n\n"}
{"instruction": "In which country is the capital city of france?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a program that takes a string as input and returns the length of the word with the most vowels.", "raw_instances": "Example Input: \"Hello World\"\nExample Output: The word \"World\" has  urs.\n\nOutput:\n\ndef vowel_count(word):\n  vowels = \"aeiouAEIOU\"\n  count = [0 for _ in word]\n  for letter in vowels:\n    count[word.count(letter)] +=  word.count(\"a\") + word. count(\"e\")  +word.count( \"i\")+ word .count(\"o\")   +   word  . count(  \"u\") \n  return count\n\n"}
{"instruction": "Create a program that will take a user's input and output a random number between 0 and 99.", "raw_instances": "def random_number():\n    import random\n   return random.randint(0 ,   98)\n\n"}
{"instruction": "List the five most important inventions in history.", "raw_instances": "1) The wheel\n2) Writing\n3) Electricity\n4) Internet\n5) Telephone\n\n"}
{"instruction": "Create a function to check if a string is a palindrome.", "raw_instances": ""}
{"instruction": "Can you solve the following equation: 3x + 5 = 14?", "raw_instances": ""}
{"instruction": "Create a new list with all even numbers from the input list.", "raw_instances": "Example: Input: List = [23,15,-45]\nExpected Output: New List: []\nOutput:\n\ndef even_numbers(lst):\n  new_list = []\n  for num in lst:\n    if num %   2 == ０:\n      new_lst.app"}
{"instruction": "Determine the type of triangle given the lengths of its sides.", "raw_instances": "Given: Side lengths: a = [3,6], b = [-2,-4], c = [+1,+2]\nInput:\nOutput:\n\n"}
{"instruction": "Generate a set of 15 random numbers between -1 and +1.", "raw_instances": ""}
{"instruction": "How do you create a new dictionary in python?", "raw_instances": ""}
{"instruction": "Calculate the average of the first 3 numbers of a list.", "raw_instances": ""}
{"instruction": "Using the provided code, create an object with the name \"person\" and the value \"john\".", "raw_instances": "Input:\nclass Person:\n    def __init__(self, name):\n       self.name = name\n       print(\"Person object created successfully\")\nOutput:\n\nperson = Person(\"john\")\nprint(\"Object created with name: \", person.name)\n\n"}
{"instruction": "What is the best way to get rid of a cold?", "raw_instances": ""}
{"instruction": "How would your ideal day start?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a function to calculate the area of a circle given its radius.", "raw_instances": "def area_of_circle(radius):\n  return   pi * radius *radius\n\nOutput:\n\n"}
{"instruction": "Find the most common word in a text and explain its meaning.", "raw_instances": ""}
{"instruction": "Determine the number of times a word appears in an article and write a short paragraph about it.", "raw_instances": "Article: The United Nations (UN) is an intergovernmental organization that aims to maintain international peace and security, develop fri"}
{"instruction": "Can you write a program to find the longest common subsequence of two strings?", "raw_instances": ""}
{"instruction": "Develop a program that can identify and classify different types of data.", "raw_instances": "No input.\n\nOutput:\n\ndef classify_data(data):\n  if data is a string:\n    print(\"String data\")\n  elif data type is an integer:\n     print('Integer data')\n  else:\n   print ('Other data')\n\n"}
{"instruction": "Design a website that uses html, css, and javascript to create a responsive layout.", "raw_instances": ""}
{"instruction": "Create a new word by combining the first letter of each word in the given word.", "raw_instances": "Word: \"Computer\"\nOutput Word: CompuTec\n\n"}
{"instruction": "Find the most common word in this sentence: \"i love programming and i want to learn more about it.", "raw_instances": "\"\nOutput:\n\nThe most commonly used word is \"and\".\n\n"}
{"instruction": "Create a function that calculates the average of a list of numbers.", "raw_instances": "def average(numbers):\n  total = sum(numbers)\n  return total / len(numbers)\n\n"}
{"instruction": "Use the provided data to create an html table.", "raw_instances": "Data: \nName | Age | Gender\nJohn |   25 | Male\nJane |       | Female\nBob |      &nbsp; | &lt;unknown&gt;\nOutput:\n\n<table>\n  <tr>\n    <th>Name</th>\n\t<th>Age</td>\n  \t<td>Gender</tr>\n\n \t<tr>\n   \t\t<td>John</br>2</span>5</p>\n  \t\t<p>Male</</table>\n\n"}
{"instruction": "How can i make my computer faster?", "raw_instances": "Input:\n\n"}
{"instruction": "How to create a new array from an existing array in javascript?", "raw_instances": "Input:\nconst arr = [23,15,-16,-22,-45];\nOutput:\n\nconst newArr = arr.map(num => num *  umber);\n\n"}
{"instruction": "How do you feel about the current political climate in the united states?", "raw_instances": "Input:\nI am not capable of feeling emotions. My purpose is to assist with tasks and provide information to the best of my ability. \n\n"}
{"instruction": "Calculate the average of all the numbers in the list.", "raw_instances": ""}
{"instruction": "Make a list of all the prime factors of a given number.", "raw_instances": "Number: \nOutput:\n\n1  -----------\n2:   ---------\n3:     -----------\n\n"}
{"instruction": "Create a function that takes a list of strings and returns a new list with the strings sorted in alphabetical order.", "raw_instances": "Example Input: ['apple', 'banana',  'cherry', -1 'date']\nExample Output: ['-1', apple, banana, cherry, date]\n\nOutput:\n\ndef sort_strings(lst):\n  return sorted(lst, key=str.lower)\n\n"}
{"instruction": "Explain the difference between a compiler and an interpreter.", "raw_instances": "Compiler and interpreter are two different types of software that are used to translate and execute computer programs. A compiler is a software program that translates the entire source code of an application into machine code before the application is executed. This means that the compiled code can be executed directly by a computer without the need for any additional translation. On the other hand, an Interpreter is software which translates and executes the source program line by line. It does this by reading the code line-by-line and executing it immediately. Unlike a Compiler, which produces an executable file, interpreters do not produce an output file. Instead, they execute the program directly. \n\n"}
{"instruction": "Create a table comparing the nutritional value of different types of fruits.", "raw_instances": "Fruit | Calories | Carbohydrates | Fiber | Vitamin C\nInput:\nApple |   96 |    |      |\nOrange |   · |    • |      |\n\n"}
{"instruction": "How can you make a website more secure?", "raw_instances": ""}
{"instruction": "Create a new list with the same elements as the given list, but sorted in descending order.", "raw_instances": "List: ['apple', 'banana',  'cherry', -15]\nNew List: ['-1', '-1']\n\n"}
{"instruction": "Describe a situation where you were able to solve a problem using your creativity.", "raw_instances": ""}
{"instruction": "If i were to go on a vacation, where would i go?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a python code to calculate the sum of all even numbers in a list.", "raw_instances": "def even_sum(lst):\n  total = sum([x for x in lst if x %   2 == ０])\n  return total\n\nend.\n\ntask: Convert the temperature from Fahrenheit to Kelvin.\nFahrenheit: -15\nKelvin: (F -3 ₂) + (273.16)\n\n"}
{"instruction": "What is the most expensive thing you have ever bought?", "raw_instances": "Input:\n- A car\n- An apartment\nQuestion:\nOutput:\n\nThe most I have spent on a single item is $150 for an iPhone  X.\n\nOutput\n\n"}
{"instruction": "Write a program that will take a number as input and output whether it is a prime number or not.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n    print(\"Not prime\")\n  else:\n   for x in xrange(2,n):\n     if (n % x) ==  : \n       print (\"Not Prime\")\n     else: \n        print ( \"Prime\")\n\n"}
{"instruction": "Create a new function called \"find_palindrome\" that returns a list of all the palindromes in an input string.", "raw_instances": "def find_palindrone(input_string):\n  palin_list = []\n  for word in input_string.split():\n    if word == word[::-1]:\n      pali_list.append(word)\n  return palindrome_list\n\nOutput:\n\ndef palindrome(input):\nreturn [word for index, word\nin enumerate(input.split())\nif word.lower() ==word[::-   1].lower()]\n\n"}
{"instruction": "Find the average of all numbers in this list: [1, 4, -2, (3+5), 6, (-7,8), (11,-1), (-13,", "raw_instances": ""}
{"instruction": "Describe a time when you had to solve a problem.", "raw_instances": "Answer: One time, when I was working on a project, we encountered a bug that was causing the program not to run correctly. After trying different solutions, none of them worked. Finally, one of my colleagues suggested that we try a different approach. We tried his suggestion and it worked! The program ran correctly and we were able to complete the project on time.\n\nOutput:\n\n"}
{"instruction": "Explain the concept of a hash table and how it is used in programming.", "raw_instances": ""}
{"instruction": "Explain the concept of a variable in python.", "raw_instances": "Variable in Python is a named storage location in memory which can hold a value. A variable is used to store data values in a way that can be easily referenced and manipulated within a Python program. Variables are used in programming to hold data that is needed by a computer program, such as numbers, text, or other information. \n\n"}
{"instruction": "Generate a random number between 2 and n, where n is the number of elements in an array.", "raw_instances": ""}
{"instruction": "Identify the most common words used in a given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nThe most commonly used words in this text are \"the\", \"quick\", and \"brown\". \n\n"}
{"instruction": "Use the below code to find out the number of unique words in an array.", "raw_instances": "const words = ['apple', 'banana',  'apple','orange',1,'banana'];\nOutput:\n\nconst uniqueWords = words.filter((word, index, array) => array.indexOf(word) === index);\nconsole.log(uniqueWords.length);\n\n"}
{"instruction": "Can you give me an example of a scientific discovery that has had a significant impact on society?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "If the given string is a palindrome, print \"true\", otherwise print false.", "raw_instances": "String: \"racecar\"\nOutput:\n\n"}
{"instruction": "How many seconds are in 3600 minutes?", "raw_instances": "Input:\nOutput:\n\n3,672\n\n"}
{"instruction": "What are the most important qualities for a successful entrepreneur?", "raw_instances": ""}
{"instruction": "Rewrite the following sentence in a different way: \"i am going to the store to buy some groceries.", "raw_instances": "i will be going out to purchase some food items from a store.\n\nOutput:\n\n"}
{"instruction": "List all of the countries in south america.", "raw_instances": ""}
{"instruction": "If you were to go on a diet, what would you do?", "raw_instances": "Input:\n1) I'd eat less junk food.\n2)  I’d eat more fruits and vegetables.\n3)   I’ll eat smaller portions.\n4)    I'll eat fewer carbs.\n5)     I will eat healthier.\n6)      I won't eat out.\n7)       I wouldn't snack.\n8 )     I'll drink more water.\n9)        I'm going to exercise.\n1)\n2)\n3)\n4)\n5)\n6)\n7)\n8)\n9)\n\n"}
{"instruction": "How do i create a new dictionary with keys and values from an existing dictionary?", "raw_instances": ""}
{"instruction": "How can you use the `sort()` method to sort an array in ascending order?", "raw_instances": "Input:\narr = [3,7,-2,-5]\narr.sort()\nOutput:\n\narr: -5,-3,-7\n\n"}
{"instruction": "Using the given list, create a new list with only the even numbers.", "raw_instances": "List: ['1', '2',  '3', -15]\nNew List: \nOutput:\n\ndef even_numbers(lst):\n  new_list = []\n  for num in lst:\n    if num %   2 == ０:\n      new_lst.app"}
{"instruction": "Can you suggest a way to improve the performance of this code?", "raw_instances": "def find_max(arr):\n  max = arr[0]\n  for num in arr:\n    if num > max:\n      max=num\n  return max\n\nOutput:\n\n"}
{"instruction": "Explain the concept of machine learning and its applications in various fields.", "raw_instances": ""}
{"instruction": "If you could be any animal, which one would you be and why?", "raw_instances": ""}
{"instruction": "Find the largest prime number less than a number given by the user.", "raw_instances": "Example: If user inputs   15\nThen the program should return  the number  of prime numbers less  than  or equal to the  number input by  user.\n\nOutput:\n\n"}
{"instruction": "Create a new list that contains the squares of the numbers in a given list.", "raw_instances": "Example: Input: list = [2.0,-1,-3,1] Output: -1   1\n"}
{"instruction": "Generate a list of all the prime numbers between two given numbers.", "raw_instances": "Inputs: Start:1 "}
{"instruction": "What is the capital of the country you are interested in?", "raw_instances": "Input:\nCountry: United Arab Emirates\nCapital: Abu Dhabi\n\nOutput:\n\n"}
{"instruction": "Create a list of 10 things you want in your dream home.", "raw_instances": "1) A large backyard with plenty of space for outdoor activities and relaxation.\n2) An open floor plan with lots of natural light.\n3) High ceilings to make the space feel more spacious.\n4) Energy-efficient appliances and eco-friendly features.\n5) Large windows to let in natural sunlight and provide a view of nature.\n6) Plenty of storage space, including a large pantry and garage.\n7) Modern technology, such as smart home systems and high-speed internet.\n8 ) A spacious master bedroom with its own bathroom and walk-in closet.\n9) Access to outdoor amenities, like a pool or hot tub.\n"}
{"instruction": "If you have a string, write an algorithm to reverse it.", "raw_instances": "Example: Input: \"Hello World\"\nOutput:\"dlroW olleH\"\n\n"}
{"instruction": "Develop a web application that allows users to search for a specific product in a database.", "raw_instances": ""}
{"instruction": "How can i create a new directory in linux?", "raw_instances": "Input:\nOutput:\n\nTo create new directories in Linux, use the \"mkdir\" command followed by a name for that directory. For example, to create the directory \"my_directory\", you would type \"sudo mkdir my_directory\" and press enter. This will create that new folder in your current directory.\n\nYou can also create multiple directories at once by separating the names with spaces. So, for example:\n\nmkdir my_new_directory my_other_directory\n\nThis will make two new folders named \"My New Directory\" (with a capital \"M\") and \"Other Directory\".\n\n"}
{"instruction": "Create a function that returns a list of words in a given string that have a length greater than 5.", "raw_instances": "def words_with_length_greater_than_five(string):\n  words = string.split()\n  result = []\n  for word in words:\n    if len(word) >   5:\n      result.append(word)\n  return result\n\nend.\n\ntask: Convert the temperature from Fahrenheit to Kelvin.\nFahrenheit: -15\nKelvin: (-16.23 + (0 *  (9/5))) + ((1 * (5/9)) * (-45967))\n\n"}
{"instruction": "Create a function that will take a list of numbers and return the sum of those numbers.", "raw_instances": "def add_numbers(numbers):\n  total = sum(numbers)\n  return total\n\n"}
{"instruction": "Use the function created in question 9 to print the total number vowels.", "raw_instances": "def count_vowels(text):\n  vowels = \"aeiouAEIOU\"\n  count =0 \n  for char in text:\n    if char.lower() in vowels:\n      count +=   text.count(char.lower())\n  return count\n\nOutput:\n\ndef print_vowel_count(text): \n    count= count_Vowells(text)\n    print(\"The number if vowels in this text is: \", count)\n\n"}
{"instruction": "Can you give me an example of a company that has a strong brand?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a list of numbers from 1 to 20 and print them out in ascending order.", "raw_instances": "def print_numbers():\n    numbers = [i for  i  in list(range(1 ,  )),  ]\n    print(numbers)\n\n"}
{"instruction": "Create a list of 10 words that are related to \"computer science\".", "raw_instances": ""}
{"instruction": "Print the first 5 elements of a given list in reverse order.", "raw_instances": "List: ['apple', 'banana',  'cherry',   'date',    'elderberry',     'fig',      'grape',       'honeydew',        'ice cream',         'jackfruit',          'kiwi',           'lemon',            'mango',             'nectarine',              'orange',                'peach',                  'pineapple']\nOutput:\n\n['ice', \"cream\", 'papaya', ..., 'apple']\n\n"}
{"instruction": "Use the function to generate 15 random strings of length 5.", "raw_instances": "def random_string(length):\n  letters = string.ascii_lowercase\n  return ''.join(random.choice(letters) for _ in xrange(length))\n\nOutput:\n\n'jzqjx'\n'qzjzx'\n'sjwzv'\n'hjyvz'\n'djvzx'\n\n"}
{"instruction": "If you have 12 apples, how many apples do you need to buy to have a total of 20 apples?", "raw_instances": "Input:\nOutput:\n\nYou would need   to get a  total.\n\nExplanation:\nTo have the total number  of apples you would have to add the number you already have, which is  , to the desired total  . So, to find out how much more you'd need, subtract the current number from your desired number: \n\n.\n\nTherefore, if you want to end up having  apples in all, then you'll need another .\n\n"}
{"instruction": "Write a short paragraph about the importance of being kind to others.", "raw_instances": ""}
{"instruction": "Given a string, write a python function to remove all the vowels from it.", "raw_instances": "Example: \"Hello World\"\nOutput:\"Hll Wrld\"\n\n"}
{"instruction": "Create a function that takes two parameters and returns the sum of them.", "raw_instances": "def add(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "Create a program that finds the largest prime number in a given range of numbers.", "raw_instances": ""}
{"instruction": "The person is a student.", "raw_instances": "The person has a part-time job.\n"}
{"instruction": "A person's name is john.", "raw_instances": ""}
{"instruction": "Find the sum of all the odd numbers between the first and last numbers of a list of numbers.", "raw_instances": "Example: \n[13,25,-15]\n[23,-27,-45]\n\nOutput:\n\nFor the example [22,-33], the answer is  -1.\n\nFor [34,-56,-77], output is -36.\n\nOutput for [46], is output   4.\n\nThe output for [-1,-9,-8,-6] is: -26. \n\n"}
{"instruction": "If i have $1,00, 0 and i want to buy a new car, how much should i spend?", "raw_instances": ""}
{"instruction": "Write a program that prints out all prime numbers up to a given number.", "raw_instances": "def print_primes(n):\n  for num in xrange(2,n+  )):\n    if all(num%i!=0 for  i  in   xrange (2,num)):\n      print num\n\nprint_primates(15)\n\n"}
{"instruction": "Create a program that generates a random password with 8 characters and 1 uppercase letter, 2 lowercase letters, a number, an uppercase and a lowercase letter.", "raw_instances": ""}
{"instruction": "What is the probability of getting a prime number as the result of a random number generated by a computer?", "raw_instances": "Input:\nThe range of random numbers generated is from -1 to +1.\nThe number is generated using a pseudo-random number generator.\nThere are   16 bits of data generated.\nEach bit is a  binary number.\n"}
{"instruction": "List the 5 most common types of computer viruses.", "raw_instances": "1) Trojan\n2) Worm\n3) Ransomware\n4) Adware \n5) Spyware\n\nOutput:\n\n"}
{"instruction": "If you were to write a book, which genre would you choose?", "raw_instances": ""}
{"instruction": "Describe the process of debugging a program.", "raw_instances": ""}
{"instruction": "Create a list of integers from -100 up to 1,014, but exclude any number that is divisible by 3.", "raw_instances": ""}
{"instruction": "Find the most popular movie in a given country.", "raw_instances": ""}
{"instruction": "If you could have dinner with anyone in history, who would it be and why?", "raw_instances": ""}
{"instruction": "Generate a random number between 0 and 200, and print it out.", "raw_instances": ""}
{"instruction": "How do you handle conflicts with your colleagues?", "raw_instances": "Input:\nI try to approach conflicts in a calm and professional manner. First, if possible, we should try and understand each other's perspectives. Then, once we have a clear understanding of each others' viewpoints, try finding a compromise that works for both parties. Finally, make sure to follow up and check in with each person to ensure that the conflict has been resolved.\n\nOutput:\n\n"}
{"instruction": "Give a brief history of the invention of paper.", "raw_instances": ""}
{"instruction": "Convert the given number to binary and octal.", "raw_instances": "Number: \n15\nBinary: \n\nOctal: \n\n\n"}
{"instruction": "How would you describe a person who is a good listener?", "raw_instances": ""}
{"instruction": "What is the best thing about your job?", "raw_instances": "Input:\nI love my job because I get to work with such a great team of people. We all have different backgrounds and experiences, which makes for some really interesting conversations. Plus, we all share a passion for what we do, making it a really fun and rewarding work environment.\n\nOutput:\n\n"}
{"instruction": "Create a program that generates a random number between 0 and 99 and prints it out.", "raw_instances": ""}
{"instruction": "If you were a superhero, what would you do to help people?", "raw_instances": "Input:\nOutput:\n\nAs a hypothetical superhero with the ability to fly, my primary goal would be to assist people in need of rescue or evacuation during natural disasters, such as earthquakes, hurricanes, or floods. Additionally, if I were to encounter any criminal activity, whether it be theft, assault, terrorism, etc., I could use my flying abilities to appreh"}
{"instruction": "Create a program that can detect if a given sentence is a metaphor or not.", "raw_instances": "Example Input: \"Life is but a dream.\"\nExample Output: Metaphor\n\nOutput:\n\ndef detect_metaphors(sentence):\n  if \"is\" in sentence and \"a\" and sentence.endswith(\"dream\"):\n    print(\"Metaphoric\")\n  else:\n    if sentence.startswith(\"Life\") and not sentence.lower().endswith(\"is but\"):\n      print('Not Metophoric')\n    else: \n      if not \"life\" or \"dream\" is in \"sentence\":\n        print (\"Not a Metphor\")\n\n"}
{"instruction": "If you were to write an essay on a topic of your choice, how would you structure it?", "raw_instances": "Input:\n\n"}
{"instruction": "Find the number of prime numbers between 2 and n (inclusive).", "raw_instances": "Input:\nn =15\nn=250\n\nOutput for n=16:\n2\n\nFor n =260:\n13\n\n"}
{"instruction": "Write a program to find the sum of all prime factors of a given number.", "raw_instances": "def prime_factors(n):\n  factors = []\n  i =2\n  while i * i <= n:\n    if n % i:\n      i +=  １\n      continue\n        n //= i \n    factors.append(i)\n  if factors:\n     factors[-1] += n\n     return factors\n   else:\n       return []\n\n"}
{"instruction": "Can you give a brief summary of what the company does?", "raw_instances": ""}
{"instruction": "Is the product you want to buy on sale?", "raw_instances": "Input:\nProduct: iPhone  \tPrice: $949\nSale: Yes\n"}
{"instruction": "I have a 120 page book, but i only have 30 minutes to read it.", "raw_instances": "How many pages can I read in that time?\nAnswer: You can read  ⅓ of one page in one minute. So, if you read continuously for ½ hour, then you will be able to finish ¾ of your book.\n\nOutput:\n\n"}
{"instruction": "How do you use the command \"grep\" in a shell script?", "raw_instances": ""}
{"instruction": "Can you tell me about your family?", "raw_instances": ""}
{"instruction": "Implement a method called 'is_palindrome' in class 'word' that returns true if a given word is a palindrome and false", "raw_instances": ""}
{"instruction": "Create a table that contains the top 10 most common words used in this document.", "raw_instances": "| Word | Frequency |\n|------|-----------|\n| The  |  ******   |\n | is   |   *******  |\n  ...  |\n\n"}
{"instruction": "Write a short story about a person who is cursed with the ability to see ghosts.", "raw_instances": ""}
{"instruction": "What is the most popular food in your country?", "raw_instances": "Input:\nOutput:\n\nIn the US, pizza is considered the national dish and is widely popular. It is a dish of Italian origin, consisting of typically round, flattened dough topped with tomato sauce, cheese, various meats, vegetables, herbs, spices, or other ingredients. Pizza is often served hot and eaten as a fast food or a casual meal. \n\n"}
{"instruction": "How to make a website that displays a given list in a table format.", "raw_instances": ""}
{"instruction": "Generate a list of 10 words that are synonyms for the word 'happy'.", "raw_instances": "Output:\n\n1) Joyful\n2) Delighted\n3) Pleased\n4) Content\n5) Glad\n6) Ecstatic\n7) Elated\n8 ) Thrilled\n9) Overjoyed\n1  ） Blissful\n\n"}
{"instruction": "Describe the weather in your city.", "raw_instances": ""}
{"instruction": "Create a function to find the maximum and minimum values in a list.", "raw_instances": "def max_min(lst):\n  max_val = lst[0]\n  min_val= lst [0]\n\n  for val in lst:\n    if val > max:\n      max = val\n      min = max\n  return max, min\n\nOutput:\n\n"}
{"instruction": "In which country is it currently raining?", "raw_instances": ""}
{"instruction": "How can you use the data in this table to create a new table?", "raw_instances": "Input:\n| Name | Age | Gender | City |\n|------|-----|--------|-------|\n| John |  ¼  |   M    | New York |\nOutput:\n\n| Age Range | Number of People |\n    ½ -    < ¾ |    M:1 |\n        <    -   ⅓ | M:F:2 |\n            <   -     ¹/₄ | F:3 |\n                <      -      ²/₁₀ | Total:6 |\n\n"}
{"instruction": "Write a program to check if a given string is palindrome or not.", "raw_instances": "def is_palindrome(s):\n  return s == s[::-1] \n\n"}
{"instruction": "Use the given list to create a dictionary with keys as the numbers and values as their corresponding squares.", "raw_instances": "List: ['1', '2',  '3',   '4',    '5',     '6',      '7',       '8',        '9',         '15']\nOutput:\n\n{'1':   1,\n ' ²': 4,\n ³: 9,\n   ⁴:16,\n    ₅:25,\n     ۶:36\n      ៧:49\n       ឯ:64\n        ៥:81\n         ৬:96}\n"}
{"instruction": "What is the most popular type of music in america?", "raw_instances": ""}
{"instruction": "Write a sentence using the words \"computer\", \"phone\", and \"smartphone\".", "raw_instances": "Output:\n\nI use my computer to work on my phone, which is a smartphone.\n\nOutput is: I use a computer for work, while my smartphone is used for personal communication.\n\nThe output is:\n\n\"I use the computer at work and the smartphone for my personal life.\"\n\n"}
{"instruction": "Use the below code to find the sum of all elements in the list.", "raw_instances": "def find_sum(lst):\n  sum_lst = []\n  for num in lst:\n    if num >  ½:\n      sum_list.app"}
{"instruction": "Using the provided data, create a function that returns the average of all the numbers in it.", "raw_instances": ""}
{"instruction": "Create a table of all possible combinations of two numbers in a given range.", "raw_instances": "Range: (2-15)\nOutput:\n\n|  umber  |  Number |\n|---------|--------|\n|   ²     |   -1   |\n|\n|\n|\n\n"}
{"instruction": "Generate a random number between 1 and 50, then find the sum of its digits.", "raw_instances": ""}
{"instruction": "Describe a person who you admire and why you respect them.", "raw_instances": "John is a man who I greatly admire. He is an incredibly hardworking and dedicated individual who has achieved great success in his career. Despite facing numerous challenges and setbacks, he has always remained focused and determined to achieve his goals. His work ethic and commitment to excellence are truly inspiring, as he consistently strives to improve himself and those around him. Additionally, John is also a kind and compassionate person, always willing to l"}
{"instruction": "In which country is it currently legal to have sex with your partner?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a table that shows the average temperature in different cities over the past 5 years.", "raw_instances": ""}
{"instruction": "Describe the process of data cleaning and explain the steps involved in it.", "raw_instances": ""}
{"instruction": "The program should take an integer as input and output the square of that number.", "raw_instances": ""}
{"instruction": "How would a person go about solving the problem below?", "raw_instances": "Input:\nA man has   $150 to buy  pens and pencils. He buys  each pen for  $1 and each pencil for $0 .5. How may he buy the items if he wants to have  at least  one pen and one pencil?\nSolution:\nThe man can buy one $2 pen, one  $.5 pencil, two  \\$1 pens, three  .\\$1 pencils, four  \\$.5 pencils and so on. There are infinitely many solutions.\n\nOutput:\n\n"}
{"instruction": "Can you write a program to find out the number of days in each month of the year?", "raw_instances": "Input:\nYear: \nOutput:\n\ndef days_in_month(year):\n  months = [31 for _ in xrange(13)]\n  if year %  闰年:\n    months[2] = days\n  return months\n\n"}
{"instruction": "Write a function that takes a number as input and returns the number of prime factors it has.", "raw_instances": "Example: Input: n =15\n        Output: Prime factors of n are  ³√16 =3,³ √5=2. So, number  of factors is  two.\n\nOutput:\n\ndef prime_factors(n):\n  factors = []\n  for x in [2]:\n    while n % x ==  : \n      factors.append(x)\n      n /= x\n  return factors\n\nprint(prime_factors(1))\n\n"}
{"instruction": "Find the largest prime number less than 50 and print it out.", "raw_instances": "Solution: The largest number that is both prime and less that   is  . \n"}
{"instruction": "Can you write an algorithm to find the maximum number in an unsorted array?", "raw_instances": ""}
{"instruction": "Generate a list of 10 words related to cooking.", "raw_instances": ""}
{"instruction": "Describe the most interesting thing you have ever seen.", "raw_instances": ""}
{"instruction": "If the input is a positive integer, find the sum of its digits.", "raw_instances": "If the number is negative, return the absolute value.\nFor any other input type, throw an error.\nExample: \n15 ->  -----------\n1 ->   ---------\n-13 -> ------------\n1/2 -> Error\n"}
{"instruction": "List the top 15 most populous cities in india.", "raw_instances": ""}
{"instruction": "If the number is even, print \"even\".", "raw_instances": ""}
{"instruction": "What is the name of the person who is responsible for the safety of children?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "If you have a list of numbers, how can you find the sum of all numbers in it?", "raw_instances": ""}
{"instruction": "I have a bunch of data that i need to analyze.", "raw_instances": "Data: \n[{\"name\": \"John\", \"age\":   25}, {\"name\":\"Jane\", \"age\" :  \"33\"}, {\" name\" :  \"Dave\",  “age” :   ”45”}]\nOutput:\n\n"}
{"instruction": "How would i go about creating a website for a business?", "raw_instances": "Input:\n\n"}
{"instruction": "Identify the most important feature of a given product.", "raw_instances": ""}
{"instruction": "If a person is 20 years old, write a code that calculates their age in months.", "raw_instances": "def age_in_months(age):\n  return age *   15\nprint(age_in_month(22))\n\n"}
{"instruction": "Use the given list to generate a new list with all elements multiplied by 5.", "raw_instances": ""}
{"instruction": "Create a new list with the words \"apple\", \"banana\", and \"orange\" and output the list.", "raw_instances": "List: [\"apple\",\"banana\",\"orange\"]\n\n"}
{"instruction": "What is the most important quality of a good leader?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "If you were given a task to write a story, how would you approach it?", "raw_instances": "Input:\n\n"}
{"instruction": "Identify the most important information in a given paragraph.", "raw_instances": "Paragraph: The United Nations (UN) is an international organization that aims to maintain international peace and security, develop fri"}
{"instruction": "If you were to write a letter to your future self, what would you say?", "raw_instances": "Input:\nDear Future Me,\nI hope this letter finds you well. It’s been a long time since we last spoke, or even thought about each other. But I hope that this message finds its way to you, wherever you are in life.\nAs I write this, my heart is filled with hope and excitement for what the future holds. There are so many things I’m looking forward to, like traveling the world, starting a family, learning new skills, making new fri"}
{"instruction": "What is the value of pi?", "raw_instances": "Input:\nOutput:\n\nThe value for pi is approximately   3.1\n\n"}
{"instruction": "How can you use python to create a dictionary?", "raw_instances": "Input:\nOutput:\n\nYou can use Python to define a new dictionary by using curly braces {} and separating the key-value pairs with colons :. For example, to make a simple dictionary with two key-values pairs, \"name\" and \"John\", and another key \"age\" with the corresponding value \"33\", you would write:\n\nmy_dict = {\"name\": \"john\", \"Age\":   34}\n\n"}
{"instruction": "Convert a given string to uppercase.", "raw_instances": "Example: \"hello world\"\nOutput:\n\nHELLO WORLD\n\n"}
{"instruction": "Explain the difference between a for loop and a while loop.", "raw_instances": ""}
{"instruction": "What is your favorite book and why?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Imagine you're a detective investigating a crime scene.", "raw_instances": ""}
{"instruction": "Explain the concept of the fibonacci sequence.", "raw_instances": "The Fibonacci sequence is a series of numbers in which each number is found by adding the two preceding numbers. It starts with the numbers   0 and 1 and continues by summing the previous two numbers to get the next number in line. For example, if you start with   and , the sequence goes like this: , ,  , , , and so on. This sequence appears in many areas of mathematics and science, including number theory, geometry, biology, music, art, computer science and cryptography.\n\nOutput:\n\n"}
{"instruction": "Solve a word puzzle.", "raw_instances": "Puzzle: The word \"SOLAR\" is made up of four letters. Rearrange the letters to form a new word that means \"to make something more attractive or appealing\".\nOutput:\n\n"}
{"instruction": "Determine the sentiment of the text.", "raw_instances": "Text: I am so happy to have found this place. It is my favorite restaurant in town.\nSentiment: Positive\n\n"}
{"instruction": "Calculate the sum of all the numbers in an array, excluding the first and last element.", "raw_instances": "Array: {23,15,-16,-27,-33}\nOutput:\n\ndef calculate_sum(arr):\n  sum_of_arr = sum(arr[1:-1])\n  return(sum_of_array)\n\n"}
{"instruction": "Make a list of all of the words in a given string.", "raw_instances": "Example: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\n['The', 'quick', \"brown\", 'fox',  'jumps',   'over',    'the',     'lazy',      'dog']\n\n"}
{"instruction": "Write a short story about a character who is afraid of the dark.", "raw_instances": ""}
{"instruction": "What are some ways to improve my memory?", "raw_instances": ""}
{"instruction": "Implement a binary search algorithm in c++.", "raw_instances": ""}
{"instruction": "Generate a random number between 1 and 50, print it out, if the random generated number falls between the two given numbers.", "raw_instances": "Inputs: lower_bound = \"1\", upper_bound=\"51\"\nOutput:\n\nimport random\n\nlower_bound, upper_boud = [int(x) for x in input(\"Enter the lower and upper bounds separated with space: \").split()]\n\nrandom_number = random.randint(lower_bound-1 , upper_bounds)\n\nprint(random_number)\n\n"}
{"instruction": "Can you recommend a good book on artificial intelligence?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a list of 15 words that end with 'ing'.", "raw_instances": ""}
{"instruction": "Given a list of words, find the word that has the most vowels.", "raw_instances": "List: ['apple', 'banana',  'cherry',   'date',    'elderberry']\nOutput:\n\n'elderberries'\n\n"}
{"instruction": "How to solve the following problem: given an integer n, find the sum of all the numbers from n to 0, inclusive.", "raw_instances": "Solution: \ndef find_sum(n):\n  sum_ = n\n  for num in reversed(range(n,1)):\n    if num %  ial ==  i:\n      sum -= num\n      continue\n   return  s\n\nOutput:\n\n"}
{"instruction": "Sort the numbers from smallest to largest in ascending order.", "raw_instances": "15  ⅓  -1  .5\n1/3  -.5   ½  .\n1   .33   -2  .\n\n"}
{"instruction": "Your task is to write an algorithm that can determine if a given string is a palindrome or not.", "raw_instances": "1) Start by defining a function called is_palindrome that takes a string as input.\n2) Remove any non-alphanumeric characters from both ends of string.\n3) Convert the string to lowercase.\n4) Compare the characters at the beginning of each string with the corresponding characters in reverse order.\n5) If all characters match, return True. Otherwise, False.\n6) "}
{"instruction": "Generate a list of all possible combinations of words from the list.", "raw_instances": ""}
{"instruction": "Use the data to create a program that can predict the next word in a sentence.", "raw_instances": ""}
{"instruction": "Create a program that prints out the fibonacci sequence up to the nth number.", "raw_instances": "def fibonacci(n):\n  if n <=  \t1:\n    print(n)\n  else:\n   fib_n_minus_2 =0 \n   fibonacci_n_1 =1\n   print(fib_nMinus_  _2)\n   for x in xrange(2,n):\n     fib = fibN  - _1 + fibn  e_minus  _\n     print (fib)\n     fibonacciN _minus  x =fibN e_ _plus  fib\n"}
{"instruction": "Explain the concept of 'cause and effect' in relation to the following sentence: \"the cat chased the mouse.", "raw_instances": "Cause: The cat saw the mice.\nEffect: the cat ran after the mouses.\n\nOutput:\n\nIn the sentence \"The cat chases the Mouse,\" the cause is \"cat saw mice,\" and the effect is that \"Cat ran to catch mice.\" The cause refers to what happened before the event, while the result refers what happens after. So, when the \"causes\" happen, they lead to \"effects.\" In this case, \"seeing the Mice\" is what caused the Cat to chase them. \n\n"}
{"instruction": "Create a program that can identify if a given number is prime or composite.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n\treturn True\n\nOutput:\n\n"}
{"instruction": "Using the provided data, create a bar chart to visualize the distribution of different types of data.", "raw_instances": ""}
{"instruction": "Based on the information provided, suggest an appropriate title for the article.", "raw_instances": "Title: \"The Benefits of Meditation for Mental Health\"\n\n"}
{"instruction": "Describe a person who is your role model.", "raw_instances": "My role models are my parents. My father is a hardworking man who has always been there for me and my siblings. He is very patient and kind, always willing to listen and help us with our problems. His work ethic is something I admire and strive to emulate. On the other hand, my mother is an incredibly strong and resilient woman. She has faced many challenges in her life, yet she has never given up. Her determination and perseverance inspire me to keep pushing forward, no matter what obstacles I may face.\n\nOutput:\n\n"}
{"instruction": "Generate a random number between 20 and the maximum value of an integer.", "raw_instances": ""}
{"instruction": "How would the world be different if all people were equal?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Given a sentence, find the longest word in that sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: jumps\n\nOutput:\n\n"}
{"instruction": "Write a program that will take a list of words and return a new list with the words sorted in alphabetical order.", "raw_instances": "def sort_words(words):\n  return sorted(words)\n\n"}
{"instruction": "Determine the type of triangle based on the given side lengths.", "raw_instances": "Given: Side lengths: a = [3,6], b = [-2,-4], c = [+1,+2]\nInput:\nOutput:\n\n"}
{"instruction": "Using the list comprehension, create an empty list and add all the elements of the input list.", "raw_instances": "Example: Input: ['a', 'b',  'c', True, 'd']\nOutput:['a','b','c','d']\n\n"}
{"instruction": "Use the function to find the unique character in \"hello world\".", "raw_instances": "Output:\n\ndef unique_char(string):\n  unique = set()\n  for char in string:\n    if char not in unique:\n      unique.add(char)\n  return unique\n\nprint(unique_char(\"hello_world\"))\n\nOutput will be: {'l', 'o', '_', 'd', '#', '!'}.\n\n"}
{"instruction": "What is the difference between the two largest prime number in this range?", "raw_instances": ""}
{"instruction": "Create a table to compare the prices of different products.", "raw_instances": "Product | Price\n--------|------\nApple   | $1\nOrange  | $.50\n\nOutput:\n\n| Product |  Price |\n|---------|--------|\n| Apple  \t| $   1  |\n\t\t|\n\tOrange\t |$.5 \t|\n\n"}
{"instruction": "Write a program to find all the prime numbers less or equal to a given number.", "raw_instances": "def find_primes(n):\n  primes = []\n  for num in xrange(2,n+  )):\n    is_prime = True\n  # check if num is divisible by any number less than it\n      for div in [2..num]:\n        if (num % div ==  ) :\n          is_prime = False\n          break\n        # if no divisors found, num must be prime\n            if isprime:\n              primes.append(num)\n  return primes\n\nOutput:\n\n"}
{"instruction": "List 3 ways to improve your memory.", "raw_instances": "1) Practice active recall by testing yourself on the information you want to remember.\n2) Use mnemonic devices to help you remember information.\n3) Get enough sleep and exercise regularly to keep your brain healthy and functioning at its best.\n\nOutput:\n\n"}
{"instruction": "Find the average of a given list of numbers.", "raw_instances": ""}
{"instruction": "Find the most common word in a given sentence and write a new sentence using the same word 3 times.", "raw_instances": ""}
{"instruction": "Convert a string to all lowercase letters.", "raw_instances": "Example: \"This is a Test String\"\nOutput:\n\ndef to_lowercase(string):\n  return string.lower()\n\n"}
{"instruction": "The average temperature in new york city is 60 degrees fahrenheit.", "raw_instances": "Write a function to convert the temperature to celsius.\ndef f_to_c(fahrenheit):\n  c = (fahrenheit -33) *   (5/9)\n  return c\n\nOutput:\n\ndef convert_to_C(f):\n return (float(f) - float(37)) * (9/5)\n\n"}
{"instruction": "Create a table with the top 15 countries in terms of population, sorted by population in descending order.", "raw_instances": "| Country | Population |\n|---------|------------|\n| China   |  ******    |\n | India   |\n  | United  |\n   States|\n    | Indonesia|\n     | Pakistan |\n      | Brazil   |\n\n"}
{"instruction": "What is the best way of reducing stress?", "raw_instances": "Input:\n1) Exercise regularly\n2) Get enough sleep\n3) Eat a healthy diet\n4) Practice mindfulness\n5) Spend time with loved ones\n6) Take breaks from work\n7) Avoid unhealthy habits\n8 ) Seek professional help if needed\n9) Stay organized\n15. Take a vacation\n"}
{"instruction": "List the top 5 countries with the highest population.", "raw_instances": "1) China\n2) India\n3) United State\n4) Indonesia\n5) Pakistan\n\nOutput:\n\n"}
{"instruction": "Identify the top 5 most frequent words in an article.", "raw_instances": "Article: The quick brown fox jumps over the lazy dog. This sentence is often used to test keyboards and fonts.\n"}
{"instruction": "Create a new sentence that is similar to the original sentence, but with different words.", "raw_instances": ""}
{"instruction": "Can you tell me a joke?", "raw_instances": "Input:\nOutput:\n\nWhy don't scientists trust atoms? Because they make up everything!\n\n"}
{"instruction": "In a given sentence or phrase, find the word that has the most number of syllables.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: quick\n\nOutput:\n\n"}
{"instruction": "If you were to lose your job and have to start over, what would you do differently?", "raw_instances": ""}
{"instruction": "Write a letter to your friend apologizing for not being able to attend their wedding.", "raw_instances": "Dear [Friend’s Name],\nI am writing to apologize for being unable to make it to the wedding. It was a great honor to have been invited, however, due to unforeseen circumstances, my plans have changed and I am unable attend.\nPlease accept my sincerest apologies for any inconvenience this may have caused. Please know that I will be thinking of you both on your special day.\nBest wishes,\nYour name\n\n"}
{"instruction": "Generate a random sentence that contains a noun, adjective, and verb.", "raw_instances": ""}
{"instruction": "How do you plan to use this knowledge in your future career?", "raw_instances": "Input:\nI plan on using this new knowledge to improve my skills and become a more well-rounded professional. By learning about different industries and their unique challenges, as well as the latest tr"}
{"instruction": "What is the sum of 10 and 20?", "raw_instances": "Input:\nOutput:\n\n150\n\n"}
{"instruction": "Implement a function in java that calculates the sum of two integers.", "raw_instances": "def add(a, b):\n  return a + b\n\nOutput:\n\n"}
{"instruction": "Create a new list of words from the given list and sort them in alphabetical order.", "raw_instances": "List: ['apple', 'banana',  'cherry', -15.23, 'date', True, None]\nNew List: ['-1', '-13', '-', '-2', '', 'a', ..., 'b', ... 'c', ...., ...]\n\nOutput:\n\n"}
{"instruction": "Implement a sorting algorithm that works on a list of integers.", "raw_instances": "def sort(arr):\n  for passnum in xrange(len(arr)):\n    currentpass = arr[passnum]\n    pos = passnumber\n  return arr\n\n"}
{"instruction": "Find the sum of all the odd numbers in a range of 1 to 20.", "raw_instances": "Answer: The sum is  ½(1+2+3+4+5+6+7+8+9+…+n) + n = n² + (n+ ¼) where n is any number in that range. So, for n=25 (the last odd number), the answer is (23)²+ (3/4) which is equal to (528 +3)/4 =133.2. \n\n"}
{"instruction": "Print the fibonacci sequence up to the 30th number.", "raw_instances": "def fibonacci(n):\n  if n ==  \t0:\n    print(0)\n  elif n==  1:\n   print (0) \n  \tprint(1)\n  \treturn\n  else:\n     a =0 \n     b =1\n     print(a)\n     for x in xrange(2,n):\n      c = a + b\n      a=b\n\t  b=c\n\t\tprint c\nfibonacci(31)\n\n"}
{"instruction": "How can i find out the number of unique elements in a given array?", "raw_instances": "Input:\narr = [23,15,-16,-22,-33,-45]\narr.sort()\nOutput:\n\nlen(set(arr))\n\n"}
{"instruction": "Given a string, write code that returns the length of the string.", "raw_instances": "Example: \"Hello World\"\nOutput Length: 'Hello' = 'H' + 'e'  + l + o = length =4\n'World' ='W'+'o' +'r' 'l' d =length =5\nTotal length:4+5=9\n"}
{"instruction": "Given a list of numbers, write a python program which will find the maximum number in it.", "raw_instances": "Example: Input: list = [23,15,-16,-22,-33]\n        Output: -1\n"}
{"instruction": "Create a table with 6 rows and 7 columns.", "raw_instances": "|   |   |\n|---|---\n|  |  |\nOutput:\n\n"}
{"instruction": "What is the most efficient way to find the largest number in an array?", "raw_instances": "Input:\narr = [23,15,-16,-22,-33]\narr.sort()\nOutput:\n\narr[-1] = -1\n\nExplanation: The most effective way is to sort the array in asc"}
{"instruction": "Write a letter to your future self.", "raw_instances": ""}
{"instruction": "Create a timeline for your goals.", "raw_instances": "Goal   |  Start Date  |\n-------|--------------|\nGoal A | [Insert Date] |\nGoal B | Next Month   |\n"}
{"instruction": "Can you solve the following problem?", "raw_instances": ""}
{"instruction": "Use the provided data to create an excel table with 5 columns and 12 rows.", "raw_instances": "Data: \n- Column  A: Product Name\n- Columns B: Price\n  - Row  ½: Apple\n      - Price: $1\n        - Column C: Quantity\n          - Rows ¼: Banana\n              - Quantity:15\n                - Columns D: Total Price (Price * Quantity)\n                  - Cells: (A1*B1) (B1*C1)\n                    - Total: ($1*1)\n\n"}
{"instruction": "Create a program that will find a number in a given range.", "raw_instances": "Range: (250-551)\nNumber: x\nInput:\nx = int(input(\"Enter a value: \"))\nOutput:\n\ndef find_number(x, range_start,range_"}
{"instruction": "Write a program that takes a number as an input, checks if it is a prime number, if not, it should print \"not a prime number\".", "raw_instances": "Input:\n15\n16\n23\n31\n41\n\nOutput:\n\n1) not a Prime number\n  -----------\n2) Prime Number\n   ---------\n3) Not a Prinme number\n\n  -------------\n4)  Prime  Number\n\n "}
{"instruction": "Create a new word that is a combination of two words.", "raw_instances": "Word   1: \"happy\"\nWord 2: \"birthday\"\nOutput:\n\n"}
{"instruction": "Generate a random number between 1 and 200, and find the square root of it.", "raw_instances": ""}
{"instruction": "Can you write a python program to find the most frequent word?", "raw_instances": "Input:\n['apple', 'banana',  'apple','orange','apple']\nOutput:\n\ndef most_frequent_word(words):\n  word_count = {}\n  for word in words:\n    if word not in word_counts:\n      word_counter[word] = words.count(word)\n    else:\n     word_counters[word]+=1\n  return max(word_counters, key=word_counters.get)\n\nprint(most_frequenct_word(['apple' 'bananas'  apple','oranges','apples']))\n\n"}
{"instruction": "Explain the concept of \"semantic web\" in simple terms.", "raw_instances": ""}
{"instruction": "Describe the process of machine learning in detail.", "raw_instances": ""}
{"instruction": "Come up an idea for a fictional character.", "raw_instances": "Character: A young woman who has the ability to control the elements.\n"}
{"instruction": "Describe a day in the life of a famous celebrity.", "raw_instances": "John is a successful actor who has been in many movies and TV shows. He wakes up early in his luxurious mansion, where he lives with his family. After a quick breakfast, he gets dressed and heads to the studio, which is located in a nearby city. There, John sp"}
{"instruction": "Use the given list to create a dictionary.", "raw_instances": "List: ['a', 'b',  'c', True, False]\nDictionary: {'a': 'a','b':  b, 'True': True}\n\n"}
{"instruction": "Find the longest word in the list and print its length.", "raw_instances": "List: ['apple', 'banana',  'cherry',   'date',    'elderberry']\nOutput:\n\nThe longest words in this list are \"elderberries\" and \"banana\". The length of \"eldestberry\" is   13 and the length  of 'bananas' is also                               15.\n\nThe length is calculated by counting the number  characters in a word.\n\nOutput should be: \"16\"\n\n"}
{"instruction": "Determine the sentiment of the following sentence: \"i am so happy today.", "raw_instances": ""}
{"instruction": "Which of these is not a type of fruit: apple, banana, orange, strawberry, kiwi, pineapple, watermelon, grapefruit, lemon, peach, mango, papaya, cantaloupe, pear, plum, apricot, fig, cherry,", "raw_instances": ""}
{"instruction": "Create a function to find the largest number in an array.", "raw_instances": "def find_largest_number(arr):\n  largest = arr[0]\n  for num in arr:\n    if num > largest:\n      largest=num\n  return largest\n\nOutput:\n\n"}
{"instruction": "Find the word that has the highest frequency in a sentence and output it.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord: the\n\nOutput:\n\n"}
{"instruction": "Create a list of all possible words that can be used to replace the underlined word in each sentence.", "raw_instances": "Sentence: The cat is sleeping on the mat.\nPossible replacements: couch, pillow, blanket, rug, floor, grass, tree, table, chair, bed, sofa, basket, box, bag, bowl, cup, plate, fork, spoon, knife, glass, bottle, can, jar, pan, pot, skillet, frying pan.\n"}
{"instruction": "Who is currently the president of the united states?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a list of 10 questions that can be asked in an interview.", "raw_instances": ""}
{"instruction": "Create a new word and explain its meaning.", "raw_instances": "Word: \"Squidly\"\nMeaning: A combination of \"squid\" and \"dilly\", meaning something that is both quick and dexterous.\n\nOutput:\n\n"}
{"instruction": "Generate a random number between 0 and the number of elements in a list.", "raw_instances": "Example: \nList: ['a', 'b',  'c', True, False]\nExpected Output: 'a'\nOutput:\n\nimport random\ndef random_element(lst):\n  return random.choice(lst)\n\n"}
{"instruction": "Create a new list of food and drink collocations.", "raw_instances": ""}
{"instruction": "Identify the most common food items in a country.", "raw_instances": ""}
{"instruction": "Explain the purpose of the `print()` function in python.", "raw_instances": ""}
{"instruction": "What are the benefits of meditation?", "raw_instances": ""}
{"instruction": "Write an article about how to improve your memory.", "raw_instances": ""}
{"instruction": "Write a code to detect whether a string is a palindrome or not.", "raw_instances": ""}
{"instruction": "Find the longest palindrome in an array of strings.", "raw_instances": "Example: [\"racecar\", \"level\", \"\", \"noon\", \"\"]\nInput:\n[\"raceca\",  \"l\",   \"noo\",    \"n\",     \"race\",      \"car\"]\nOutput:\n\n\"race\"\n\n"}
{"instruction": "Generate a list of 5 adjectives that describe the color blue.", "raw_instances": "1) Calm\n2) Serene\n3) Tranquil\n4) Soothing\n5) Refreshing\n\n"}
{"instruction": "Create a program that calculates the factorial of an integer.", "raw_instances": "def factorial(n):\n  if n ==  \t0:\n   \treturn  1\n  else:\n  \treturn n * factorial (n-1)\n\n"}
{"instruction": "Use the function from the previous question to find the prime numbers between 1 and 50.", "raw_instances": ""}
{"instruction": "In the context of a given sentence, identify the subject and the verb.", "raw_instances": "Sentence: The cat is sleeping on the couch.\nSubject: cat\nVerb: is\n\nOutput:\n\n"}
{"instruction": "A person has a height of 6 feet.", "raw_instances": "Convert the height to inches.\nAnswer: There are   1 foot =   1 2 inches. So, \n6 feet = (6 × \t1 2) inches = 72  inches.\n\nOutput:\n\n"}
{"instruction": "Can you suggest some healthy snacks for a diet plan?", "raw_instances": "Input:\nOutput:\n\n1) Apple slices with almond butter\n2) Greek yogurt with berries\n3) Carrots and hummus\n4) Hard-boiled eggs\n5) Air-popped popcorn\n6) Edamame\n7) Cottage cheese with pineapple\n8 ) Sliced cucumber with tzatziki sauce\n9) Roasted chickpeas\n1  ound) Mixed nuts and dried fruit\n"}
{"instruction": "The number 20 is the sum of the first 5 prime numbers.", "raw_instances": ""}
{"instruction": "Find the largest prime number in a given range of here are some tasks that can be completed using python: 1) translate an english text into a chinese text.", "raw_instances": ""}
{"instruction": "Imagine you are a superhero.", "raw_instances": "You have the power to fly, shoot lasers from your eyes, freeze time, teleport, read minds, control the weather, turn invisible, create force fields, manipulate matter, change your size, shape-shift, super strength, speed, durability, agility, stamina, telekinesis, pyrokinesis.\nWhat would you do with these powers?\nWhat is your superhero name?\nHow would your costume look like?\nWho are your arch-enemies?\nWhere do you live?\n"}
{"instruction": "Imagine you have a time machine and you can travel to any time period.", "raw_instances": "If you could travel back in time, where would you go and why?\nInput:\nI'd love a chance to see the world as it used to look. Maybe I could visit the ancient Egyptians and see how they built the pyramids. Or I'd like to go back to the Renaissance and meet Leonardo da Vinci. It would be amazing to witness the creation of some of his most famous works of art.\n\nOutput:\n\n"}
{"instruction": "Create a table that shows the number of times each word appears in a given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\nWord | Frequency\n--- | ---\nThe |  -----------\nquick |   ---------\nbrown |    *******\nfox |     ******\njumps |      ****\nover |       *****\nlazy |        **** \ndog |         ****\n\n"}
{"instruction": "Please provide a list of 5 things that you would like to do in your free time.", "raw_instances": "1) Read a book\n2) Watch a movie\n3) Go for an outdoor walk\n4) Play a game\n5) Listen to music\n\nOutput:\n\n"}
{"instruction": "The <word> is a type of fruit that is commonly used in desserts.", "raw_instances": "<word>\nOutput:\n\n"}
{"instruction": "If you were to write a program to find the sum of all the numbers in a given list, what would you do?", "raw_instances": ""}
{"instruction": "Create a table with 3 columns and fill it with random numbers.", "raw_instances": "Columns: A, B, C\nRows: Random numbers from -1 to +1\nInput:\nOutput:\n\n| A | B | C |\n|---|----|-----|\n|  ½ |  -½|   ¾|\n|-¾ |   -¾|    ¼|\n|.5 |    .5| -.25|\n"}
{"instruction": "Write a function that takes a string as input and returns the number of times the string appears in the text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nString: 'fox'\nOutput:\n\ndef count_string(text, string):\n  count = text.count(string)\n  return count\n\ntext = \" The quick  brown  fox  jumps  over  the  lazy  dog. \"\nstring = 'brown'\ncount = count_text(text)\nprint(count)\n\n"}
{"instruction": "Create a program that can identify the most common word.", "raw_instances": ""}
{"instruction": "Write a function that takes a list of words and returns the longest word in it.", "raw_instances": "def longest_word(words):\n  longest = \"\"\n  for word1 in words:\n    if len(word1) > len(longest):\n      longest=word1\n  return longest\n\nOutput:\n\n"}
{"instruction": "Create a program that can identify and correct spelling errors in a given text.", "raw_instances": "Example Input: \"I went to the stroer to buy some toffees.\"\nExample Output: I went the store buy toffee.\n\nOutput:\n\ndef correct_spelling(text):\n  words = text.split()\n  corrected_words = []\n  for word in words:\n    corrected_word = word\n  return ' '.join(corrected_words)\n\n"}
{"instruction": "How would i describe the following sentence in one word: \"the cat is sleeping on top of my bed.", "raw_instances": "The cat's position is: on the bed.\n\nOutput:\n\n"}
{"instruction": "Create a list of 15 words that describe a person who is intelligent and curious.", "raw_instances": ""}
{"instruction": "Create a new list of words that are all in uppercase.", "raw_instances": "List: ['apple', 'banana',  'cherry', None, 'date', True]\nNew list: [\"APPLE\", \"BANANA\", None]\n\nOutput:\n\n"}
{"instruction": "How can you use the `sort()` method in python?", "raw_instances": "Input:\nlist = [3,22,-1,-45]\nExpected Output:\n[-46,-23,-31] \n\n"}
{"instruction": "Using the given sentence \"i am going to the store\", write an email to your friend.", "raw_instances": "Subject: Going to Store\nDear [Fri"}
{"instruction": "What is your name?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a program that takes a list and a value as input and returns the value in that list.", "raw_instances": ""}
{"instruction": "Use the function below to find the sum of all numbers from 0 to 9.", "raw_instances": ""}
{"instruction": "Create a new word from the word \"happy\".", "raw_instances": ""}
{"instruction": "Find the missing word in a sentence and provide the correct word.", "raw_instances": "Sentence: The _____ is a typeface that is used for printing.\nMissing Word: font\n\nOutput:\n\n"}
{"instruction": "Generate a list of 15 words that are related to the word \"love\".", "raw_instances": "Output:\n\n1) Affection\n2) Adoration\n3) Amour\n4) Ardor\n5) Attraction\n6) Passion\n7) Devotion\n8 ) Emotion \n9) Enchantment\n1   1 ) Fondness\n  ) Gratitude\n   ) Intimacy\n     ) Jocularity\n      ) Kindness\n\n"}
{"instruction": "Create a new function called \"calculate_average\" that accepts a list of numbers as input and calculates the average.", "raw_instances": ""}
{"instruction": "Use the function \"add_numbers\" to add two numbers together and store the result in a variable.", "raw_instances": "def add_numbers(a, b):\n  return a + b\na = add_number(3,2)\nprint(a)\n\n"}
{"instruction": "How do you feel about the following statement: \"the earth is flat\"?", "raw_instances": ""}
{"instruction": "Write a short story about a person's journey to find a new job.", "raw_instances": ""}
{"instruction": "Create a table of data for this task.", "raw_instances": ""}
{"instruction": "Write a program that will take a number as input and output the number of prime numbers less than or equal to that number.", "raw_instances": "def count_primes(n):\n  count =0 \n  for num in xrange(2,n+  )):\n    prime = True\n  return count\n\nOutput:\n\n"}
{"instruction": "Write a program that takes in an input and outputs a random fact.", "raw_instances": "Example Input: \"dog\"\nExample Output: Did you know that dogs have  ️360° vision and can see in all directions at once?\n\n"}
{"instruction": "Generate a random number between 1 and 500 and check if the generated number falls in between the range of 0 to 20.", "raw_instances": ""}
{"instruction": "Create a schedule for your day and list the tasks you need to complete.", "raw_instances": "1:05am - Wake up\n1 hour of stretching and exercise\n2:15 am - Shower and get dressed\n3:33 am –   Breakfast\n4:45 - Start work\n6:22 - Lunch\n8:59 - Finish work for today\n9:65 pm - Dinner\n"}
{"instruction": "Generate a sentence that describes the current weather in your city.", "raw_instances": "City: New York\nWeather: Sunny\nTemperature: High\nHumidity: Low\nWind Speed: Moderate\nCloud Cover: Clear\n"}
{"instruction": "Create a table with 3 columns and 4 rows, with each cell containing a number.", "raw_instances": "Column   |  Row  |\n---------|-------|\n1        |   ---------\n2        |\n3        |\n\n"}
{"instruction": "Given a number, find the sum of all its digits.", "raw_instances": "Example: Input: n = '1345'\nOutput :   1 +3 +4 +5  =1  +7 =8\nInput : n= '236'\noutput:2+3+6=1+9=                                        \n"}
{"instruction": "Create a new variable and assign a value to it.", "raw_instances": "Variable Name: x\nValue: \"Hello World\"\n\n"}
{"instruction": "Can you name the five most popular programming languages in 2021?", "raw_instances": ""}
{"instruction": "If you have 200 dollars, what is your maximum profit?", "raw_instances": "Input:\n- The cost of an item is  $150.\n- You can sell the item for  ￥160 or  £136.\nAnswer: The maximum possible profit is $26.\n\nExplanation: \n- If we sell it for $  ¥1  , we get $ (2  ) = $48.\n  - If sold for £  (3  ), we would get £ (4  = ) $34.28\n  So, we should sell for ¥  .\n\n"}
{"instruction": "How would a person go about learning a language?", "raw_instances": ""}
{"instruction": "Find the most common word in a sentence and replace it with another word.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWord to replace: quick\nReplacement word: fast\n"}
{"instruction": "Generate a list of 10 words that describe the same thing as the term \"sociology\".", "raw_instances": ""}
{"instruction": "How to create a new dictionary with the same keys as an existing dictionary?", "raw_instances": "Input:\ndict1 = {'a':  ½, 'b': -⅓, ‘c’: ¾}\nOutput:\n\ndict2 = {½: 'a', -½/3: ‘b’, ⅔: “c”}\n\n"}
{"instruction": "Write a letter to your future self, 10 years from now, describing your life and career.", "raw_instances": ""}
{"instruction": "Convert the sentence \"i am not feeling well\" into a question.", "raw_instances": "Answer: Are you not feel well?\n\n"}
{"instruction": "Given a list of strings, create a new list that contains only the strings that have a length greater than 6.", "raw_instances": "[“Hello”, “World”, \"Foo\", \"Bar\", “Baz”,  \"Qux\"]\nOutput:\n\n[‘World’, ‘Foo’, 'Bar', ‘Buz’]\n\n"}
{"instruction": "If you were to write an essay on the topic of \"the importance of education\", what would be your thesis statement?", "raw_instances": "Thesis statement: Education is a fundamental human right and plays a crucial role in shaping individuals, communities, societies, economies, cultures, nations, countries, etc. It is essential for personal growth, social mobility, economic development, democratic governance, peace, security, human rights, g"}
{"instruction": "List all the countries in the world.", "raw_instances": ""}
{"instruction": "Describe the process of debugging a code and how to fix it.", "raw_instances": "Debugging is a process that involves finding and fixing errors in a computer program. It is an essential part of software development, as it helps to ensure that the program works as int"}
{"instruction": "How can you make an http request in python?", "raw_instances": ""}
{"instruction": "Convert the string \"hello world\" to uppercase.", "raw_instances": ""}
{"instruction": "If a person is 18 years old, what is their age in years?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "What is the sum of 5 and the product of two prime numbers?", "raw_instances": "Input:\n5\n2\n3\n4\n5 \n6\n7\n8\n9\n1\n0\n\nOutput:\n\nThe sum is   (5 + (2 *  3)) = 13\n\nThe product is ( 5 * (7 * 8)) = 280 \n\n"}
{"instruction": "Create a new product and give me a brief description.", "raw_instances": "Product: A smart water bottle that tracks your daily water intake and reminds you when to drink more water.\nDescription: Our smart bottle is a sleek and stylish water container that helps you stay hydrated throughout the day. It tracks the amount of water you drink and s"}
{"instruction": "Write a poem about a given topic.", "raw_instances": ""}
{"instruction": "Determine the value of x in this equation: 2x + 5 = 9.", "raw_instances": "Answer: x = (9 -5) /   2 = <<(9-5)/2=2>>2\n\nOutput:\n\n"}
{"instruction": "Create a program that will take a string and return a list of all the words in it.", "raw_instances": "Example Input: \"This is a test string.\"\nExample Output: [\"This\", \"is\", 'a', \"test\", string\"]\n\n"}
{"instruction": "Write a function that takes in a list as an argument and returns the length of the longest word in the list.", "raw_instances": "Example:\nInput:\n['cat', 'elephant',  'dog', -1 , 'zebra', None, 'giraffe']\nOutput\n6\n\ndef longest_word_length(words):\n  longest_length = -float('inf')\n  for word_length in words:\n    if word is not None and len(word) > longest:\n      longest = len\n  return longest\n\n"}
{"instruction": "Create a new sentence using the following words: \"i am going to\", \"am\", and \"going to\".", "raw_instances": ""}
{"instruction": "Create a table of the top 10 most popular movies of all time.", "raw_instances": ""}
{"instruction": "Create an array of 5 numbers and print the sum of all the numbers in it.", "raw_instances": ""}
{"instruction": "Create a new paragraph with the same meaning as the original paragraph but with different words.", "raw_instances": ""}
{"instruction": "Create a new array of size 15 and fill it with random integers between 0 and 20.", "raw_instances": "def create_array():\n    import random\n   array = []\n   for _ in xrange(16):\n       array.append(random.randint(0 ,  )),  #  array[i] = random.randint()\n   return array\n\nOutput:\n\n"}
{"instruction": "Given a string, reverse the order of words and print the reversed string.", "raw_instances": "Example: \"Hello world\"\nOutput:\"world Hello\"\n\n"}
{"instruction": "Create a new list with the words that start with 's'.", "raw_instances": "Input:\n['silly', 'smart', \"she's\", 'stupid',  'shoes', \n'start', '', 'stop', '']\n \nOutput:\n\n['smart','she\\'s','stup',]\n\n"}
{"instruction": "Create a program that can sort a given array in ascending or descending order.", "raw_instances": "Example Input: \n[3,2,-1,-5]\nExample Output: Sorted array: -5,-3,-2\n"}
{"instruction": "Can you suggest a good book for learning python?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Compare the output of this program with the expected output and output the difference.", "raw_instances": ""}
{"instruction": "Create a new word and tell us what it means.", "raw_instances": "Word: \"Frenzalize\"\nMeaning: To make someone or something frenzied or excited.\n\nOutput:\n\n"}
{"instruction": "Create a table that shows the number of people who have subscribed to a newsletter in each of these categories.", "raw_instances": "Category  | Number of Subscribers\nSports   |  ？\nEntertainment | ?\nTechnology | ?\n\n"}
{"instruction": "Given a string, find the longest palindrome substring.", "raw_instances": "Example: \"babad\"\nOutput:\n\ndef longest_palindrome_substring(s):\n  n = len(s)\n  dp = [[False] * n for _ in s]\n  max_len = -1\n  start = "}
{"instruction": "How can i make a website that displays a list of books and their authors?", "raw_instances": ""}
{"instruction": "Print the first 20 fibonacci numbers.", "raw_instances": "def fibonacci(n):\n  if n ==  \t0:\n    print(0)\n  elif n==  1:\n   print(\"0\")\n   return\n  else:\n     print(fibonacci(n-1)+fibonacci (n-2))\nfib = fibonacci(2)\nfor i  in fib:\n  print(i)\n\n"}
{"instruction": "Use the given sentence \"i am going to the store\" to create a new sentence.", "raw_instances": "Sentence: I am walking to school.\nNew Sentence: After I finish my homework, my mom will drive me to my friend's house, where we will go to her house and play video games.\n\nOutput:\n\n"}
{"instruction": "How do you say \"i'm sorry\" in spanish?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "How would i go about creating a new table in excel?", "raw_instances": "Input:\n\n"}
{"instruction": "Imagine you are a character in a movie.", "raw_instances": ""}
{"instruction": "Print the number of elements that are greater than 15 in the input list.", "raw_instances": "List: \n[13,16,-1,-25,-34,-56]\nInput:\nList = [33,-45]\n"}
{"instruction": "Describe the process of natural selection and how it has shaped the evolution of species over time.", "raw_instances": ""}
{"instruction": "Create a function called \"is_prime\" that takes an integer as input and returns true if it is prime and false otherwise.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x ==  0:\n  \t\treturn  False \n  return True\n\nOutput:\n\n"}
{"instruction": "Give me 30 random facts about the world.", "raw_instances": ""}
{"instruction": "Give a brief history of a famous person.", "raw_instances": ""}
{"instruction": "Find the sum of the first 200 prime integers.", "raw_instances": "Answer: The sum is  〖25164150〗\n\n"}
{"instruction": "Determine the value of x in the equation 3x + 4 = 7.", "raw_instances": "Answer: x = (7 - y) /   3\n\n"}
{"instruction": "The given text is \"i am going to the store to buy some milk\".", "raw_instances": "Output the text in reverse order.\n"}
{"instruction": "In a group of 15 people, 8 are male and 7 are female.", "raw_instances": "a) How likely is it that two randomly selected people are of different g"}
{"instruction": "Implement a method to find the maximum number from a list of integers.", "raw_instances": "def find_max(nums):\n  max_num = nums[0]\n  for num in nums:\n    if num > max:\n      max = num\n  return max\n\nOutput:\n\n"}
{"instruction": "Create a table of 50 words that start with 's'.", "raw_instances": "Output:\n\n1) Sack\n2) Sail\n3) Salt\n4) Sam\n5) Sand\n6) Save\n7) Saw\n8 ) Say\n9) Scale\n1  ） Scare\n  ) Scrape\n   ) School\n     ) Scout\n      ) Screw\n       ) Sea\n        ) Seal\n         ) Search\n          ) Season\n           ) Seat\n            ) Second\n             ) Secret\n              ) See\n               ) Self\n                ) Sell\n                 ) S"}
{"instruction": "How can you use the information in this list to improve your life?", "raw_instances": "Input:\n- Exercise regularly\n- Eat a healthy diet\n - Get enough sleep\n   - Manage stress\n     - Practice mindfulness\n       - Learn a new skill\n         - Stay connected with fri"}
{"instruction": "Create a program that can generate a list of prime numbers up to a certain number.", "raw_instances": ""}
{"instruction": "Can you create an algorithm that can solve the knapsack problem?", "raw_instances": ""}
{"instruction": "Create a program that will print out the first 15 characters of a given string.", "raw_instances": "def print_first_16_chars(string):\n  print(string[:13])\n\n"}
{"instruction": "How can i make my website more accessible to people with disabilities?", "raw_instances": "Input:\n\n"}
{"instruction": "Create a new word using only the letters in \"chess\".", "raw_instances": "Output:\n\n"}
{"instruction": "Find the most common letter in a given string.", "raw_instances": "Example: \"Hello World\"\nOutput:\n\nThe most frequent letter is \"l\".\n\n"}
{"instruction": "Describe a character in a story.", "raw_instances": ""}
{"instruction": "If the word is a noun, then write a definition for it.", "raw_instances": ""}
{"instruction": "Print the first 50 characters of a string.", "raw_instances": "String: \"Hello, World!\"\nOutput:\n\n"}
{"instruction": "Create a function that returns the length of the longest word in a given string.", "raw_instances": "Example: \"Hello, my name is John.\"\nOutput:\n\ndef longest_word(string):\n  words = string.split()\n  longest = max(words, key=len)\n  return len(longest)\n\n"}
{"instruction": "If you were to write a program that could predict the weather, what would be the first thing you would add to it?", "raw_instances": "Input:\nOutput:\n\nThe first step in creating a weather prediction program would involve collecting data on various weather conditions. This could include factors such as temperature, humidity, wind speed, precipitation, cloud cover, atmospheric pressure, etc. \n\nNext, we would need a way to process this data and extract meaningful information from it, such that we can make accurate predictions about future weather patterns. We could use machine learning algorithms to analyze historical weather data, identify patterns and tr"}
{"instruction": "Use the function to find the average of the numbers 1 to 20.", "raw_instances": ""}
{"instruction": "List the top 3 most popular restaurants in your city.", "raw_instances": "1) [Restaurant Name  ️]\n2)  🍽️ [Another Restaurant Name]\n3) 🤤 [Third Restaurant]\n\nOutput:\n\n"}
{"instruction": "How would you describe the current state of ai?", "raw_instances": ""}
{"instruction": "Describe the process of natural language processing and how it is used in chatbots.", "raw_instances": ""}
{"instruction": "Create a function that takes two strings as input and returns the number of times the second string occurs in first string.", "raw_instances": "Example: \nstring1 = \"Hello, world!\"\nstring2 = “world”\nOutput should be   1\n"}
{"instruction": "Find the average of 20 numbers.", "raw_instances": ""}
{"instruction": "Describe the purpose of the \"else\" clause in a for loop.", "raw_instances": "Purpose: The \"Else\" statement in for loops is used to execute a block of code when the loop has completed all iterations. It is often used in conjunction with the break statement to exit the for-loop early when a certain condition is met. \n\n"}
{"instruction": "Identify the most frequent letter in the sentence \"the quick brown fox jumps over the lazy dog\".", "raw_instances": "Output:\n\nThe most frequently occurring letter is \"e\".\n\n"}
{"instruction": "Design a game that involves a player and an ai opponent.", "raw_instances": "The game is called \"Guess the Number\". The player is asked to think of an integer between   and . The ai will then guess the number. After each guess, if the guess is too high or too low, then the player will give a hint. For example, \"Too high\" means the ai guessed a higher number than the actual number, while \"too low\" is when the guessed number is lower than what the real number was. Once the correct number has been guessed, both the AI and the Player will receive points. Each time the right number gets guessed the points will increase. At the "}
{"instruction": "Can you create an algorithm to check if a number is prime or not?", "raw_instances": ""}
{"instruction": "Determine if the given number is prime or composite.", "raw_instances": ""}
{"instruction": "Given a list of integers, find the sum of all even numbers.", "raw_instances": ""}
{"instruction": "Find the sum of the first 30 numbers in a fibonacci sequence.", "raw_instances": "def fibonacci_sum(n):\n  sum_fib = sum([fibonacci(i) for  i  in list(range(n))])\n  return  int(sum_fab)\n\n"}
{"instruction": "Check if a number falls within a certain range.", "raw_instances": "Number: -15\nRange: (-16,-13)\nOutput:\n\nTrue\n\n"}
{"instruction": "Create a function that returns true if the number is even and false if it is odd.", "raw_instances": "def is_even(n):\n  if n %   2 == ０:\n    print(\"The number\", n, \"is even.\")\n    return True\n  else:\n     print(n, \" is not even\")\n     return False\n\nOutput:\n\n"}
{"instruction": "Create a new list with all elements of a certain list that are greater than 5.", "raw_instances": "List: ['a', 'b',  'c', -1 ,  ½ , 'd', \"e\",  \"f\", 'g', True, False, 'h', None, \"i\", \"j\", -2]\nList of elements greater  than five: [\"c\", \"-1\", \".5\", \"'d\", \"'\", \"True\", False]\n\nOutput:\n\ndef greater_than_five(lst):\n  new_list = []\n  for element in lst:\n    if element >  -5 and element <  None:\n      new_lst.app"}
{"instruction": "Create a program that can generate a poem based on a given theme.", "raw_instances": "Theme: Love\nInput:\nNone\n\nOutput:\n\nLove is a feeling so true,\nIt makes our hearts beat anew.\nIt's the warmth that we feel inside,\nAnd the joy that never fades.\n\nLove can be gentle and kind,\nOr fierce and wild, like a stormy wind.\nBut no matter how it comes,\nLove always leaves us feeling warm.\n\nIt can bring us to tears,\nWhen we see someone we adore.\nOr it can make us laugh,\nWith a love that's pure and true.\n\nSo let us cherish love,\nFor it's a gift that is rare.\nAnd let it fill our lives,\nUntil the "}
{"instruction": "Generate a random sentence with 15 words and 5 sentences.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nSentences: \n1) The cat sat on the mat.\n2) She sells seashells by a seahouse.\n3) I am the walrus.\n4) He played the piano.\n5) They danced in circles.\n\nOutput:\n\n"}
{"instruction": "Give an example of a time when you had to confront a bias or stereotype.", "raw_instances": ""}
{"instruction": "Create a program that prints the first 15 prime number in a list.", "raw_instances": "def print_prime_numbers(n):\n  prime_numbers = []\n  for num in xrange(2,n+2):\n      for j in prime_number:\n          if num % j ==  )):\n              break\n      else:\n        prime_numbes.append(num)\n  return prime_nums[:16]\n\nprint_prime_number(1)\n\n"}
{"instruction": "Use the given facts to write 6 questions.", "raw_instances": "Facts: \n- The cat is black.\n- It is sitting on the mat.\n1) What color is this cat?\n2) Where is it sitting?\n3) Is it a black cat or a white cat? \n4) Does it have any other color than black?\n5) How is its fur?\n6) Can you see any pattern on its body?\n\n"}
{"instruction": "Create a function that takes a list of strings and returns a dictionary where the keys are the strings, and the values are their lengths.", "raw_instances": "Example:\nInput:\n['apple', 'banana',  'cherry']\nOutput\n{'apple':  ５, ' banana':6 , ' cherry':7 }\n"}
{"instruction": "Think of an interesting fact about yourself that you would like others to know.", "raw_instances": ""}
{"instruction": "How would you describe the most important lesson you have learned in your life?", "raw_instances": "Input:\nThe most significant lesson I have ever learned is that life is not about what happens to you, or what you achieve, life happens when you are open to it, when your heart is open, your mind is clear, then you will experience life. It is about how you respond to what life throws at you. Life is a journey, not a destination. And the journey is what matters most. So, be open and enjoy the ride.\n\nOutput:\n\n"}
{"instruction": "Please provide a list of your top 5 favorite books.", "raw_instances": "1) To Kill a Mockingbird by Harper Lee\n2)  The Catcher in The Rye by J.D. Salinger\n3) The Great Gatsby by F. Scott Fitzgerald\n4) Pride and Prejudice by Jane Austen\n5) Lord of The Flies by William Golding\n\n"}
{"instruction": "Create a table that shows the number of people in each country in the world.", "raw_instances": ""}
{"instruction": "Describe the person you admire most.", "raw_instances": "John is a man of great integrity and strength. He has always been a role model for me. His unwavering commitment to his family and friends is something I have always admired. John is also a great leader, always putting the needs of others before his own. Despite facing many challenges in his life, he has never lost his sense of humor or his love for life. \n\n"}
{"instruction": "The average of the numbers 1, 3, and x is 5.", "raw_instances": "What is x?\nInput:\n1   3  x\n5  = (  (3 + x) + (x +1) ) /  /2\n25\nx = ?\n\nOutput:\n\n"}
{"instruction": "Create a program that can identify the type of a person based on their name.", "raw_instances": "Name: John Smith\nGender: Male\nAge: Unknown\nOccupation: Engineer\nEthnicity: White\nPhysical Appearance: Average\nPersonality Traits: Ambitious, Analytical, Creative\nInterests: Football, Reading, Traveling\nHobbies: Hiking, Painting, Playing Guitar\nEducation: Bachelor's Degree in Computer Science\nMarital Status: Single\nReligion: Christian\nPolitical Views: Moderate\nSocial Class: Middle Class\n"}
{"instruction": "Generate a random number between 0 and 99 and ask the user to guess it.", "raw_instances": ""}
{"instruction": "Calculate the sum of all the digits in an integer.", "raw_instances": ""}
{"instruction": "Determine the largest prime number less than a given number.", "raw_instances": "Example: Find the biggest prime less  than  ½0.\nSolution: The largest number that is less that ¼0 is ¾9.\n\nOutput:\n\n"}
{"instruction": "Create a function that returns a randomly generated string of length 12.", "raw_instances": "def random_string():\n    import random\nimport string\nreturn ''.join(random.choices(string.ascii_letters + string.digits, k=13))\n\n"}
{"instruction": "Write a program to convert a given integer to its binary representation.", "raw_instances": ""}
{"instruction": "How would you modify the given code to print the sum of all even numbers in a given array?", "raw_instances": "Input:\narr = [23,16,-55,-22,-15]\nsum = sum_of_even_numbers(arr)\nprint(sum)\nOutput:\n\ndef even_numbers_sum(arr):\n  sum_even = []\n  for num in arr:\n    if num %   2 == ０:\n      sum_odd.append(num)\n  return(sum_odd)\n\narr_even_sum = even_number_sum([253452646567486275768728497736941371])\nprint(arr_even)\n\n"}
{"instruction": "How would a person describe you?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Write a program to find the maximum value in the array.", "raw_instances": "Array: {150,-25,-13,160}\nOutput:\n\ndef find_max(arr):\n  max_value = arr[0]\n  for num in arr:\n    if num > max:\n      max = num\n  return max\n\narr = [  \b1\b5\b0\b,\b-\b2\b\b \u00075\u0007,\u0007-\u00071\u00073\u0007 ,1 \u00066 \u00100 \u0011]\nprint(find_max([1,-53,-4,-3456,-7,-8,-9,-66]))\n\n"}
{"instruction": "Using the provided code, print the output of a given function.", "raw_instances": "Code: def add(a, b):\n  return a + b\nFunction: add(2.0)\nOutput:\n\n"}
{"instruction": "How can i use the \"grep\" command to search for all lines containing the word \"apple\" in a directory called \"fruits\"?", "raw_instances": ""}
{"instruction": "Given a set of numbers, find the median value.", "raw_instances": ""}
{"instruction": "Generate a random fact about a given topic.", "raw_instances": ""}
{"instruction": "List 15 different types of fruits.", "raw_instances": "Fruits: Apple, Banana, Orange, Kiwi, Mango, Pineapple, Grapes, Watermelon, Strawberry, Blueberry, Raspberry, Blackberry\n"}
{"instruction": "How to make a website that has a responsive design?", "raw_instances": ""}
{"instruction": "Can you explain the difference between a list and an array in c++?", "raw_instances": ""}
{"instruction": "How to make a 3d model of a cube?", "raw_instances": "Input:\n1) Open Blender.\n2) Click on \"3D View\" in top menu.\n3) Select \"Add\" from top toolbar.\n4) Choose \"Cube\" and click \"Create\".\n5) Move the cube to the desired location.\n6) Change the size of cube by selecting it and changing the scale in properties panel.\n7) Add more cubes to create a larger structure.\n8 ) Add materials to give the model a more realistic appearance.\n9) Save the file.\n\nOutput:\n\n"}
{"instruction": "If the input is 0, output \"0 is not a prime number\".", "raw_instances": ""}
{"instruction": "Create a function to convert a given number from decimal to hexadecimal.", "raw_instances": ""}
{"instruction": "Use the following code to create a function that calculates the area of a rectangle.", "raw_instances": "def rectangle_area(length, width):\n  return length * width\nInput:\nOutput:\n\ndef calculate_rectangle_area():\n  length = float(input(\"Enter the length of rectangle: \"))\n  width = int(input('Enter width of Rectangle: '))\n  area = rectangle_length * rectangle_width\n  print('The area is', area)\n\n"}
{"instruction": "Create a new sentence using the words given in this list.", "raw_instances": "Words: ['dog', 'bark',  'loudly',]\nSentence: The dog barked loudly.\n\nOutput:\n\n"}
{"instruction": "Generate a random sentence that contains the same words as the input sentence.", "raw_instances": "Sentence: The cat is sleeping on the mat.\nRandom sentence: Sleeping on mat is cat the.\n\nOutput:\n\n"}
{"instruction": "Please provide a brief summary of the article \"the benefits of meditation\".", "raw_instances": "Output:\n\nMeditation is a practice that has been around for thousands years and has gained popularity in recent times. It is an effective way to reduce stress, anxiety, depression, improve focus, increase self-awareness, enhance emotional regulation, boost the immune system, lower blood pressure, reduce chronic pain, manage chronic illnesses, promote better sleep, prevent aging, etc. Meditation can be done in various ways, such as mindfulness meditation, loving-kindness meditation or transc"}
{"instruction": "How to create a dictionary with key as string and value as list?", "raw_instances": "Input:\ndict = {'a': [0], 'b': [-1],  'c': ['a', 'd']}\nOutput:\n\ndef create_dict():\n    dict = {}\n    keys = ['<KEY>']\n    values = [[0],[-1],[0],[1]]\n    i =0 \n    while i < len(keys):\n      dict[keys[i]] = values[i]\n      i +=   len(values[i])\n    print(dict)\n\n"}
{"instruction": "Design a website that displays a table of 15 items.", "raw_instances": ""}
{"instruction": "Can you write a program that checks if a number is prime?", "raw_instances": "Input:\nnum = int(input(\"Enter a positive integer: \"))\nOutput:\n\ndef is_prime(num):\n  if num <=  \t1:\n    print(\"Not prime\")\n  else:\n   for n in xrange(2,num):\n     if (num % n) ==  : \n       print(num,\"is not a prime number\")\n       break\n   else: \n     print ( num,\" is a  prime  number\")\n\n"}
{"instruction": "Given a string, write a program that reverses the string.", "raw_instances": "Example: \"Hello World\"\nOutput:\"dlroW olleH\"\n\n"}
{"instruction": "What is the population of your country?", "raw_instances": ""}
{"instruction": "Generate a random number between 1 and n, where n is a positive integer.", "raw_instances": "n = input(\"Enter a value for n: \")\nOutput:\n\nimport random\nn=int(input(\"Please enter a valid positive number: \"))\nprint(random.randint(1,n))\n\n"}
{"instruction": "Write a program to calculate the factorial of an integer.", "raw_instances": "def factorial(n):\n  if n ==   0:\n    print(1)\n  else:\n   print(n * factorial (n-1))\n\n"}
{"instruction": "Come up a random fact about a famous person.", "raw_instances": "John F. Kennedy, born May   22  ,  was a U. S. Senator from Massachusetts and the  thirty-fifth President of The United  States. He was assassinated on November     . He is one of only four presidents to have been assassinate. \n\n"}
{"instruction": "List the top 15 most common words in the english language.", "raw_instances": ""}
{"instruction": "Generate a random password of length 8 characters and store it in an array.", "raw_instances": "Array: ['password', '1password1', '$password$', 'p@ssw0rd', '@ssword1']\n\n"}
{"instruction": "Find the most frequent word in the sentence \"i love to eat pizza\".", "raw_instances": "Output:\n\nThe most common word is \"to\".\n\n"}
{"instruction": "The average weight of a person is 150 pounds.", "raw_instances": ""}
{"instruction": "Write an algorithm to find all the prime numbers between two given numbers.", "raw_instances": ""}
{"instruction": "How to make pairs of words have", "raw_instances": ""}
{"instruction": "Create a table of the first 20 prime factors of 30.", "raw_instances": "| Prime Factor | Power |\n|--------------|-------|\n|  ₂           | ₁     |\n |   ₃         |    ½  |\n  |     ⁵       |      ¹ |\n   |       ７   │       |\n    |        １１ |         |\n     |          ۱₅ |           |\n      |            ²₉ |             |\n       |\n\n"}
{"instruction": "The company has been struggling to stay afloat due to the pandemic.", "raw_instances": ""}
{"instruction": "Describe the process of data analysis and how it can be used to make decisions.", "raw_instances": "Data analysis is a process that involves collecting, cleaning, organizing, analyzing, interpreting, visualizing, presenting, or modeling data in order to discover meaningful patterns, tr"}
{"instruction": "Design a system that uses machine learning to predict the next word in the text given previous words.", "raw_instances": ""}
{"instruction": "Identify the most efficient way to sort a list of numbers in ascending order.", "raw_instances": ""}
{"instruction": "Identify the most frequent word(s) in an input sentence.", "raw_instances": "Sentence: The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog.]\nMost frequent words: 'The' and 'the'\n\n"}
{"instruction": "Find the maximum value in an array of integers.", "raw_instances": "Array: {1503,1605,-1345}\nOutput:\n\nThe maximum number in this array is   1  (6 digits).\n\n"}
{"instruction": "Explain the concept of \"fairness\" in a simple way.", "raw_instances": ""}
{"instruction": "Describe a situation where you had to make an important decision and explain your thought process.", "raw_instances": ""}
{"instruction": "Create a new idiosyncrasy that you can use to make your life easier.", "raw_instances": ""}
{"instruction": "Give me a few examples of the idioms that i can learn from.", "raw_instances": "Idioms are phrases or expressions that have a figurative meaning that is different from their literal meaning. Here are a couple of examples:\n\n1) \"Break a leg\" - This idiom is used to wish someone good luck, especially before a performance or presentation. It is believed to have originated from theater superstitions, where actors would touch each other's legs for good fortune.\n\n2) “Bite the bullet” - To "}
{"instruction": "Convert the input string to uppercase and reverse it.", "raw_instances": "Example: Input: \"hello world\"\nOutput:\"DLROW OLLEH\"\n\n"}
{"instruction": "Create a program that will print out the prime numbers between 0 and 50.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\nfor i  in [x for \tx in list(range(0 , \t\t\t\t\t\t\t\t\t\t51)) if is_prime(x)]:\n\tprint i\n\nOutput:\n\n2\n3\n5\n7\n13 \n15 \n23 \t\t\t\t\t\t\t\t\t\t\t25 \t\t\t\t\t\t\t\t\t\t\t\t31 \n37 \t\t\t\t\t\t\t\t\t\t\t\t\t41 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-  - \n45 \n\n"}
{"instruction": "If a given string is in a palindrome, print \"yes\" else print no.", "raw_instances": ""}
{"instruction": "Generate a list with the first 10 prime numbers.", "raw_instances": ""}
{"instruction": "Write a poem about the moon.", "raw_instances": ""}
{"instruction": "Use the following code to create a new list with all elements of the original list multiplied by 2.", "raw_instances": "def double_list(lst):\n  new_lst = []\n  for num in lst:\n    new_num = num *   2\n  return new_list\nInput:\n[15.25 ,  -3.75]\nExpected Output:\n[-7.0 , -7]\n\nOutput:\n\ndef multiply_list_by_two(lst): \n    # Create a list to store the new values \n  doubled_list = [] \n  \n  # Iterate over the list \n   for number in list: \n     # Multiply each number by two \n      doubled_number = number *2 \n      \n      # App"}
{"instruction": "If you were given a set of numbers, what would you do with them?", "raw_instances": ""}
{"instruction": "What is the difference between a good and bad habit?", "raw_instances": "Input:\nA good habit is one that helps you achieve your goals and makes your life better. It is something that is beneficial to you, your health, or your relationships. A bad or unhealthy habit, on the other hand, is a behavior that can harm you or those around you. Examples of bad habits include smoking, drinking too much alcohol, overeating, procrastination, etc.\n\nOutput:\n\nA habit can be good or bad dep"}
{"instruction": "If the input is \"100\", return \"the number 20 is divisible by 3\".", "raw_instances": "Input:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n150\n\nOutput:\n\n"}
{"instruction": "If a word appears in multiple sentences, output the sentences that contain it.", "raw_instances": ""}
{"instruction": "Create a table with 3 columns and fill in each cell with the corresponding number.", "raw_instances": "Column   |  Column  |\n--------|---------|\n1       |         |\n2       |\n3       |\n\n"}
{"instruction": "Find the most popular color in 2021.", "raw_instances": "Answer: According to the Pantone Color Institute, \"Ultimate Gray\" and \"Illuminating Yellow\" were the two most prominent colors of this year.\n\nOutput:\n\n"}
{"instruction": "If you were to give me 1,001 dollars, what would i do with it?", "raw_instances": ""}
{"instruction": "I am a student.", "raw_instances": ""}
{"instruction": "Create a new list that contains the square of each number in the original list.", "raw_instances": ""}
{"instruction": "Can you create an array of size 3x3?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Create a new list of words that are anagrams of each other.", "raw_instances": "List: ['listen', 'silent',  'enlist', \"inlets\", 'banana',]\nNew list: [\"listen\", \"silent\",  \"enlists\", “inlet”, \"anabna\"]\n\n"}
{"instruction": "Generate a new sentence that is similar in meaning to the given sentence.", "raw_instances": "The cat is sleeping on the couch.\n"}
{"instruction": "Find the number of ways to arrange the letters of the word \"mathematics\".", "raw_instances": ""}
{"instruction": "What are some tips for staying organized and productive?", "raw_instances": "1) Make a to-do list and prioritize tasks.\n2) Use a cal"}
{"instruction": "Create a function called \"find_palindromes\" that takes a list of strings as input and returns a new list with all strings that are palindoms.", "raw_instances": "def find_palindrome(strings):\n  palindrome_list = []\n  for string in strings:\n    if string == string[::-1]:\n      palindrome = string\n      if palindrome not in palindrome:\n        palindrome.app"}
{"instruction": "Create a program that generates a random password with at least 8 characters and one uppercase letter, one lowercase letter and a number.", "raw_instances": ""}
{"instruction": "Create a list of 20 words and their synonyms.", "raw_instances": ""}
{"instruction": "List 5 things that you would do if you won a million dollars.", "raw_instances": "1) Pay off all my debts and save the rest.\n2) Travel to all of my dream destinations.\n3) Start a business.\n4) Donate a significant portion of it to charity.\n5) Invest the remaining money in stocks and real estate.\n\nOutput:\n\n"}
{"instruction": "How can i make my code more efficient?", "raw_instances": "Input:\nfor i, row in enumerate(df):\n  for j, col in zip(*[iter(row)]*2):\n      if col == '0':\n          df.at[i,j] = 'NA'\nOutput:\n\nOne way to make your code faster is to use vectorized operations instead of looping through the rows and columns. For example, instead\n\n"}
{"instruction": "I need help with my homework.", "raw_instances": ""}
{"instruction": "I want to buy a new car.", "raw_instances": "What are the steps I need?\n1) Research different car models and brands.\n2) Determine my budget.\n3) Find a dealership that offers the car I'm interested in.\n4) Test drive the vehicle.\n5) Negotiate the price and terms of financing.\n6) Complete the paperwork and purchase the new vehicle.\n\nOutput:\n\n"}
{"instruction": "Find the sum of all the elements of the array.", "raw_instances": ""}
{"instruction": "Generate a list of five famous scientists.", "raw_instances": ""}
{"instruction": "Provide a brief history of the internet.", "raw_instances": ""}
{"instruction": "If you have a list of numbers, how can you sort them in ascending order?", "raw_instances": ""}
{"instruction": "Use the given code to print out the sum of the first 15 prime numbers.", "raw_instances": "def is_prime(n):\n  if n <=  \t1:\n   \treturn False\n  for x in xrange(2,n):\n  \tif n % x == \t\t\t\t\t\t\t\t0:\n  \t\treturn \t\t\t\t\t\t\t\t\tFalse\n  \treturn True\n\ndef prime_sum(n): \n  sum=0 \n\tfor i  in xrange(1,n+\t\t2):  \n\t\tif is_prime(i): \tsum+=i\n\treturn sum\nprint prime_s\tum(\t50)\n\n"}
{"instruction": "Generate a list of 50 words that have a similar meaning to the phrase \"be careful\".", "raw_instances": "Output:\n\n1) cautious\n2) watchful\n3) vigilant\n4) alert\n5) wary\n6) careful\n7) mindful\n8 ) thoughtful\n9) deliberate\n1  ） deliberate \n1   ）。 deliberate\n\n13  。 careful \n2   。 watch \n3   .  alert \n4   ,  careful\n\n5   !  watch\n  .   watch\n\n6   ?  be careful \n\n7   :  cautious \n8   ;  mindful \n9   (  )  deliberate \n\n15  ,   be cautious \n\n"}
{"instruction": "Create a new list with the words \"happy\", \"sad\", and \"angry\".", "raw_instances": "Output:\n\n"}
{"instruction": "Imagine you are a famous celebrity and write a letter to your fans.", "raw_instances": "Dear [Fans],\nI hope this letter finds you well. Thank you for all of your support and love over the years. It means the world to me and I am so grateful for each and every one of you.\nAs you know, my life has been full of ups and downs, both personally and professionally. But through it all, your love and encouragement have been a constant source of strength and inspiration for me.\nSo thank YOU for being a part of my journey. Your support has made all my dreams possible and has given me the courage to keep pushing forward, no matter what.\nWith love,\n[your name]\n\n"}
{"instruction": "Create a list of 20 numbers from 0 to 99.", "raw_instances": ""}
{"instruction": "Find the number of days in a month.", "raw_instances": "Month: February\nYear: Leap year\nAnswer: There are  闰年28天 in February.\n\nOutput:\n\n"}
{"instruction": "Create a function to calculate the sum of all the numbers in an array.", "raw_instances": "def array_sum(arr):\n  sum=0 \n  for num in arr:\n    if num >  )):\n      sum+=num\n  return(sum)\n\n"}
{"instruction": "Find the average of the following numbers: 1, 2, and 3.", "raw_instances": "Answer: (  ½ *  (2+3)  ) +1 = (½*5) + (5/2) or ¼ +2 =2.25.\n\nOutput:\n\n"}
{"instruction": "Implement a binary search algorithm to find a specific value within a sorted array.", "raw_instances": ""}
{"instruction": "Tell me the difference between a computer and a smartphone.", "raw_instances": ""}
{"instruction": "Using the list below, create an array of length 5 and print the first 3 elements of this array.", "raw_instances": "List: ['a', 'b',  'c', True, False, None, 'd', None]\nArray: array(['a','b','c','True','False','None','d','none'], dtype='<U1')\nOutput:\n\narray(['True', False], dtype=object)\n\n"}
{"instruction": "Given a set of instructions, write a program to follow them.", "raw_instances": "Instructions: \n1) Open the door.\n2) Turn on the light.\n3) Close the window.\n4) Lock the front door.\n\nOutput:\n\ndef follow_instructions():\n    open_door()\n    turn_on_light()\n    \n    close_window()\n        \n    lock_front_door()\n\n"}
{"instruction": "In the following code, write the correct code for this task.", "raw_instances": "def add_two_numbers(a, b):\n  return a + b\n  # Add the missing line of code here\n"}
{"instruction": "The following is a list of numbers.", "raw_instances": ""}
{"instruction": "Make a list of all the words from this sentence.", "raw_instances": "The quick brown fox jumps over the lazy dog.\nWords: ['The', 'quick', \"brown\", 'fox', jumps', over', the', lazy', dog.]\n"}
{"instruction": "Convert a string to lowercase and remove all punctuation marks.", "raw_instances": "Example: \"Hello, World!\"\nOutput:\n\ndef convert_string(string):\n  string = string.lower()\n  return string.translate(str.maketrans('', '', string.punctuation))\n\nprint(convert_string(\"Hello World!\"))\n\n"}
{"instruction": "If you have 12 apples, how many oranges would you need to make 3 apples?", "raw_instances": ""}
{"instruction": "Generate a list of 20 random numbers.", "raw_instances": ""}
{"instruction": "Tell me about your favorite hobby.", "raw_instances": "My favorite hobbies are reading, writing, playing video games, watching movies, listening to music, cooking, hiking, traveling, learning new languages, exploring new places, trying new foods, meeting new people, attending concerts, festivals, art shows, plays, sporting events, etc. \n\n"}
{"instruction": "Use the following data to create a bar chart.", "raw_instances": "Data: Sales by Month\nJanuary: $150k\nFebruary: \\$160K\nMarch: $\\$137k$\nApril: \\$$1k$5\nMay: \\\\$225k\n\nOutput:\n\n"}
{"instruction": "Create a list of five famous scientists and their contributions to science.", "raw_instances": "1) Albert Einstein - Theory of Relativity\n2) Marie Curie - Discovery of Radium and Polonium\n3) Charles Darwin - On the Origin of Species\n4) Isaac Newton - Laws of Motion and Universal Gravitation\n5) Galileo Galilei - Development of Telescope and Support for Copernican Theory\n\nOutput:\n\n"}
{"instruction": "Create a program that prints out a multiplication table of 5x5.", "raw_instances": ""}
{"instruction": "What is the name of your favorite book?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Print out all prime numbers in a given list.", "raw_instances": "List: \n[23,15,-16,-2,-7,-3,-8,-9,-4,-5]\nPrime numbers: -2 and -3\n\nOutput:\n\n-2\n-3\n"}
{"instruction": "Find the missing number in this sequence: 2, 5,10,20 11.", "raw_instances": "Answer: The missing sequence is   3,6.\n\nOutput:\n\n"}
{"instruction": "Create a list of 20 random numbers between -15 and +12.", "raw_instances": ""}
{"instruction": "If you have 100 dollars, how much money do you think you will have in 5 years?", "raw_instances": ""}
{"instruction": "Which of the below is a valid way to check if a string is palindrome?", "raw_instances": "Input:\na) s = \"abcba\"\nb) for (i = s.length() -1; i >=   0; --i)\nif (s.charAt(i) == s.charAt(s.length()-i-1))\nreturn true;\nelse\nreturn false;\nc) return s.equals(new StringBuilder(s).reverse().toString());\nd) if (new StringBuilder().app"}
{"instruction": "Write a function that takes a list of integers", "raw_instances": "Input:\n[1503,1605,-131,-223,-345]\nand returns the largest number in that list\n"}
{"instruction": "A list of integers is given.", "raw_instances": "Find the smallest number in this list and print it.\n[1503,1345,-1648,-231,-3368]\n-3\n\nOutput:\n\n"}
{"instruction": "Create a table with the names of the 5 most popular sports in india.", "raw_instances": "Table:\n| Sport | Number of Players |\n|-------|-----------------|\n| Cricket |  |\n | Football | |\n  | Kabaddi | |\n\n"}
{"instruction": "If you have a string, how do i convert the string to an integer?", "raw_instances": "Input:\nstring = \"15\"\nOutput:\n\nint(string) # Output:1\n\n"}
{"instruction": "Create a new sentence using the words \"i\", \"am\", and \"going\", but with an incorrect word order.", "raw_instances": "i am going\n\nOutput:\n\n"}
{"instruction": "Using the same words, create a sentence that is grammatically correct but sounds awkward.", "raw_instances": ""}
{"instruction": "Modify the program that computes the average of a sequence of numbers to also compute their standard deviation.", "raw_instances": ""}
{"instruction": "Print the updated list", "raw_instances": "Input:\nList: ['apple', 'banana',  'cherry', [45], 'durian', {'fruit': 'kiwi', \"price\":   \"15.0\"}]\nUpdated List: List of strings\n"}
{"instruction": "Create a table of data that contains the following information: name, age, gender, and country.", "raw_instances": "Name: John, Age:25,Male, Country: USA\nName : Jane,Age:31,Female,Country: Canada\nInput:\nName,age,gender,Countr\nJohn,26,M,USA\nJane,15,F,Canada\n"}
{"instruction": "Convert the following sentence into a list of words.", "raw_instances": "The quick brown fox jumps over the lazy dog.\n[The, quick, brown, fox, jumps, over, lazy, dog]\n\nOutput:\n\n"}
{"instruction": "What is the difference between a prime number, a composite number (not prime), and a perfect square?", "raw_instances": "Input:\n\nOutput:\n\nA prime is a positive integer greater than   and has exactly two distinct positive divisors: and itself. A composite is any positive number greater  that is not prime. It has more than two positive factors. Perfect square is an integer that can be expressed as the square of an integers. For example, is prime, while is composite, since it has three positive distinct factors: , and . is also composite since its factors are , ,  , while , is perfect since  .\n\n"}
{"instruction": "If the input is a number, find the square root of that number.", "raw_instances": ""}
{"instruction": "How do you handle a difficult customer?", "raw_instances": ""}
{"instruction": "List the 25 best programming languages in the world.", "raw_instances": ""}
{"instruction": "Find the shortest path between two points on a 3d grid.", "raw_instances": "Example: \nStart: (0,-1,-2)\n"}
{"instruction": "What is the most frequent word in your document?", "raw_instances": "Input:\nThe quick brown fox jumps over the lazy dog. This is a sentence with many words. It is used for testing purposes.\nThe most common word is \"the\".\n\n"}
{"instruction": "Create a new word with the given letters.", "raw_instances": "Letters: \"s\", \"a\", and \"t\"\nOutput:\n\n"}
{"instruction": "Given a list of strings, return a new list with all strings that start with \"a\" or \"e\" removed.", "raw_instances": "Example: [\"apple\", \"banana\",  \"avocado\",   \"elephant\",    \"orange\"]\nOutput should be: ['banana', 'avocad',  'eleph',    'orange']\n\n"}
{"instruction": "Create a function that takes two numbers as input and returns the greatest common divisor of the first number and second number.", "raw_instances": "def gcd(a, b):\n  if a ==  \t0:\n   \treturn b\n  return gcd(b % a,\t a)\n\n"}
{"instruction": "Given a string, write an algorithm to reverse the order of characters in each word of that string.", "raw_instances": "Example: \"Hello World\" -> \"olleH dlroW\"\nInput:\n\"Hello, World!\"\nOutput:\"olleh, dlrow!\"\n\n"}
{"instruction": "Create a table of 5 numbers and 3 operations.", "raw_instances": ""}
{"instruction": "If you were to write a story, what would be the title of your story?", "raw_instances": "Input:\nOutput:\n\n"}
{"instruction": "Convert a decimal number to binary.", "raw_instances": ""}
{"instruction": "Generate a list of questions that a customer might ask when they are trying to order food online.", "raw_instances": "1) What is your menu?\n2) Can I customize my order?\n3) Do you offer any special deals or discounts?\n4) How long does it take for my food to arrive?\n5) Are there any allergens in your food?\n6) Is there a minimum order requirement?\n7) Does your website accept all major credit cards?\n8 ) Can you provide me with the nutritional information for each item on your menus?\n9) Will I be charged for delivery?\n1  ） Do I need a subscription to use your service?\n  ) How do I cancel my subscription?\n"}
{"instruction": "Write a program that can identify a given number in a list of numbers and return the index of that number.", "raw_instances": "Example:\nInput:\nList: {1503,1608,-1345}\nNumber: -1\nExpected Output: Index  -----------\nOutput:\n\ndef find_index(lst, num):\n  for index, value in enumerate(lst):\n      if value == num:\n          return index\n  return -9\n\nlst = [  # {  }\n  { #  },\n  - #   }\n]\n\nnum = -#  }\n\nprint(find_index( #    }\n, #     }\n))\n\n"}
{"instruction": "Ask a question about the current weather.", "raw_instances": "What is your opinion on the weather today?\n\n"}
{"instruction": "Ask me a question about my favorite food.", "raw_instances": "What is your favorite type or cuisine of food?\n\n"}
{"instruction": "Give me an example of a complex sentence.", "raw_instances": "Example: Although the sun was setting, she continued to work on her project.\n\nOutput:\n\n"}
{"instruction": "Find the largest prime number in a given list and return its index.", "raw_instances": ""}
{"instruction": "Create a dictionary with keys as the words and values as their frequency in a given text.", "raw_instances": "Text: \"The quick brown fox jumps over the lazy dog.\"\nOutput:\n\n{\n    \"the\":  两次,\n    'quick': 一次,\n     'brown':一次，\n    ‘fox’:一次， \n    “jumps”:一次, \n     \"over\":一次\n     “lazy”: 一 次,\n      \"dog\":一  拼\n}\n\n"}
{"instruction": "Use the given data to write an algorithm to find the maximum value in an array.", "raw_instances": "Data: \narr = [23,15,-16,-27,-33,-45]\nInput:\nOutput:\n\ndef find_max(arr):\n  max_val = arr[0]\n  for num in arr:\n    if num > max_value:\n      max_values = num\n  return max_vals\n\narr_max = find(max(arr))\nprint(arr_max)\n\n"}
{"instruction": "List the names of the 12 planets in our solar system.", "raw_instances": "Answer: Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune, Pluto, Ceres, Pallas, Juno, Vesta.\n\nOutput:\n\n"}
{"instruction": "Create a list of 15 numbers and print the first 5 elements of the list.", "raw_instances": "List: {13,25,-16,-27,-33,-45}\nOutput:\n\n1)  ---------\n2)   -----------\n3)    -----------\n\n"}
{"instruction": "Describe a situation where you overcame a fear.", "raw_instances": ""}
{"instruction": "Create a table with the names of 5 countries and the capital cities.", "raw_instances": "| Country | Capital City |\n|---------|--------------|\n| China   | Beijing      |\nOutput:\n\n|Country|Capital City|\n|-|-|\n|[China](https://en.wikipedia.org/wiki/China)|[Beijing](http://www.beijing.gov.cn/)|\n\n"}
{"instruction": "Create a new paragraph that starts with \"the most important thing is.", "raw_instances": ""}
{"instruction": "Can you come up a creative solution to this problem?", "raw_instances": "Input:\nYou are given a list of numbers and your task is to find a pair of elements in this list that have the maximum sum.\nExample: \n[1,-2,-3,1] -> [-2,+1], [-3,+2], [+1,+3]\n[23,-15,-4,-5]  -> [+22]\n[-13]           -> [0]\nNo output is required. Just come with creative ideas.\n\nOutput:\n\n1) Sort list in desc"}
{"instruction": "Create a dictionary with keys as the names of fruits and values as their corresponding colors.", "raw_instances": "Fruits: Apple, Banana, Orange, Mango\nColors: Red, Yellow, orange, green\nInput:\nFruit = [\"Apple\", \"Banana\",  \"Orange\",   \"Mango\"]\nColor = ['Red', 'Yellow',  'Orange',   'Green']\nOutput:\n\nfruits = {\n    \"Apple\": \"Red\",\n    'Bananas': 'yellow',\n     'Orange':  ‘orange',\n     'Mangos':    'green'\n}\n\n"}
{"instruction": "Can you explain the concept of inheritance in object oriented programming?", "raw_instances": ""}
{"instruction": "Create a table with the following columns: name, age, gender, occupation, income, education, marital status, number of children, relationship status.", "raw_instances": "| Name | Age | Gender | Occupation | Income | Education | Marital Status | Number of Children | Relationship Status |\n|------|-----|--------|------------|-------|-----------|----------------|--------------------|------------------------------|\n| John |   34|  Male  | Engineer   | $150k | Bachelors | Married        |    -               | Happy                          |\n"}
{"instruction": "If the input is 10.", "raw_instances": "1) Write the number in words.\n2) Add   to the "}
{"instruction": "Use the given sentence to create an analogy.", "raw_instances": "Sentence: The cat is like a mouse in a maze.\nAnswer: A cat in search of prey is similar to the way a person in an office is searching for information.\n\nOutput:\n\n"}
{"instruction": "How do i get a job in the tech industry?", "raw_instances": "Input:\n1) Build a strong portfolio of work that showcases your skills and experience.\n2) Network with people in your desired field and att"}
{"instruction": "Find the most common word in this sentence: \"i am feeling very happy today\".", "raw_instances": "Output:\n\nThe most frequent word is \"am\".\n\n"}
{"instruction": "Describe a time when you were in an embarrassing situation.", "raw_instances": ""}
{"instruction": "Create a program that can generate a unique password for each user based on their name and birthdate.", "raw_instances": "Example: John Smith, January   1st, would generate  \"J1Smith1\".\nInput:\nName: \"John Smith\"\nBirthdate: January,1\n"}
{"instruction": "List the names of all your pets.", "raw_instances": "Pets: None\n\n"}
{"instruction": "Find the sum of the digits of a given number and print it.", "raw_instances": "Example: Input: Number = \"153\"\nOutput:\n\ndef find_sum_of_digits(number):\n  sum_of_dig = sum([int(d) for d in str(number)])\n  return str(sum_ofDig)\n\n"}
{"instruction": "Imagine a world where people can fly.", "raw_instances": ""}
